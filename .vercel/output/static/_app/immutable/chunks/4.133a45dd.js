import{_ as Ew}from"./preload-helper.41c905a7.js";import{y as Oi,A as nu,B as ww,C as Lr,s as Wr,e as La,i as Kn,d as mn,z as Ia,f as wf,g as Tf,D as n0,j as sn,E as i0,F as iu,G as ru,h as Io,x as r0,H as zr,r as $o,u as Qo,v as jo,w as el,I as To,J as Fi,K as s0,o as dd,a as So,c as bo,L as yg,M as Mg,q as Sg,p as Tw}from"./scheduler.bea104e2.js";import{S as Xr,i as qr,a as jt,t as an,b as Ir,d as Ts,m as Ur,e as Dr,c as su,g as au}from"./index.520d9713.js";import{w as ei,d as Aw}from"./index.b6975e4a.js";const Rw=!1,a0=typeof window<"u";let Cw=a0?()=>window.performance.now():()=>Date.now(),o0=a0?r=>requestAnimationFrame(r):Oi;const Ra=new Set;function l0(r){Ra.forEach(e=>{e.c(r)||(Ra.delete(e),e.f())}),Ra.size!==0&&o0(l0)}function Pw(r){let e;return Ra.size===0&&o0(l0),{promise:new Promise(t=>{Ra.add(e={c:r,f:t})}),abort(){Ra.delete(e)}}}const Lw=Rw;function bg(r){return Object.prototype.toString.call(r)==="[object Date]"}function Iw(r){return-.5*(Math.cos(Math.PI*r)-1)}function Af(r,e){if(r===e||r!==r)return()=>r;const t=typeof r;if(t!==typeof e||Array.isArray(r)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(r)){const n=e.map((i,s)=>Af(r[s],i));return i=>n.map(s=>s(i))}if(t==="object"){if(!r||!e)throw new Error("Object cannot be null");if(bg(r)&&bg(e)){r=r.getTime(),e=e.getTime();const s=e-r;return o=>new Date(r+o*s)}const n=Object.keys(e),i={};return n.forEach(s=>{i[s]=Af(r[s],e[s])}),s=>{const o={};return n.forEach(c=>{o[c]=i[c](s)}),o}}if(t==="number"){const n=e-r;return i=>r+i*n}throw new Error(`Cannot interpolate ${t} values`)}function c0(r,e={}){const t=ei(r);let n,i=r;function s(o,c){if(r==null)return t.set(r=o),Promise.resolve();i=o;let u=n,h=!1,{delay:d=0,duration:m=400,easing:p=ww,interpolate:g=Af}=nu(nu({},e),c);if(m===0)return u&&(u.abort(),u=null),t.set(r=i),Promise.resolve();const v=Cw()+d;let M;return n=Pw(x=>{if(x<v)return!0;h||(M=g(r,o),typeof m=="function"&&(m=m(r,o)),h=!0),u&&(u.abort(),u=null);const _=x-v;return _>m?(t.set(r=o),!1):(t.set(r=M(p(_/m))),!0)}),n.promise}return{set:s,update:(o,c)=>s(o(i,r),c),subscribe:t.subscribe}}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const fu="153",Uw={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Dw={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},u0=0,Rf=1,h0=2,Nw=3,Ow=0,pd=1,f0=2,Ii=3,hr=0,In=1,Ui=2,Fw=2,cr=0,Ss=1,Cf=2,Pf=3,Lf=4,d0=5,gs=100,p0=101,m0=102,If=103,Uf=104,g0=200,_0=201,v0=202,x0=203,md=204,gd=205,y0=206,M0=207,S0=208,b0=209,E0=210,w0=0,T0=1,A0=2,ou=3,R0=4,C0=5,P0=6,L0=7,tl=0,I0=1,U0=2,Bi=0,D0=1,N0=2,O0=3,F0=4,B0=5,du=300,Hr=301,Gr=302,Uo=303,Do=304,Ba=306,No=1e3,wn=1001,Oo=1002,Qt=1003,lu=1004,Bw=1004,Ao=1005,zw=1005,en=1006,_d=1007,Hw=1007,kr=1008,Gw=1008,ur=1009,z0=1010,H0=1011,pu=1012,vd=1013,lr=1014,Di=1015,Ua=1016,xd=1017,yd=1018,Nr=1020,G0=1021,$n=1023,k0=1024,V0=1025,Or=1026,As=1027,W0=1028,Md=1029,X0=1030,Sd=1031,bd=1033,Zc=33776,Jc=33777,Kc=33778,$c=33779,Df=35840,Nf=35841,Of=35842,Ff=35843,q0=36196,Bf=37492,zf=37496,Hf=37808,Gf=37809,kf=37810,Vf=37811,Wf=37812,Xf=37813,qf=37814,Yf=37815,Zf=37816,Jf=37817,Kf=37818,$f=37819,Qf=37820,jf=37821,Qc=36492,Y0=36283,ed=36284,td=36285,nd=36286,Z0=2200,J0=2201,K0=2202,Fo=2300,Bo=2301,jc=2302,vs=2400,xs=2401,zo=2402,mu=2500,Ed=2501,kw=0,Vw=1,Ww=2,wd=3e3,Fr=3001,$0=3200,Q0=3201,Yr=0,j0=1,Br="",ct="srgb",bi="srgb-linear",Td="display-p3",Xw=0,eu=7680,qw=7681,Yw=7682,Zw=7683,Jw=34055,Kw=34056,$w=5386,Qw=512,jw=513,eT=514,tT=515,nT=516,iT=517,rT=518,ev=519,tv=512,nv=513,iv=514,rv=515,sv=516,av=517,ov=518,lv=519,Ho=35044,sT=35048,aT=35040,oT=35045,lT=35049,cT=35041,uT=35046,hT=35050,fT=35042,dT="100",id="300 es",cu=1035,Ni=2e3,Go=2001;class dr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const bn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Eg=1234567;const bs=Math.PI/180,Da=180/Math.PI;function jn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(bn[r&255]+bn[r>>8&255]+bn[r>>16&255]+bn[r>>24&255]+"-"+bn[e&255]+bn[e>>8&255]+"-"+bn[e>>16&15|64]+bn[e>>24&255]+"-"+bn[t&63|128]+bn[t>>8&255]+"-"+bn[t>>16&255]+bn[t>>24&255]+bn[n&255]+bn[n>>8&255]+bn[n>>16&255]+bn[n>>24&255]).toLowerCase()}function Zt(r,e,t){return Math.max(e,Math.min(t,r))}function Ad(r,e){return(r%e+e)%e}function pT(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function mT(r,e,t){return r!==e?(t-r)/(e-r):0}function Ro(r,e,t){return(1-t)*r+t*e}function gT(r,e,t,n){return Ro(r,e,1-Math.exp(-t*n))}function _T(r,e=1){return e-Math.abs(Ad(r,e*2)-e)}function vT(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function xT(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function yT(r,e){return r+Math.floor(Math.random()*(e-r+1))}function MT(r,e){return r+Math.random()*(e-r)}function ST(r){return r*(.5-Math.random())}function bT(r){r!==void 0&&(Eg=r);let e=Eg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function ET(r){return r*bs}function wT(r){return r*Da}function rd(r){return(r&r-1)===0&&r!==0}function cv(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function uu(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function TT(r,e,t,n,i){const s=Math.cos,o=Math.sin,c=s(t/2),u=o(t/2),h=s((e+n)/2),d=o((e+n)/2),m=s((e-n)/2),p=o((e-n)/2),g=s((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":r.set(c*d,u*m,u*p,c*h);break;case"YZY":r.set(u*p,c*d,u*m,c*h);break;case"ZXZ":r.set(u*m,u*p,c*d,c*h);break;case"XZX":r.set(c*d,u*v,u*g,c*h);break;case"YXY":r.set(u*g,c*d,u*v,c*h);break;case"ZYZ":r.set(u*v,u*g,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Qn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function mt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const AT={DEG2RAD:bs,RAD2DEG:Da,generateUUID:jn,clamp:Zt,euclideanModulo:Ad,mapLinear:pT,inverseLerp:mT,lerp:Ro,damp:gT,pingpong:_T,smoothstep:vT,smootherstep:xT,randInt:yT,randFloat:MT,randFloatSpread:ST,seededRandom:bT,degToRad:ET,radToDeg:wT,isPowerOfTwo:rd,ceilPowerOfTwo:cv,floorPowerOfTwo:uu,setQuaternionFromProperEuler:TT,normalize:mt,denormalize:Qn};class ue{constructor(e=0,t=0){ue.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pt{constructor(e,t,n,i,s,o,c,u,h){pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,o,c,u,h)}set(e,t,n,i,s,o,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=o,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],c=n[3],u=n[6],h=n[1],d=n[4],m=n[7],p=n[2],g=n[5],v=n[8],M=i[0],x=i[3],_=i[6],b=i[1],S=i[4],w=i[7],P=i[2],R=i[5],N=i[8];return s[0]=o*M+c*b+u*P,s[3]=o*x+c*S+u*R,s[6]=o*_+c*w+u*N,s[1]=h*M+d*b+m*P,s[4]=h*x+d*S+m*R,s[7]=h*_+d*w+m*N,s[2]=p*M+g*b+v*P,s[5]=p*x+g*S+v*R,s[8]=p*_+g*w+v*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*o*d-t*c*h-n*s*d+n*c*u+i*s*h-i*o*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],d=e[8],m=d*o-c*h,p=c*u-d*s,g=h*s-o*u,v=t*m+n*p+i*g;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/v;return e[0]=m*M,e[1]=(i*h-d*n)*M,e[2]=(c*n-i*o)*M,e[3]=p*M,e[4]=(d*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(o*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*o+h*c)+o+e,-i*h,i*u,-i*(-h*o+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Wh.makeScale(e,t)),this}rotate(e){return this.premultiply(Wh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Wh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Wh=new pt;function uv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const RT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ea(r,e){return new RT[r](e)}function ko(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const wg={};function Co(r){r in wg||(wg[r]=!0,console.warn(r))}function Ca(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Xh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const CT=new pt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),PT=new pt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function LT(r){return r.convertSRGBToLinear().applyMatrix3(PT)}function IT(r){return r.applyMatrix3(CT).convertLinearToSRGB()}const UT={[bi]:r=>r,[ct]:r=>r.convertSRGBToLinear(),[Td]:LT},DT={[bi]:r=>r,[ct]:r=>r.convertLinearToSRGB(),[Td]:IT},di={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return bi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=UT[e],i=DT[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}};let na;class Rd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{na===void 0&&(na=ko("canvas")),na.width=e.width,na.height=e.height;const n=na.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=na}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ko("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Ca(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Ca(t[n]/255)*255):t[n]=Ca(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let NT=0;class ys{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:NT++}),this.uuid=jn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,c=i.length;o<c;o++)i[o].isDataTexture?s.push(qh(i[o].image)):s.push(qh(i[o]))}else s=qh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function qh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Rd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let OT=0;class tn extends dr{constructor(e=tn.DEFAULT_IMAGE,t=tn.DEFAULT_MAPPING,n=wn,i=wn,s=en,o=kr,c=$n,u=ur,h=tn.DEFAULT_ANISOTROPY,d=Br){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:OT++}),this.uuid=jn(),this.name="",this.source=new ys(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(Co("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===Fr?ct:Br),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==du)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case No:e.x=e.x-Math.floor(e.x);break;case wn:e.x=e.x<0?0:1;break;case Oo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case No:e.y=e.y-Math.floor(e.y);break;case wn:e.y=e.y<0?0:1;break;case Oo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Co("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ct?Fr:wd}set encoding(e){Co("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Fr?ct:Br}}tn.DEFAULT_IMAGE=null;tn.DEFAULT_MAPPING=du;tn.DEFAULT_ANISOTROPY=1;class Pt{constructor(e=0,t=0,n=0,i=1){Pt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],m=u[8],p=u[1],g=u[5],v=u[9],M=u[2],x=u[6],_=u[10];if(Math.abs(d-p)<.01&&Math.abs(m-M)<.01&&Math.abs(v-x)<.01){if(Math.abs(d+p)<.1&&Math.abs(m+M)<.1&&Math.abs(v+x)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,w=(g+1)/2,P=(_+1)/2,R=(d+p)/4,N=(m+M)/4,B=(v+x)/4;return S>w&&S>P?S<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(S),i=R/n,s=N/n):w>P?w<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(w),n=R/i,s=B/i):P<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(P),n=N/s,i=B/s),this.set(n,i,s,t),this}let b=Math.sqrt((x-v)*(x-v)+(m-M)*(m-M)+(p-d)*(p-d));return Math.abs(b)<.001&&(b=1),this.x=(x-v)/b,this.y=(m-M)/b,this.z=(p-d)/b,this.w=Math.acos((h+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ei extends dr{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Pt(0,0,e,t),this.scissorTest=!1,this.viewport=new Pt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(Co("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Fr?ct:Br),this.texture=new tn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:en,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ys(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class gu extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class FT extends Ei{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new gu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Cd extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class BT extends Ei{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Cd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class zT extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Gn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,o,c){let u=n[i+0],h=n[i+1],d=n[i+2],m=n[i+3];const p=s[o+0],g=s[o+1],v=s[o+2],M=s[o+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=m;return}if(c===1){e[t+0]=p,e[t+1]=g,e[t+2]=v,e[t+3]=M;return}if(m!==M||u!==p||h!==g||d!==v){let x=1-c;const _=u*p+h*g+d*v+m*M,b=_>=0?1:-1,S=1-_*_;if(S>Number.EPSILON){const P=Math.sqrt(S),R=Math.atan2(P,_*b);x=Math.sin(x*R)/P,c=Math.sin(c*R)/P}const w=c*b;if(u=u*x+p*w,h=h*x+g*w,d=d*x+v*w,m=m*x+M*w,x===1-c){const P=1/Math.sqrt(u*u+h*h+d*d+m*m);u*=P,h*=P,d*=P,m*=P}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,s,o){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],m=s[o],p=s[o+1],g=s[o+2],v=s[o+3];return e[t]=c*v+d*m+u*g-h*p,e[t+1]=u*v+d*p+h*m-c*g,e[t+2]=h*v+d*g+c*p-u*m,e[t+3]=d*v-c*m-u*p-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,o=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),m=c(s/2),p=u(n/2),g=u(i/2),v=u(s/2);switch(o){case"XYZ":this._x=p*d*m+h*g*v,this._y=h*g*m-p*d*v,this._z=h*d*v+p*g*m,this._w=h*d*m-p*g*v;break;case"YXZ":this._x=p*d*m+h*g*v,this._y=h*g*m-p*d*v,this._z=h*d*v-p*g*m,this._w=h*d*m+p*g*v;break;case"ZXY":this._x=p*d*m-h*g*v,this._y=h*g*m+p*d*v,this._z=h*d*v+p*g*m,this._w=h*d*m-p*g*v;break;case"ZYX":this._x=p*d*m-h*g*v,this._y=h*g*m+p*d*v,this._z=h*d*v-p*g*m,this._w=h*d*m+p*g*v;break;case"YZX":this._x=p*d*m+h*g*v,this._y=h*g*m+p*d*v,this._z=h*d*v-p*g*m,this._w=h*d*m-p*g*v;break;case"XZY":this._x=p*d*m-h*g*v,this._y=h*g*m-p*d*v,this._z=h*d*v+p*g*m,this._w=h*d*m+p*g*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],c=t[5],u=t[9],h=t[2],d=t[6],m=t[10],p=n+c+m;if(p>0){const g=.5/Math.sqrt(p+1);this._w=.25/g,this._x=(d-u)*g,this._y=(s-h)*g,this._z=(o-i)*g}else if(n>c&&n>m){const g=2*Math.sqrt(1+n-c-m);this._w=(d-u)/g,this._x=.25*g,this._y=(i+o)/g,this._z=(s+h)/g}else if(c>m){const g=2*Math.sqrt(1+c-n-m);this._w=(s-h)/g,this._x=(i+o)/g,this._y=.25*g,this._z=(u+d)/g}else{const g=2*Math.sqrt(1+m-n-c);this._w=(o-i)/g,this._x=(s+h)/g,this._y=(u+d)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Zt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+o*c+i*h-s*u,this._y=i*d+o*u+s*c-n*h,this._z=s*d+o*h+n*u-i*c,this._w=o*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let c=o*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*o+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),m=Math.sin((1-t)*d)/h,p=Math.sin(t*d)/h;return this._w=o*m+this._w*p,this._x=n*m+this._x*p,this._y=i*m+this._y*p,this._z=s*m+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Tg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Tg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,c=e.z,u=e.w,h=u*t+o*i-c*n,d=u*n+c*t-s*i,m=u*i+s*n-o*t,p=-s*t-o*n-c*i;return this.x=h*u+p*-s+d*-c-m*-o,this.y=d*u+p*-o+m*-s-h*-c,this.z=m*u+p*-c+h*-o-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*o-n*u,this.z=n*c-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Yh.copy(this).projectOnVector(e),this.sub(Yh)}reflect(e){return this.sub(Yh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Yh=new U,Tg=new Gn;class Gi{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(tr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(tr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=tr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),ia.copy(e.boundingBox),ia.applyMatrix4(e.matrixWorld),this.union(ia);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let o=0,c=s.count;o<c;o++)tr.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(tr)}else i.boundingBox===null&&i.computeBoundingBox(),ia.copy(i.boundingBox),ia.applyMatrix4(e.matrixWorld),this.union(ia)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,tr),tr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(uo),oc.subVectors(this.max,uo),ra.subVectors(e.a,uo),sa.subVectors(e.b,uo),aa.subVectors(e.c,uo),wr.subVectors(sa,ra),Tr.subVectors(aa,sa),as.subVectors(ra,aa);let t=[0,-wr.z,wr.y,0,-Tr.z,Tr.y,0,-as.z,as.y,wr.z,0,-wr.x,Tr.z,0,-Tr.x,as.z,0,-as.x,-wr.y,wr.x,0,-Tr.y,Tr.x,0,-as.y,as.x,0];return!Zh(t,ra,sa,aa,oc)||(t=[1,0,0,0,1,0,0,0,1],!Zh(t,ra,sa,aa,oc))?!1:(lc.crossVectors(wr,Tr),t=[lc.x,lc.y,lc.z],Zh(t,ra,sa,aa,oc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,tr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(tr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(er[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),er[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),er[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),er[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),er[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),er[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),er[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),er[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(er),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const er=[new U,new U,new U,new U,new U,new U,new U,new U],tr=new U,ia=new Gi,ra=new U,sa=new U,aa=new U,wr=new U,Tr=new U,as=new U,uo=new U,oc=new U,lc=new U,os=new U;function Zh(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){os.fromArray(r,s);const c=i.x*Math.abs(os.x)+i.y*Math.abs(os.y)+i.z*Math.abs(os.z),u=e.dot(os),h=t.dot(os),d=n.dot(os);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const HT=new Gi,ho=new U,Jh=new U;class wi{constructor(e=new U,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):HT.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ho.subVectors(e,this.center);const t=ho.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ho,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Jh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ho.copy(e.center).add(Jh)),this.expandByPoint(ho.copy(e.center).sub(Jh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const nr=new U,Kh=new U,cc=new U,Ar=new U,$h=new U,uc=new U,Qh=new U;class za{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,nr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=nr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(nr.copy(this.origin).addScaledVector(this.direction,t),nr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Kh.copy(e).add(t).multiplyScalar(.5),cc.copy(t).sub(e).normalize(),Ar.copy(this.origin).sub(Kh);const s=e.distanceTo(t)*.5,o=-this.direction.dot(cc),c=Ar.dot(this.direction),u=-Ar.dot(cc),h=Ar.lengthSq(),d=Math.abs(1-o*o);let m,p,g,v;if(d>0)if(m=o*u-c,p=o*c-u,v=s*d,m>=0)if(p>=-v)if(p<=v){const M=1/d;m*=M,p*=M,g=m*(m+o*p+2*c)+p*(o*m+p+2*u)+h}else p=s,m=Math.max(0,-(o*p+c)),g=-m*m+p*(p+2*u)+h;else p=-s,m=Math.max(0,-(o*p+c)),g=-m*m+p*(p+2*u)+h;else p<=-v?(m=Math.max(0,-(-o*s+c)),p=m>0?-s:Math.min(Math.max(-s,-u),s),g=-m*m+p*(p+2*u)+h):p<=v?(m=0,p=Math.min(Math.max(-s,-u),s),g=p*(p+2*u)+h):(m=Math.max(0,-(o*s+c)),p=m>0?s:Math.min(Math.max(-s,-u),s),g=-m*m+p*(p+2*u)+h);else p=o>0?-s:s,m=Math.max(0,-(o*p+c)),g=-m*m+p*(p+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(Kh).addScaledVector(cc,p),g}intersectSphere(e,t){nr.subVectors(e.center,this.origin);const n=nr.dot(this.direction),i=nr.dot(nr)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),c=n-o,u=n+o;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,c,u;const h=1/this.direction.x,d=1/this.direction.y,m=1/this.direction.z,p=this.origin;return h>=0?(n=(e.min.x-p.x)*h,i=(e.max.x-p.x)*h):(n=(e.max.x-p.x)*h,i=(e.min.x-p.x)*h),d>=0?(s=(e.min.y-p.y)*d,o=(e.max.y-p.y)*d):(s=(e.max.y-p.y)*d,o=(e.min.y-p.y)*d),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),m>=0?(c=(e.min.z-p.z)*m,u=(e.max.z-p.z)*m):(c=(e.max.z-p.z)*m,u=(e.min.z-p.z)*m),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,nr)!==null}intersectTriangle(e,t,n,i,s){$h.subVectors(t,e),uc.subVectors(n,e),Qh.crossVectors($h,uc);let o=this.direction.dot(Qh),c;if(o>0){if(i)return null;c=1}else if(o<0)c=-1,o=-o;else return null;Ar.subVectors(this.origin,e);const u=c*this.direction.dot(uc.crossVectors(Ar,uc));if(u<0)return null;const h=c*this.direction.dot($h.cross(Ar));if(h<0||u+h>o)return null;const d=-c*Ar.dot(Qh);return d<0?null:this.at(d/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class st{constructor(e,t,n,i,s,o,c,u,h,d,m,p,g,v,M,x){st.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,o,c,u,h,d,m,p,g,v,M,x)}set(e,t,n,i,s,o,c,u,h,d,m,p,g,v,M,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=o,_[9]=c,_[13]=u,_[2]=h,_[6]=d,_[10]=m,_[14]=p,_[3]=g,_[7]=v,_[11]=M,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new st().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/oa.setFromMatrixColumn(e,0).length(),s=1/oa.setFromMatrixColumn(e,1).length(),o=1/oa.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),m=Math.sin(s);if(e.order==="XYZ"){const p=o*d,g=o*m,v=c*d,M=c*m;t[0]=u*d,t[4]=-u*m,t[8]=h,t[1]=g+v*h,t[5]=p-M*h,t[9]=-c*u,t[2]=M-p*h,t[6]=v+g*h,t[10]=o*u}else if(e.order==="YXZ"){const p=u*d,g=u*m,v=h*d,M=h*m;t[0]=p+M*c,t[4]=v*c-g,t[8]=o*h,t[1]=o*m,t[5]=o*d,t[9]=-c,t[2]=g*c-v,t[6]=M+p*c,t[10]=o*u}else if(e.order==="ZXY"){const p=u*d,g=u*m,v=h*d,M=h*m;t[0]=p-M*c,t[4]=-o*m,t[8]=v+g*c,t[1]=g+v*c,t[5]=o*d,t[9]=M-p*c,t[2]=-o*h,t[6]=c,t[10]=o*u}else if(e.order==="ZYX"){const p=o*d,g=o*m,v=c*d,M=c*m;t[0]=u*d,t[4]=v*h-g,t[8]=p*h+M,t[1]=u*m,t[5]=M*h+p,t[9]=g*h-v,t[2]=-h,t[6]=c*u,t[10]=o*u}else if(e.order==="YZX"){const p=o*u,g=o*h,v=c*u,M=c*h;t[0]=u*d,t[4]=M-p*m,t[8]=v*m+g,t[1]=m,t[5]=o*d,t[9]=-c*d,t[2]=-h*d,t[6]=g*m+v,t[10]=p-M*m}else if(e.order==="XZY"){const p=o*u,g=o*h,v=c*u,M=c*h;t[0]=u*d,t[4]=-m,t[8]=h*d,t[1]=p*m+M,t[5]=o*d,t[9]=g*m-v,t[2]=v*m-g,t[6]=c*d,t[10]=M*m+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(GT,e,kT)}lookAt(e,t,n){const i=this.elements;return Zn.subVectors(e,t),Zn.lengthSq()===0&&(Zn.z=1),Zn.normalize(),Rr.crossVectors(n,Zn),Rr.lengthSq()===0&&(Math.abs(n.z)===1?Zn.x+=1e-4:Zn.z+=1e-4,Zn.normalize(),Rr.crossVectors(n,Zn)),Rr.normalize(),hc.crossVectors(Zn,Rr),i[0]=Rr.x,i[4]=hc.x,i[8]=Zn.x,i[1]=Rr.y,i[5]=hc.y,i[9]=Zn.y,i[2]=Rr.z,i[6]=hc.z,i[10]=Zn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],c=n[4],u=n[8],h=n[12],d=n[1],m=n[5],p=n[9],g=n[13],v=n[2],M=n[6],x=n[10],_=n[14],b=n[3],S=n[7],w=n[11],P=n[15],R=i[0],N=i[4],B=i[8],T=i[12],D=i[1],J=i[5],ce=i[9],q=i[13],Z=i[2],W=i[6],he=i[10],ee=i[14],ae=i[3],fe=i[7],me=i[11],Ee=i[15];return s[0]=o*R+c*D+u*Z+h*ae,s[4]=o*N+c*J+u*W+h*fe,s[8]=o*B+c*ce+u*he+h*me,s[12]=o*T+c*q+u*ee+h*Ee,s[1]=d*R+m*D+p*Z+g*ae,s[5]=d*N+m*J+p*W+g*fe,s[9]=d*B+m*ce+p*he+g*me,s[13]=d*T+m*q+p*ee+g*Ee,s[2]=v*R+M*D+x*Z+_*ae,s[6]=v*N+M*J+x*W+_*fe,s[10]=v*B+M*ce+x*he+_*me,s[14]=v*T+M*q+x*ee+_*Ee,s[3]=b*R+S*D+w*Z+P*ae,s[7]=b*N+S*J+w*W+P*fe,s[11]=b*B+S*ce+w*he+P*me,s[15]=b*T+S*q+w*ee+P*Ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],c=e[5],u=e[9],h=e[13],d=e[2],m=e[6],p=e[10],g=e[14],v=e[3],M=e[7],x=e[11],_=e[15];return v*(+s*u*m-i*h*m-s*c*p+n*h*p+i*c*g-n*u*g)+M*(+t*u*g-t*h*p+s*o*p-i*o*g+i*h*d-s*u*d)+x*(+t*h*m-t*c*g-s*o*m+n*o*g+s*c*d-n*h*d)+_*(-i*c*d-t*u*m+t*c*p+i*o*m-n*o*p+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],d=e[8],m=e[9],p=e[10],g=e[11],v=e[12],M=e[13],x=e[14],_=e[15],b=m*x*h-M*p*h+M*u*g-c*x*g-m*u*_+c*p*_,S=v*p*h-d*x*h-v*u*g+o*x*g+d*u*_-o*p*_,w=d*M*h-v*m*h+v*c*g-o*M*g-d*c*_+o*m*_,P=v*m*u-d*M*u-v*c*p+o*M*p+d*c*x-o*m*x,R=t*b+n*S+i*w+s*P;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/R;return e[0]=b*N,e[1]=(M*p*s-m*x*s-M*i*g+n*x*g+m*i*_-n*p*_)*N,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*_+n*u*_)*N,e[3]=(m*u*s-c*p*s-m*i*h+n*p*h+c*i*g-n*u*g)*N,e[4]=S*N,e[5]=(d*x*s-v*p*s+v*i*g-t*x*g-d*i*_+t*p*_)*N,e[6]=(v*u*s-o*x*s-v*i*h+t*x*h+o*i*_-t*u*_)*N,e[7]=(o*p*s-d*u*s+d*i*h-t*p*h-o*i*g+t*u*g)*N,e[8]=w*N,e[9]=(v*m*s-d*M*s-v*n*g+t*M*g+d*n*_-t*m*_)*N,e[10]=(o*M*s-v*c*s+v*n*h-t*M*h-o*n*_+t*c*_)*N,e[11]=(d*c*s-o*m*s-d*n*h+t*m*h+o*n*g-t*c*g)*N,e[12]=P*N,e[13]=(d*M*i-v*m*i+v*n*p-t*M*p-d*n*x+t*m*x)*N,e[14]=(v*c*i-o*M*i-v*n*u+t*M*u+o*n*x-t*c*x)*N,e[15]=(o*m*i-d*c*i+d*n*u-t*m*u-o*n*p+t*c*p)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,c=e.y,u=e.z,h=s*o,d=s*c;return this.set(h*o+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*o,0,h*u-i*c,d*u+i*o,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,c=t._z,u=t._w,h=s+s,d=o+o,m=c+c,p=s*h,g=s*d,v=s*m,M=o*d,x=o*m,_=c*m,b=u*h,S=u*d,w=u*m,P=n.x,R=n.y,N=n.z;return i[0]=(1-(M+_))*P,i[1]=(g+w)*P,i[2]=(v-S)*P,i[3]=0,i[4]=(g-w)*R,i[5]=(1-(p+_))*R,i[6]=(x+b)*R,i[7]=0,i[8]=(v+S)*N,i[9]=(x-b)*N,i[10]=(1-(p+M))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=oa.set(i[0],i[1],i[2]).length();const o=oa.set(i[4],i[5],i[6]).length(),c=oa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],xi.copy(this);const h=1/s,d=1/o,m=1/c;return xi.elements[0]*=h,xi.elements[1]*=h,xi.elements[2]*=h,xi.elements[4]*=d,xi.elements[5]*=d,xi.elements[6]*=d,xi.elements[8]*=m,xi.elements[9]*=m,xi.elements[10]*=m,t.setFromRotationMatrix(xi),n.x=s,n.y=o,n.z=c,this}makePerspective(e,t,n,i,s,o,c=Ni){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),m=(t+e)/(t-e),p=(n+i)/(n-i);let g,v;if(c===Ni)g=-(o+s)/(o-s),v=-2*o*s/(o-s);else if(c===Go)g=-o/(o-s),v=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=m,u[12]=0,u[1]=0,u[5]=d,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=v,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,o,c=Ni){const u=this.elements,h=1/(t-e),d=1/(n-i),m=1/(o-s),p=(t+e)*h,g=(n+i)*d;let v,M;if(c===Ni)v=(o+s)*m,M=-2*m;else if(c===Go)v=s*m,M=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-p,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-v,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const oa=new U,xi=new st,GT=new U(0,0,0),kT=new U(1,1,1),Rr=new U,hc=new U,Zn=new U,Ag=new st,Rg=new Gn;class nl{constructor(e=0,t=0,n=0,i=nl.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],c=i[8],u=i[1],h=i[5],d=i[9],m=i[2],p=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(Zt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,g),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(p,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Zt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-m,s),this._z=0);break;case"ZXY":this._x=Math.asin(Zt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-m,g),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Zt(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(p,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(Zt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-m,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-Zt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ag.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ag,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Rg.setFromEuler(this),this.setFromQuaternion(Rg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}nl.DEFAULT_ORDER="XYZ";class _u{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let VT=0;const Cg=new U,la=new Gn,ir=new st,fc=new U,fo=new U,WT=new U,XT=new Gn,Pg=new U(1,0,0),Lg=new U(0,1,0),Ig=new U(0,0,1),qT={type:"added"},Ug={type:"removed"};class wt extends dr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:VT++}),this.uuid=jn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=wt.DEFAULT_UP.clone();const e=new U,t=new nl,n=new Gn,i=new U(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new st},normalMatrix:{value:new pt}}),this.matrix=new st,this.matrixWorld=new st,this.matrixAutoUpdate=wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new _u,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return la.setFromAxisAngle(e,t),this.quaternion.multiply(la),this}rotateOnWorldAxis(e,t){return la.setFromAxisAngle(e,t),this.quaternion.premultiply(la),this}rotateX(e){return this.rotateOnAxis(Pg,e)}rotateY(e){return this.rotateOnAxis(Lg,e)}rotateZ(e){return this.rotateOnAxis(Ig,e)}translateOnAxis(e,t){return Cg.copy(e).applyQuaternion(this.quaternion),this.position.add(Cg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Pg,e)}translateY(e){return this.translateOnAxis(Lg,e)}translateZ(e){return this.translateOnAxis(Ig,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ir.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?fc.copy(e):fc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),fo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ir.lookAt(fo,fc,this.up):ir.lookAt(fc,fo,this.up),this.quaternion.setFromRotationMatrix(ir),i&&(ir.extractRotation(i.matrixWorld),la.setFromRotationMatrix(ir),this.quaternion.premultiply(la.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(qT)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ug)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Ug)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),ir.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ir.multiply(e.parent.matrixWorld)),e.applyMatrix4(ir),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectsByProperty(e,t);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fo,e,WT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fo,XT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const m=u[h];s(e.shapes,m)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=o(e.geometries),u=o(e.materials),h=o(e.textures),d=o(e.images),m=o(e.shapes),p=o(e.skeletons),g=o(e.animations),v=o(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),m.length>0&&(n.shapes=m),p.length>0&&(n.skeletons=p),g.length>0&&(n.animations=g),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}wt.DEFAULT_UP=new U(0,1,0);wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const yi=new U,rr=new U,jh=new U,sr=new U,ca=new U,ua=new U,Dg=new U,ef=new U,tf=new U,nf=new U;let dc=!1;class Hn{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),yi.subVectors(e,t),i.cross(yi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){yi.subVectors(i,t),rr.subVectors(n,t),jh.subVectors(e,t);const o=yi.dot(yi),c=yi.dot(rr),u=yi.dot(jh),h=rr.dot(rr),d=rr.dot(jh),m=o*h-c*c;if(m===0)return s.set(-2,-1,-1);const p=1/m,g=(h*u-c*d)*p,v=(o*d-c*u)*p;return s.set(1-g-v,v,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,sr),sr.x>=0&&sr.y>=0&&sr.x+sr.y<=1}static getUV(e,t,n,i,s,o,c,u){return dc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),dc=!0),this.getInterpolation(e,t,n,i,s,o,c,u)}static getInterpolation(e,t,n,i,s,o,c,u){return this.getBarycoord(e,t,n,i,sr),u.setScalar(0),u.addScaledVector(s,sr.x),u.addScaledVector(o,sr.y),u.addScaledVector(c,sr.z),u}static isFrontFacing(e,t,n,i){return yi.subVectors(n,t),rr.subVectors(e,t),yi.cross(rr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return yi.subVectors(this.c,this.b),rr.subVectors(this.a,this.b),yi.cross(rr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Hn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Hn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return dc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),dc=!0),Hn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Hn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Hn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Hn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,c;ca.subVectors(i,n),ua.subVectors(s,n),ef.subVectors(e,n);const u=ca.dot(ef),h=ua.dot(ef);if(u<=0&&h<=0)return t.copy(n);tf.subVectors(e,i);const d=ca.dot(tf),m=ua.dot(tf);if(d>=0&&m<=d)return t.copy(i);const p=u*m-d*h;if(p<=0&&u>=0&&d<=0)return o=u/(u-d),t.copy(n).addScaledVector(ca,o);nf.subVectors(e,s);const g=ca.dot(nf),v=ua.dot(nf);if(v>=0&&g<=v)return t.copy(s);const M=g*h-u*v;if(M<=0&&h>=0&&v<=0)return c=h/(h-v),t.copy(n).addScaledVector(ua,c);const x=d*v-g*m;if(x<=0&&m-d>=0&&g-v>=0)return Dg.subVectors(s,i),c=(m-d)/(m-d+(g-v)),t.copy(i).addScaledVector(Dg,c);const _=1/(x+M+p);return o=M*_,c=p*_,t.copy(n).addScaledVector(ca,o).addScaledVector(ua,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let YT=0;class Tn extends dr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:YT++}),this.uuid=jn(),this.name="",this.type="Material",this.blending=Ss,this.side=hr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=md,this.blendDst=gd,this.blendEquation=gs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ou,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ev,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=eu,this.stencilZFail=eu,this.stencilZPass=eu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ss&&(n.blending=this.blending),this.side!==hr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const c in s){const u=s[c];delete u.metadata,o.push(u)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const hv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mi={h:0,s:0,l:0},pc={h:0,s:0,l:0};function rf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Ue{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ct){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,di.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=di.workingColorSpace){return this.r=e,this.g=t,this.b=n,di.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=di.workingColorSpace){if(e=Ad(e,1),t=Zt(t,0,1),n=Zt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=rf(o,s,e+1/3),this.g=rf(o,s,e),this.b=rf(o,s,e-1/3)}return di.toWorkingColorSpace(this,i),this}setStyle(e,t=ct){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],c=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ct){const n=hv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ca(e.r),this.g=Ca(e.g),this.b=Ca(e.b),this}copyLinearToSRGB(e){return this.r=Xh(e.r),this.g=Xh(e.g),this.b=Xh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ct){return di.fromWorkingColorSpace(En.copy(this),e),Math.round(Zt(En.r*255,0,255))*65536+Math.round(Zt(En.g*255,0,255))*256+Math.round(Zt(En.b*255,0,255))}getHexString(e=ct){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=di.workingColorSpace){di.fromWorkingColorSpace(En.copy(this),t);const n=En.r,i=En.g,s=En.b,o=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+o)/2;if(c===o)u=0,h=0;else{const m=o-c;switch(h=d<=.5?m/(o+c):m/(2-o-c),o){case n:u=(i-s)/m+(i<s?6:0);break;case i:u=(s-n)/m+2;break;case s:u=(n-i)/m+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=di.workingColorSpace){return di.fromWorkingColorSpace(En.copy(this),t),e.r=En.r,e.g=En.g,e.b=En.b,e}getStyle(e=ct){di.fromWorkingColorSpace(En.copy(this),e);const t=En.r,n=En.g,i=En.b;return e!==ct?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Mi),Mi.h+=e,Mi.s+=t,Mi.l+=n,this.setHSL(Mi.h,Mi.s,Mi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Mi),e.getHSL(pc);const n=Ro(Mi.h,pc.h,t),i=Ro(Mi.s,pc.s,t),s=Ro(Mi.l,pc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const En=new Ue;Ue.NAMES=hv;class Zr extends Tn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=tl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const or=ZT();function ZT(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)o[u]=u<<23;o[31]=1199570944,o[32]=2147483648;for(let u=33;u<63;++u)o[u]=2147483648+(u-32<<23);o[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:c}}function zn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Zt(r,-65504,65504),or.floatView[0]=r;const e=or.uint32View[0],t=e>>23&511;return or.baseTable[t]+((e&8388607)>>or.shiftTable[t])}function Eo(r){const e=r>>10;return or.uint32View[0]=or.mantissaTable[or.offsetTable[e]+(r&1023)]+or.exponentTable[e],or.floatView[0]}const JT={toHalfFloat:zn,fromHalfFloat:Eo},rn=new U,mc=new ue;class Nt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ho,this.updateRange={offset:0,count:-1},this.gpuType=Di,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)mc.fromBufferAttribute(this,t),mc.applyMatrix3(e),this.setXY(t,mc.x,mc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix3(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix4(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyNormalMatrix(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.transformDirection(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ho&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class KT extends Nt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class $T extends Nt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class QT extends Nt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class jT extends Nt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Pd extends Nt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class eA extends Nt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Ld extends Nt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class tA extends Nt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Eo(this.array[e*this.itemSize]);return this.normalized&&(t=Qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=zn(t),this}getY(e){let t=Eo(this.array[e*this.itemSize+1]);return this.normalized&&(t=Qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=zn(t),this}getZ(e){let t=Eo(this.array[e*this.itemSize+2]);return this.normalized&&(t=Qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=zn(t),this}getW(e){let t=Eo(this.array[e*this.itemSize+3]);return this.normalized&&(t=Qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=zn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=zn(t),this.array[e+1]=zn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=zn(t),this.array[e+1]=zn(n),this.array[e+2]=zn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=zn(t),this.array[e+1]=zn(n),this.array[e+2]=zn(i),this.array[e+3]=zn(s),this}}class Ge extends Nt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class nA extends Nt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let iA=0;const fi=new st,sf=new wt,ha=new U,Jn=new Gi,po=new Gi,pn=new U;class vt extends dr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:iA++}),this.uuid=jn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(uv(e)?Ld:Pd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return fi.makeRotationFromQuaternion(e),this.applyMatrix4(fi),this}rotateX(e){return fi.makeRotationX(e),this.applyMatrix4(fi),this}rotateY(e){return fi.makeRotationY(e),this.applyMatrix4(fi),this}rotateZ(e){return fi.makeRotationZ(e),this.applyMatrix4(fi),this}translate(e,t,n){return fi.makeTranslation(e,t,n),this.applyMatrix4(fi),this}scale(e,t,n){return fi.makeScale(e,t,n),this.applyMatrix4(fi),this}lookAt(e){return sf.lookAt(e),sf.updateMatrix(),this.applyMatrix4(sf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ha).negate(),this.translate(ha.x,ha.y,ha.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ge(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Jn.setFromBufferAttribute(s),this.morphTargetsRelative?(pn.addVectors(this.boundingBox.min,Jn.min),this.boundingBox.expandByPoint(pn),pn.addVectors(this.boundingBox.max,Jn.max),this.boundingBox.expandByPoint(pn)):(this.boundingBox.expandByPoint(Jn.min),this.boundingBox.expandByPoint(Jn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if(Jn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const c=t[s];po.setFromBufferAttribute(c),this.morphTargetsRelative?(pn.addVectors(Jn.min,po.min),Jn.expandByPoint(pn),pn.addVectors(Jn.max,po.max),Jn.expandByPoint(pn)):(Jn.expandByPoint(po.min),Jn.expandByPoint(po.max))}Jn.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)pn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(pn));if(t)for(let s=0,o=t.length;s<o;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)pn.fromBufferAttribute(c,h),u&&(ha.fromBufferAttribute(e,h),pn.add(ha)),i=Math.max(i,n.distanceToSquared(pn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Nt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let D=0;D<c;D++)h[D]=new U,d[D]=new U;const m=new U,p=new U,g=new U,v=new ue,M=new ue,x=new ue,_=new U,b=new U;function S(D,J,ce){m.fromArray(i,D*3),p.fromArray(i,J*3),g.fromArray(i,ce*3),v.fromArray(o,D*2),M.fromArray(o,J*2),x.fromArray(o,ce*2),p.sub(m),g.sub(m),M.sub(v),x.sub(v);const q=1/(M.x*x.y-x.x*M.y);isFinite(q)&&(_.copy(p).multiplyScalar(x.y).addScaledVector(g,-M.y).multiplyScalar(q),b.copy(g).multiplyScalar(M.x).addScaledVector(p,-x.x).multiplyScalar(q),h[D].add(_),h[J].add(_),h[ce].add(_),d[D].add(b),d[J].add(b),d[ce].add(b))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let D=0,J=w.length;D<J;++D){const ce=w[D],q=ce.start,Z=ce.count;for(let W=q,he=q+Z;W<he;W+=3)S(n[W+0],n[W+1],n[W+2])}const P=new U,R=new U,N=new U,B=new U;function T(D){N.fromArray(s,D*3),B.copy(N);const J=h[D];P.copy(J),P.sub(N.multiplyScalar(N.dot(J))).normalize(),R.crossVectors(B,J);const q=R.dot(d[D])<0?-1:1;u[D*4]=P.x,u[D*4+1]=P.y,u[D*4+2]=P.z,u[D*4+3]=q}for(let D=0,J=w.length;D<J;++D){const ce=w[D],q=ce.start,Z=ce.count;for(let W=q,he=q+Z;W<he;W+=3)T(n[W+0]),T(n[W+1]),T(n[W+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Nt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let p=0,g=n.count;p<g;p++)n.setXYZ(p,0,0,0);const i=new U,s=new U,o=new U,c=new U,u=new U,h=new U,d=new U,m=new U;if(e)for(let p=0,g=e.count;p<g;p+=3){const v=e.getX(p+0),M=e.getX(p+1),x=e.getX(p+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,M),o.fromBufferAttribute(t,x),d.subVectors(o,s),m.subVectors(i,s),d.cross(m),c.fromBufferAttribute(n,v),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(v,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let p=0,g=t.count;p<g;p+=3)i.fromBufferAttribute(t,p+0),s.fromBufferAttribute(t,p+1),o.fromBufferAttribute(t,p+2),d.subVectors(o,s),m.subVectors(i,s),d.cross(m),n.setXYZ(p+0,d.x,d.y,d.z),n.setXYZ(p+1,d.x,d.y,d.z),n.setXYZ(p+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)pn.fromBufferAttribute(e,t),pn.normalize(),e.setXYZ(t,pn.x,pn.y,pn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,m=c.normalized,p=new h.constructor(u.length*d);let g=0,v=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?g=u[M]*c.data.stride+c.offset:g=u[M]*d;for(let _=0;_<d;_++)p[v++]=h[g++]}return new Nt(p,d,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new vt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,m=h.length;d<m;d++){const p=h[d],g=e(p,n);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let m=0,p=h.length;m<p;m++){const g=h[m];d.push(g.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],m=s[h];for(let p=0,g=m.length;p<g;p++)d.push(m[p].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,d=o.length;h<d;h++){const m=o[h];this.addGroup(m.start,m.count,m.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ng=new st,ls=new za,gc=new wi,Og=new U,fa=new U,da=new U,pa=new U,af=new U,_c=new U,vc=new ue,xc=new ue,yc=new ue,Fg=new U,Bg=new U,zg=new U,Mc=new U,Sc=new U;class gn extends wt{constructor(e=new vt,t=new Zr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){_c.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],m=s[u];d!==0&&(af.fromBufferAttribute(m,e),o?_c.addScaledVector(af,d):_c.addScaledVector(af.sub(t),d))}t.add(_c)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),gc.copy(n.boundingSphere),gc.applyMatrix4(s),ls.copy(e.ray).recast(e.near),!(gc.containsPoint(ls.origin)===!1&&(ls.intersectSphere(gc,Og)===null||ls.origin.distanceToSquared(Og)>(e.far-e.near)**2))&&(Ng.copy(s).invert(),ls.copy(e.ray).applyMatrix4(Ng),!(n.boundingBox!==null&&ls.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ls)))}_computeIntersections(e,t,n){let i;const s=this.geometry,o=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,m=s.attributes.normal,p=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(o))for(let v=0,M=p.length;v<M;v++){const x=p[v],_=o[x.materialIndex],b=Math.max(x.start,g.start),S=Math.min(c.count,Math.min(x.start+x.count,g.start+g.count));for(let w=b,P=S;w<P;w+=3){const R=c.getX(w),N=c.getX(w+1),B=c.getX(w+2);i=bc(this,_,e,n,h,d,m,R,N,B),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),M=Math.min(c.count,g.start+g.count);for(let x=v,_=M;x<_;x+=3){const b=c.getX(x),S=c.getX(x+1),w=c.getX(x+2);i=bc(this,o,e,n,h,d,m,b,S,w),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(o))for(let v=0,M=p.length;v<M;v++){const x=p[v],_=o[x.materialIndex],b=Math.max(x.start,g.start),S=Math.min(u.count,Math.min(x.start+x.count,g.start+g.count));for(let w=b,P=S;w<P;w+=3){const R=w,N=w+1,B=w+2;i=bc(this,_,e,n,h,d,m,R,N,B),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let x=v,_=M;x<_;x+=3){const b=x,S=x+1,w=x+2;i=bc(this,o,e,n,h,d,m,b,S,w),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function rA(r,e,t,n,i,s,o,c){let u;if(e.side===In?u=n.intersectTriangle(o,s,i,!0,c):u=n.intersectTriangle(i,s,o,e.side===hr,c),u===null)return null;Sc.copy(c),Sc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Sc);return h<t.near||h>t.far?null:{distance:h,point:Sc.clone(),object:r}}function bc(r,e,t,n,i,s,o,c,u,h){r.getVertexPosition(c,fa),r.getVertexPosition(u,da),r.getVertexPosition(h,pa);const d=rA(r,e,t,n,fa,da,pa,Mc);if(d){i&&(vc.fromBufferAttribute(i,c),xc.fromBufferAttribute(i,u),yc.fromBufferAttribute(i,h),d.uv=Hn.getInterpolation(Mc,fa,da,pa,vc,xc,yc,new ue)),s&&(vc.fromBufferAttribute(s,c),xc.fromBufferAttribute(s,u),yc.fromBufferAttribute(s,h),d.uv1=Hn.getInterpolation(Mc,fa,da,pa,vc,xc,yc,new ue),d.uv2=d.uv1),o&&(Fg.fromBufferAttribute(o,c),Bg.fromBufferAttribute(o,u),zg.fromBufferAttribute(o,h),d.normal=Hn.getInterpolation(Mc,fa,da,pa,Fg,Bg,zg,new U),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const m={a:c,b:u,c:h,normal:new U,materialIndex:0};Hn.getNormal(fa,da,pa,m.normal),d.face=m}return d}class Jr extends vt{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const c=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const u=[],h=[],d=[],m=[];let p=0,g=0;v("z","y","x",-1,-1,n,t,e,o,s,0),v("z","y","x",1,-1,n,t,-e,o,s,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Ge(h,3)),this.setAttribute("normal",new Ge(d,3)),this.setAttribute("uv",new Ge(m,2));function v(M,x,_,b,S,w,P,R,N,B,T){const D=w/N,J=P/B,ce=w/2,q=P/2,Z=R/2,W=N+1,he=B+1;let ee=0,ae=0;const fe=new U;for(let me=0;me<he;me++){const Ee=me*J-q;for(let Q=0;Q<W;Q++){const ge=Q*D-ce;fe[M]=ge*b,fe[x]=Ee*S,fe[_]=Z,h.push(fe.x,fe.y,fe.z),fe[M]=0,fe[x]=0,fe[_]=R>0?1:-1,d.push(fe.x,fe.y,fe.z),m.push(Q/N),m.push(1-me/B),ee+=1}}for(let me=0;me<B;me++)for(let Ee=0;Ee<N;Ee++){const Q=p+Ee+W*me,ge=p+Ee+W*(me+1),_e=p+(Ee+1)+W*(me+1),Pe=p+(Ee+1)+W*me;u.push(Q,ge,Pe),u.push(ge,_e,Pe),ae+=6}c.addGroup(g,ae,T),g+=ae,p+=ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Jr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Na(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ln(r){const e={};for(let t=0;t<r.length;t++){const n=Na(r[t]);for(const i in n)e[i]=n[i]}return e}function sA(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function fv(r){return r.getRenderTarget()===null?r.outputColorSpace:bi}const dv={clone:Na,merge:Ln};var aA=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,oA=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Hi extends Tn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=aA,this.fragmentShader=oA,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Na(e.uniforms),this.uniformsGroups=sA(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class il extends wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new st,this.projectionMatrix=new st,this.projectionMatrixInverse=new st,this.coordinateSystem=Ni}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class yn extends il{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Da*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(bs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Da*2*Math.atan(Math.tan(bs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(bs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/u,t-=o.offsetY*n/h,i*=o.width/u,n*=o.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ma=-90,ga=1;class pv extends wt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new yn(ma,ga,e,t);i.layers=this.layers,this.add(i);const s=new yn(ma,ga,e,t);s.layers=this.layers,this.add(s);const o=new yn(ma,ga,e,t);o.layers=this.layers,this.add(o);const c=new yn(ma,ga,e,t);c.layers=this.layers,this.add(c);const u=new yn(ma,ga,e,t);u.layers=this.layers,this.add(u);const h=new yn(ma,ga,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,o,c,u]=t;for(const h of t)this.remove(h);if(e===Ni)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Go)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,s,o,c,u,h]=this.children,d=e.getRenderTarget(),m=e.toneMapping,p=e.xr.enabled;e.toneMapping=Bi,e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=m,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class rl extends tn{constructor(e,t,n,i,s,o,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:Hr,super(e,t,n,i,s,o,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class mv extends Ei{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(Co("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Fr?ct:Br),this.texture=new rl(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:en}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Jr(5,5,5),s=new Hi({name:"CubemapFromEquirect",uniforms:Na(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:In,blending:cr});s.uniforms.tEquirect.value=t;const o=new gn(i,s),c=t.minFilter;return t.minFilter===kr&&(t.minFilter=en),new pv(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const of=new U,lA=new U,cA=new pt;class Pr{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=of.subVectors(n,t).cross(lA.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(of),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||cA.getNormalMatrix(e),i=this.coplanarPoint(of).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const cs=new wi,Ec=new U;class vu{constructor(e=new Pr,t=new Pr,n=new Pr,i=new Pr,s=new Pr,o=new Pr){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ni){const n=this.planes,i=e.elements,s=i[0],o=i[1],c=i[2],u=i[3],h=i[4],d=i[5],m=i[6],p=i[7],g=i[8],v=i[9],M=i[10],x=i[11],_=i[12],b=i[13],S=i[14],w=i[15];if(n[0].setComponents(u-s,p-h,x-g,w-_).normalize(),n[1].setComponents(u+s,p+h,x+g,w+_).normalize(),n[2].setComponents(u+o,p+d,x+v,w+b).normalize(),n[3].setComponents(u-o,p-d,x-v,w-b).normalize(),n[4].setComponents(u-c,p-m,x-M,w-S).normalize(),t===Ni)n[5].setComponents(u+c,p+m,x+M,w+S).normalize();else if(t===Go)n[5].setComponents(c,m,M,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),cs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),cs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(cs)}intersectsSprite(e){return cs.center.set(0,0,0),cs.radius=.7071067811865476,cs.applyMatrix4(e.matrixWorld),this.intersectsSphere(cs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ec.x=i.normal.x>0?e.max.x:e.min.x,Ec.y=i.normal.y>0?e.max.y:e.min.y,Ec.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ec)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function gv(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function uA(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const m=h.array,p=h.usage,g=r.createBuffer();r.bindBuffer(d,g),r.bufferData(d,m,p),h.onUploadCallback();let v;if(m instanceof Float32Array)v=r.FLOAT;else if(m instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=r.UNSIGNED_SHORT;else if(m instanceof Int16Array)v=r.SHORT;else if(m instanceof Uint32Array)v=r.UNSIGNED_INT;else if(m instanceof Int32Array)v=r.INT;else if(m instanceof Int8Array)v=r.BYTE;else if(m instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(m instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:g,type:v,bytesPerElement:m.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,m){const p=d.array,g=d.updateRange;r.bindBuffer(m,h),g.count===-1?r.bufferSubData(m,0,p):(t?r.bufferSubData(m,g.offset*p.BYTES_PER_ELEMENT,p,g.offset,g.count):r.bufferSubData(m,g.offset*p.BYTES_PER_ELEMENT,p.subarray(g.offset,g.offset+g.count)),g.count=-1),d.onUploadCallback()}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const p=n.get(h);(!p||p.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const m=n.get(h);m===void 0?n.set(h,i(h,d)):m.version<h.version&&(s(m.buffer,h,d),m.version=h.version)}return{get:o,remove:c,update:u}}class Is extends vt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,m=e/c,p=t/u,g=[],v=[],M=[],x=[];for(let _=0;_<d;_++){const b=_*p-o;for(let S=0;S<h;S++){const w=S*m-s;v.push(w,-b,0),M.push(0,0,1),x.push(S/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let b=0;b<c;b++){const S=b+h*_,w=b+h*(_+1),P=b+1+h*(_+1),R=b+1+h*_;g.push(S,w,R),g.push(w,P,R)}this.setIndex(g),this.setAttribute("position",new Ge(v,3)),this.setAttribute("normal",new Ge(M,3)),this.setAttribute("uv",new Ge(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Is(e.width,e.height,e.widthSegments,e.heightSegments)}}var hA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,fA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,dA=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,pA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,mA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,gA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,_A="vec3 transformed = vec3( position );",vA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,xA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,yA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,MA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,SA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,bA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,EA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,wA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,TA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,AA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,RA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,CA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,PA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,LA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,IA=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,UA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,DA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,NA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,OA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,FA="gl_FragColor = linearToOutputTexel( gl_FragColor );",BA=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,zA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,HA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,GA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,kA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,VA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,WA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,XA=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,qA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,YA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ZA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,JA=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,KA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,$A=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,QA=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,jA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,eR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,tR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,nR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,iR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,rR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,sR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,aR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,oR=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,cR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,uR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,hR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,dR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,pR=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,mR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,gR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,_R=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,xR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,yR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,MR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,SR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,bR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,ER=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,wR=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,TR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,AR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,RR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,CR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,PR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,LR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,IR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,UR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,DR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,NR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,OR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,FR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,BR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,HR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,GR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,kR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,VR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,WR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,XR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,qR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,YR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,ZR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,JR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,KR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,$R=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,QR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,jR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,eC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,tC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,nC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,iC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,rC=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,sC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const aC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,oC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,lC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,uC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,hC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,fC=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,dC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,pC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,mC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,gC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,_C=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yC=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,MC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,SC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,EC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,wC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,TC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,AC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,RC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,CC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,LC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,NC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,OC=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,BC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,dt={alphamap_fragment:hA,alphamap_pars_fragment:fA,alphatest_fragment:dA,alphatest_pars_fragment:pA,aomap_fragment:mA,aomap_pars_fragment:gA,begin_vertex:_A,beginnormal_vertex:vA,bsdfs:xA,iridescence_fragment:yA,bumpmap_pars_fragment:MA,clipping_planes_fragment:SA,clipping_planes_pars_fragment:bA,clipping_planes_pars_vertex:EA,clipping_planes_vertex:wA,color_fragment:TA,color_pars_fragment:AA,color_pars_vertex:RA,color_vertex:CA,common:PA,cube_uv_reflection_fragment:LA,defaultnormal_vertex:IA,displacementmap_pars_vertex:UA,displacementmap_vertex:DA,emissivemap_fragment:NA,emissivemap_pars_fragment:OA,encodings_fragment:FA,encodings_pars_fragment:BA,envmap_fragment:zA,envmap_common_pars_fragment:HA,envmap_pars_fragment:GA,envmap_pars_vertex:kA,envmap_physical_pars_fragment:eR,envmap_vertex:VA,fog_vertex:WA,fog_pars_vertex:XA,fog_fragment:qA,fog_pars_fragment:YA,gradientmap_pars_fragment:ZA,lightmap_fragment:JA,lightmap_pars_fragment:KA,lights_lambert_fragment:$A,lights_lambert_pars_fragment:QA,lights_pars_begin:jA,lights_toon_fragment:tR,lights_toon_pars_fragment:nR,lights_phong_fragment:iR,lights_phong_pars_fragment:rR,lights_physical_fragment:sR,lights_physical_pars_fragment:aR,lights_fragment_begin:oR,lights_fragment_maps:lR,lights_fragment_end:cR,logdepthbuf_fragment:uR,logdepthbuf_pars_fragment:hR,logdepthbuf_pars_vertex:fR,logdepthbuf_vertex:dR,map_fragment:pR,map_pars_fragment:mR,map_particle_fragment:gR,map_particle_pars_fragment:_R,metalnessmap_fragment:vR,metalnessmap_pars_fragment:xR,morphcolor_vertex:yR,morphnormal_vertex:MR,morphtarget_pars_vertex:SR,morphtarget_vertex:bR,normal_fragment_begin:ER,normal_fragment_maps:wR,normal_pars_fragment:TR,normal_pars_vertex:AR,normal_vertex:RR,normalmap_pars_fragment:CR,clearcoat_normal_fragment_begin:PR,clearcoat_normal_fragment_maps:LR,clearcoat_pars_fragment:IR,iridescence_pars_fragment:UR,output_fragment:DR,packing:NR,premultiplied_alpha_fragment:OR,project_vertex:FR,dithering_fragment:BR,dithering_pars_fragment:zR,roughnessmap_fragment:HR,roughnessmap_pars_fragment:GR,shadowmap_pars_fragment:kR,shadowmap_pars_vertex:VR,shadowmap_vertex:WR,shadowmask_pars_fragment:XR,skinbase_vertex:qR,skinning_pars_vertex:YR,skinning_vertex:ZR,skinnormal_vertex:JR,specularmap_fragment:KR,specularmap_pars_fragment:$R,tonemapping_fragment:QR,tonemapping_pars_fragment:jR,transmission_fragment:eC,transmission_pars_fragment:tC,uv_pars_fragment:nC,uv_pars_vertex:iC,uv_vertex:rC,worldpos_vertex:sC,background_vert:aC,background_frag:oC,backgroundCube_vert:lC,backgroundCube_frag:cC,cube_vert:uC,cube_frag:hC,depth_vert:fC,depth_frag:dC,distanceRGBA_vert:pC,distanceRGBA_frag:mC,equirect_vert:gC,equirect_frag:_C,linedashed_vert:vC,linedashed_frag:xC,meshbasic_vert:yC,meshbasic_frag:MC,meshlambert_vert:SC,meshlambert_frag:bC,meshmatcap_vert:EC,meshmatcap_frag:wC,meshnormal_vert:TC,meshnormal_frag:AC,meshphong_vert:RC,meshphong_frag:CC,meshphysical_vert:PC,meshphysical_frag:LC,meshtoon_vert:IC,meshtoon_frag:UC,points_vert:DC,points_frag:NC,shadow_vert:OC,shadow_frag:FC,sprite_vert:BC,sprite_frag:zC},Te={common:{diffuse:{value:new Ue(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pt},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ue(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new Ue(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}}},Si={basic:{uniforms:Ln([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.fog]),vertexShader:dt.meshbasic_vert,fragmentShader:dt.meshbasic_frag},lambert:{uniforms:Ln([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)}}]),vertexShader:dt.meshlambert_vert,fragmentShader:dt.meshlambert_frag},phong:{uniforms:Ln([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)},specular:{value:new Ue(1118481)},shininess:{value:30}}]),vertexShader:dt.meshphong_vert,fragmentShader:dt.meshphong_frag},standard:{uniforms:Ln([Te.common,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.roughnessmap,Te.metalnessmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:dt.meshphysical_vert,fragmentShader:dt.meshphysical_frag},toon:{uniforms:Ln([Te.common,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.gradientmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)}}]),vertexShader:dt.meshtoon_vert,fragmentShader:dt.meshtoon_frag},matcap:{uniforms:Ln([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,{matcap:{value:null}}]),vertexShader:dt.meshmatcap_vert,fragmentShader:dt.meshmatcap_frag},points:{uniforms:Ln([Te.points,Te.fog]),vertexShader:dt.points_vert,fragmentShader:dt.points_frag},dashed:{uniforms:Ln([Te.common,Te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:dt.linedashed_vert,fragmentShader:dt.linedashed_frag},depth:{uniforms:Ln([Te.common,Te.displacementmap]),vertexShader:dt.depth_vert,fragmentShader:dt.depth_frag},normal:{uniforms:Ln([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,{opacity:{value:1}}]),vertexShader:dt.meshnormal_vert,fragmentShader:dt.meshnormal_frag},sprite:{uniforms:Ln([Te.sprite,Te.fog]),vertexShader:dt.sprite_vert,fragmentShader:dt.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:dt.background_vert,fragmentShader:dt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:dt.backgroundCube_vert,fragmentShader:dt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:dt.cube_vert,fragmentShader:dt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:dt.equirect_vert,fragmentShader:dt.equirect_frag},distanceRGBA:{uniforms:Ln([Te.common,Te.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:dt.distanceRGBA_vert,fragmentShader:dt.distanceRGBA_frag},shadow:{uniforms:Ln([Te.lights,Te.fog,{color:{value:new Ue(0)},opacity:{value:1}}]),vertexShader:dt.shadow_vert,fragmentShader:dt.shadow_frag}};Si.physical={uniforms:Ln([Si.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pt},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pt},sheen:{value:0},sheenColor:{value:new Ue(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pt},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pt},attenuationDistance:{value:0},attenuationColor:{value:new Ue(0)},specularColor:{value:new Ue(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pt},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pt}}]),vertexShader:dt.meshphysical_vert,fragmentShader:dt.meshphysical_frag};const wc={r:0,b:0,g:0};function HC(r,e,t,n,i,s,o){const c=new Ue(0);let u=s===!0?0:1,h,d,m=null,p=0,g=null;function v(x,_){let b=!1,S=_.isScene===!0?_.background:null;switch(S&&S.isTexture&&(S=(_.backgroundBlurriness>0?t:e).get(S)),S===null?M(c,u):S&&S.isColor&&(M(S,1),b=!0),r.xr.getEnvironmentBlendMode()){case"opaque":b=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,o),b=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,o),b=!0;break}(r.autoClear||b)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),S&&(S.isCubeTexture||S.mapping===Ba)?(d===void 0&&(d=new gn(new Jr(1,1,1),new Hi({name:"BackgroundCubeMaterial",uniforms:Na(Si.backgroundCube.uniforms),vertexShader:Si.backgroundCube.vertexShader,fragmentShader:Si.backgroundCube.fragmentShader,side:In,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(R,N,B){this.matrixWorld.copyPosition(B.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=S,d.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,d.material.toneMapped=S.colorSpace!==ct,(m!==S||p!==S.version||g!==r.toneMapping)&&(d.material.needsUpdate=!0,m=S,p=S.version,g=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new gn(new Is(2,2),new Hi({name:"BackgroundMaterial",uniforms:Na(Si.background.uniforms),vertexShader:Si.background.vertexShader,fragmentShader:Si.background.fragmentShader,side:hr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=S.colorSpace!==ct,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(m!==S||p!==S.version||g!==r.toneMapping)&&(h.material.needsUpdate=!0,m=S,p=S.version,g=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function M(x,_){x.getRGB(wc,fv(r)),n.buffers.color.setClear(wc.r,wc.g,wc.b,_,o)}return{getClearColor:function(){return c},setClearColor:function(x,_=1){c.set(x),u=_,M(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,M(c,u)},render:v}}function GC(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,c={},u=x(null);let h=u,d=!1;function m(Z,W,he,ee,ae){let fe=!1;if(o){const me=M(ee,he,W);h!==me&&(h=me,g(h.object)),fe=_(Z,ee,he,ae),fe&&b(Z,ee,he,ae)}else{const me=W.wireframe===!0;(h.geometry!==ee.id||h.program!==he.id||h.wireframe!==me)&&(h.geometry=ee.id,h.program=he.id,h.wireframe=me,fe=!0)}ae!==null&&t.update(ae,r.ELEMENT_ARRAY_BUFFER),(fe||d)&&(d=!1,B(Z,W,he,ee),ae!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(ae).buffer))}function p(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function g(Z){return n.isWebGL2?r.bindVertexArray(Z):s.bindVertexArrayOES(Z)}function v(Z){return n.isWebGL2?r.deleteVertexArray(Z):s.deleteVertexArrayOES(Z)}function M(Z,W,he){const ee=he.wireframe===!0;let ae=c[Z.id];ae===void 0&&(ae={},c[Z.id]=ae);let fe=ae[W.id];fe===void 0&&(fe={},ae[W.id]=fe);let me=fe[ee];return me===void 0&&(me=x(p()),fe[ee]=me),me}function x(Z){const W=[],he=[],ee=[];for(let ae=0;ae<i;ae++)W[ae]=0,he[ae]=0,ee[ae]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:W,enabledAttributes:he,attributeDivisors:ee,object:Z,attributes:{},index:null}}function _(Z,W,he,ee){const ae=h.attributes,fe=W.attributes;let me=0;const Ee=he.getAttributes();for(const Q in Ee)if(Ee[Q].location>=0){const _e=ae[Q];let Pe=fe[Q];if(Pe===void 0&&(Q==="instanceMatrix"&&Z.instanceMatrix&&(Pe=Z.instanceMatrix),Q==="instanceColor"&&Z.instanceColor&&(Pe=Z.instanceColor)),_e===void 0||_e.attribute!==Pe||Pe&&_e.data!==Pe.data)return!0;me++}return h.attributesNum!==me||h.index!==ee}function b(Z,W,he,ee){const ae={},fe=W.attributes;let me=0;const Ee=he.getAttributes();for(const Q in Ee)if(Ee[Q].location>=0){let _e=fe[Q];_e===void 0&&(Q==="instanceMatrix"&&Z.instanceMatrix&&(_e=Z.instanceMatrix),Q==="instanceColor"&&Z.instanceColor&&(_e=Z.instanceColor));const Pe={};Pe.attribute=_e,_e&&_e.data&&(Pe.data=_e.data),ae[Q]=Pe,me++}h.attributes=ae,h.attributesNum=me,h.index=ee}function S(){const Z=h.newAttributes;for(let W=0,he=Z.length;W<he;W++)Z[W]=0}function w(Z){P(Z,0)}function P(Z,W){const he=h.newAttributes,ee=h.enabledAttributes,ae=h.attributeDivisors;he[Z]=1,ee[Z]===0&&(r.enableVertexAttribArray(Z),ee[Z]=1),ae[Z]!==W&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Z,W),ae[Z]=W)}function R(){const Z=h.newAttributes,W=h.enabledAttributes;for(let he=0,ee=W.length;he<ee;he++)W[he]!==Z[he]&&(r.disableVertexAttribArray(he),W[he]=0)}function N(Z,W,he,ee,ae,fe,me){me===!0?r.vertexAttribIPointer(Z,W,he,ae,fe):r.vertexAttribPointer(Z,W,he,ee,ae,fe)}function B(Z,W,he,ee){if(n.isWebGL2===!1&&(Z.isInstancedMesh||ee.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const ae=ee.attributes,fe=he.getAttributes(),me=W.defaultAttributeValues;for(const Ee in fe){const Q=fe[Ee];if(Q.location>=0){let ge=ae[Ee];if(ge===void 0&&(Ee==="instanceMatrix"&&Z.instanceMatrix&&(ge=Z.instanceMatrix),Ee==="instanceColor"&&Z.instanceColor&&(ge=Z.instanceColor)),ge!==void 0){const _e=ge.normalized,Pe=ge.itemSize,Le=t.get(ge);if(Le===void 0)continue;const He=Le.buffer,tt=Le.type,Ye=Le.bytesPerElement,At=n.isWebGL2===!0&&(tt===r.INT||tt===r.UNSIGNED_INT||ge.gpuType===vd);if(ge.isInterleavedBufferAttribute){const Qe=ge.data,z=Qe.stride,Me=ge.offset;if(Qe.isInstancedInterleavedBuffer){for(let ie=0;ie<Q.locationSize;ie++)P(Q.location+ie,Qe.meshPerAttribute);Z.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=Qe.meshPerAttribute*Qe.count)}else for(let ie=0;ie<Q.locationSize;ie++)w(Q.location+ie);r.bindBuffer(r.ARRAY_BUFFER,He);for(let ie=0;ie<Q.locationSize;ie++)N(Q.location+ie,Pe/Q.locationSize,tt,_e,z*Ye,(Me+Pe/Q.locationSize*ie)*Ye,At)}else{if(ge.isInstancedBufferAttribute){for(let Qe=0;Qe<Q.locationSize;Qe++)P(Q.location+Qe,ge.meshPerAttribute);Z.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=ge.meshPerAttribute*ge.count)}else for(let Qe=0;Qe<Q.locationSize;Qe++)w(Q.location+Qe);r.bindBuffer(r.ARRAY_BUFFER,He);for(let Qe=0;Qe<Q.locationSize;Qe++)N(Q.location+Qe,Pe/Q.locationSize,tt,_e,Pe*Ye,Pe/Q.locationSize*Qe*Ye,At)}}else if(me!==void 0){const _e=me[Ee];if(_e!==void 0)switch(_e.length){case 2:r.vertexAttrib2fv(Q.location,_e);break;case 3:r.vertexAttrib3fv(Q.location,_e);break;case 4:r.vertexAttrib4fv(Q.location,_e);break;default:r.vertexAttrib1fv(Q.location,_e)}}}}R()}function T(){ce();for(const Z in c){const W=c[Z];for(const he in W){const ee=W[he];for(const ae in ee)v(ee[ae].object),delete ee[ae];delete W[he]}delete c[Z]}}function D(Z){if(c[Z.id]===void 0)return;const W=c[Z.id];for(const he in W){const ee=W[he];for(const ae in ee)v(ee[ae].object),delete ee[ae];delete W[he]}delete c[Z.id]}function J(Z){for(const W in c){const he=c[W];if(he[Z.id]===void 0)continue;const ee=he[Z.id];for(const ae in ee)v(ee[ae].object),delete ee[ae];delete he[Z.id]}}function ce(){q(),d=!0,h!==u&&(h=u,g(h.object))}function q(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:m,reset:ce,resetDefaultState:q,dispose:T,releaseStatesOfGeometry:D,releaseStatesOfProgram:J,initAttributes:S,enableAttribute:w,disableUnusedAttributes:R}}function kC(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,m){if(m===0)return;let p,g;if(i)p=r,g="drawArraysInstanced";else if(p=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[g](s,h,d,m),t.update(d,s,m)}this.setMode=o,this.render=c,this.renderInstances=u}function VC(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(N){if(N==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";N="mediump"}return N==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=o||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,m=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=r.getParameter(r.MAX_TEXTURE_SIZE),v=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),M=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),_=r.getParameter(r.MAX_VARYING_VECTORS),b=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),S=p>0,w=o||e.has("OES_texture_float"),P=S&&w,R=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:m,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:v,maxAttributes:M,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:b,vertexTextures:S,floatFragmentTextures:w,floatVertexTextures:P,maxSamples:R}}function WC(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new Pr,c=new pt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,p){const g=m.length!==0||p||n!==0||i;return i=p,n=m.length,g},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(m,p){t=d(m,p,0)},this.setState=function(m,p,g){const v=m.clippingPlanes,M=m.clipIntersection,x=m.clipShadows,_=r.get(m);if(!i||v===null||v.length===0||s&&!x)s?d(null):h();else{const b=s?0:n,S=b*4;let w=_.clippingState||null;u.value=w,w=d(v,p,S,g);for(let P=0;P!==S;++P)w[P]=t[P];_.clippingState=w,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=b}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(m,p,g,v){const M=m!==null?m.length:0;let x=null;if(M!==0){if(x=u.value,v!==!0||x===null){const _=g+M*4,b=p.matrixWorldInverse;c.getNormalMatrix(b),(x===null||x.length<_)&&(x=new Float32Array(_));for(let S=0,w=g;S!==M;++S,w+=4)o.copy(m[S]).applyMatrix4(b,c),o.normal.toArray(x,w),x[w+3]=o.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function XC(r){let e=new WeakMap;function t(o,c){return c===Uo?o.mapping=Hr:c===Do&&(o.mapping=Gr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const c=o.mapping;if(c===Uo||c===Do)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const h=new mv(u.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const c=o.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class xu extends il{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,o,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const wa=4,Hg=[.125,.215,.35,.446,.526,.582],_s=20,lf=new xu,Gg=new Ue;let cf=null;const ms=(1+Math.sqrt(5))/2,_a=1/ms,kg=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,ms,_a),new U(0,ms,-_a),new U(_a,0,ms),new U(-_a,0,ms),new U(ms,_a,0),new U(-ms,_a,0)];class sd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){cf=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Xg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Wg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(cf),e.scissorTest=!1,Tc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Hr||e.mapping===Gr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),cf=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:en,minFilter:en,generateMipmaps:!1,type:Ua,format:$n,colorSpace:bi,depthBuffer:!1},i=Vg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Vg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=qC(s)),this._blurMaterial=YC(s,e,t)}return i}_compileMaterial(e){const t=new gn(this._lodPlanes[0],e);this._renderer.compile(t,lf)}_sceneToCubeUV(e,t,n,i){const c=new yn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,m=d.autoClear,p=d.toneMapping;d.getClearColor(Gg),d.toneMapping=Bi,d.autoClear=!1;const g=new Zr({name:"PMREM.Background",side:In,depthWrite:!1,depthTest:!1}),v=new gn(new Jr,g);let M=!1;const x=e.background;x?x.isColor&&(g.color.copy(x),e.background=null,M=!0):(g.color.copy(Gg),M=!0);for(let _=0;_<6;_++){const b=_%3;b===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):b===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const S=this._cubeSize;Tc(i,b*S,_>2?S:0,S,S),d.setRenderTarget(i),M&&d.render(v,c),d.render(e,c)}v.geometry.dispose(),v.material.dispose(),d.toneMapping=p,d.autoClear=m,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Hr||e.mapping===Gr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Xg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Wg());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new gn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Tc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,lf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=kg[(i-1)%kg.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,c){const u=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,m=new gn(this._lodPlanes[i],h),p=h.uniforms,g=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*_s-1),M=s/v,x=isFinite(s)?1+Math.floor(d*M):_s;x>_s&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${_s}`);const _=[];let b=0;for(let N=0;N<_s;++N){const B=N/M,T=Math.exp(-B*B/2);_.push(T),N===0?b+=T:N<x&&(b+=2*T)}for(let N=0;N<_.length;N++)_[N]=_[N]/b;p.envMap.value=e.texture,p.samples.value=x,p.weights.value=_,p.latitudinal.value=o==="latitudinal",c&&(p.poleAxis.value=c);const{_lodMax:S}=this;p.dTheta.value=v,p.mipInt.value=S-n;const w=this._sizeLods[i],P=3*w*(i>S-wa?i-S+wa:0),R=4*(this._cubeSize-w);Tc(t,P,R,3*w,2*w),u.setRenderTarget(t),u.render(m,lf)}}function qC(r){const e=[],t=[],n=[];let i=r;const s=r-wa+1+Hg.length;for(let o=0;o<s;o++){const c=Math.pow(2,i);t.push(c);let u=1/c;o>r-wa?u=Hg[o-r+wa-1]:o===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,m=1+h,p=[d,d,m,d,m,m,d,d,m,m,d,m],g=6,v=6,M=3,x=2,_=1,b=new Float32Array(M*v*g),S=new Float32Array(x*v*g),w=new Float32Array(_*v*g);for(let R=0;R<g;R++){const N=R%3*2/3-1,B=R>2?0:-1,T=[N,B,0,N+2/3,B,0,N+2/3,B+1,0,N,B,0,N+2/3,B+1,0,N,B+1,0];b.set(T,M*v*R),S.set(p,x*v*R);const D=[R,R,R,R,R,R];w.set(D,_*v*R)}const P=new vt;P.setAttribute("position",new Nt(b,M)),P.setAttribute("uv",new Nt(S,x)),P.setAttribute("faceIndex",new Nt(w,_)),e.push(P),i>wa&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Vg(r,e,t){const n=new Ei(r,e,t);return n.texture.mapping=Ba,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Tc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function YC(r,e,t){const n=new Float32Array(_s),i=new U(0,1,0);return new Hi({name:"SphericalGaussianBlur",defines:{n:_s,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Id(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:cr,depthTest:!1,depthWrite:!1})}function Wg(){return new Hi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Id(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:cr,depthTest:!1,depthWrite:!1})}function Xg(){return new Hi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Id(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:cr,depthTest:!1,depthWrite:!1})}function Id(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ZC(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===Uo||u===Do,d=u===Hr||u===Gr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let m=e.get(c);return t===null&&(t=new sd(r)),m=h?t.fromEquirectangular(c,m):t.fromCubemap(c,m),e.set(c,m),m.texture}else{if(e.has(c))return e.get(c).texture;{const m=c.image;if(h&&m&&m.height>0||d&&m&&i(m)){t===null&&(t=new sd(r));const p=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,p),c.addEventListener("dispose",s),p.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function JC(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function KC(r,e,t,n){const i={},s=new WeakMap;function o(m){const p=m.target;p.index!==null&&e.remove(p.index);for(const v in p.attributes)e.remove(p.attributes[v]);for(const v in p.morphAttributes){const M=p.morphAttributes[v];for(let x=0,_=M.length;x<_;x++)e.remove(M[x])}p.removeEventListener("dispose",o),delete i[p.id];const g=s.get(p);g&&(e.remove(g),s.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function c(m,p){return i[p.id]===!0||(p.addEventListener("dispose",o),i[p.id]=!0,t.memory.geometries++),p}function u(m){const p=m.attributes;for(const v in p)e.update(p[v],r.ARRAY_BUFFER);const g=m.morphAttributes;for(const v in g){const M=g[v];for(let x=0,_=M.length;x<_;x++)e.update(M[x],r.ARRAY_BUFFER)}}function h(m){const p=[],g=m.index,v=m.attributes.position;let M=0;if(g!==null){const b=g.array;M=g.version;for(let S=0,w=b.length;S<w;S+=3){const P=b[S+0],R=b[S+1],N=b[S+2];p.push(P,R,R,N,N,P)}}else{const b=v.array;M=v.version;for(let S=0,w=b.length/3-1;S<w;S+=3){const P=S+0,R=S+1,N=S+2;p.push(P,R,R,N,N,P)}}const x=new(uv(p)?Ld:Pd)(p,1);x.version=M;const _=s.get(m);_&&e.remove(_),s.set(m,x)}function d(m){const p=s.get(m);if(p){const g=m.index;g!==null&&p.version<g.version&&h(m)}else h(m);return s.get(m)}return{get:c,update:u,getWireframeAttribute:d}}function $C(r,e,t,n){const i=n.isWebGL2;let s;function o(p){s=p}let c,u;function h(p){c=p.type,u=p.bytesPerElement}function d(p,g){r.drawElements(s,g,c,p*u),t.update(g,s,1)}function m(p,g,v){if(v===0)return;let M,x;if(i)M=r,x="drawElementsInstanced";else if(M=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",M===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}M[x](s,g,c,p*u,v),t.update(g,s,v)}this.setMode=o,this.setIndex=h,this.render=d,this.renderInstances=m}function QC(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,c){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function jC(r,e){return r[0]-e[0]}function eP(r,e){return Math.abs(e[1])-Math.abs(r[1])}function tP(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new Pt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,m){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const g=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,v=g!==void 0?g.length:0;let M=s.get(d);if(M===void 0||M.count!==v){let Z=function(){ce.dispose(),s.delete(d),d.removeEventListener("dispose",Z)};M!==void 0&&M.texture.dispose();const b=d.morphAttributes.position!==void 0,S=d.morphAttributes.normal!==void 0,w=d.morphAttributes.color!==void 0,P=d.morphAttributes.position||[],R=d.morphAttributes.normal||[],N=d.morphAttributes.color||[];let B=0;b===!0&&(B=1),S===!0&&(B=2),w===!0&&(B=3);let T=d.attributes.position.count*B,D=1;T>e.maxTextureSize&&(D=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const J=new Float32Array(T*D*4*v),ce=new gu(J,T,D,v);ce.type=Di,ce.needsUpdate=!0;const q=B*4;for(let W=0;W<v;W++){const he=P[W],ee=R[W],ae=N[W],fe=T*D*4*W;for(let me=0;me<he.count;me++){const Ee=me*q;b===!0&&(o.fromBufferAttribute(he,me),J[fe+Ee+0]=o.x,J[fe+Ee+1]=o.y,J[fe+Ee+2]=o.z,J[fe+Ee+3]=0),S===!0&&(o.fromBufferAttribute(ee,me),J[fe+Ee+4]=o.x,J[fe+Ee+5]=o.y,J[fe+Ee+6]=o.z,J[fe+Ee+7]=0),w===!0&&(o.fromBufferAttribute(ae,me),J[fe+Ee+8]=o.x,J[fe+Ee+9]=o.y,J[fe+Ee+10]=o.z,J[fe+Ee+11]=ae.itemSize===4?o.w:1)}}M={count:v,texture:ce,size:new ue(T,D)},s.set(d,M),d.addEventListener("dispose",Z)}let x=0;for(let b=0;b<p.length;b++)x+=p[b];const _=d.morphTargetsRelative?1:1-x;m.getUniforms().setValue(r,"morphTargetBaseInfluence",_),m.getUniforms().setValue(r,"morphTargetInfluences",p),m.getUniforms().setValue(r,"morphTargetsTexture",M.texture,t),m.getUniforms().setValue(r,"morphTargetsTextureSize",M.size)}else{const g=p===void 0?0:p.length;let v=n[d.id];if(v===void 0||v.length!==g){v=[];for(let S=0;S<g;S++)v[S]=[S,0];n[d.id]=v}for(let S=0;S<g;S++){const w=v[S];w[0]=S,w[1]=p[S]}v.sort(eP);for(let S=0;S<8;S++)S<g&&v[S][1]?(c[S][0]=v[S][0],c[S][1]=v[S][1]):(c[S][0]=Number.MAX_SAFE_INTEGER,c[S][1]=0);c.sort(jC);const M=d.morphAttributes.position,x=d.morphAttributes.normal;let _=0;for(let S=0;S<8;S++){const w=c[S],P=w[0],R=w[1];P!==Number.MAX_SAFE_INTEGER&&R?(M&&d.getAttribute("morphTarget"+S)!==M[P]&&d.setAttribute("morphTarget"+S,M[P]),x&&d.getAttribute("morphNormal"+S)!==x[P]&&d.setAttribute("morphNormal"+S,x[P]),i[S]=R,_+=R):(M&&d.hasAttribute("morphTarget"+S)===!0&&d.deleteAttribute("morphTarget"+S),x&&d.hasAttribute("morphNormal"+S)===!0&&d.deleteAttribute("morphNormal"+S),i[S]=0)}const b=d.morphTargetsRelative?1:1-_;m.getUniforms().setValue(r,"morphTargetBaseInfluence",b),m.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function nP(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,m=e.get(u,d);return i.get(m)!==h&&(e.update(m),i.set(m,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER)),m}function o(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const _v=new tn,vv=new gu,xv=new Cd,yv=new rl,qg=[],Yg=[],Zg=new Float32Array(16),Jg=new Float32Array(9),Kg=new Float32Array(4);function Ha(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=qg[i];if(s===void 0&&(s=new Float32Array(i),qg[i]=s),e!==0){n.toArray(s,0);for(let o=1,c=0;o!==e;++o)c+=t,r[o].toArray(s,c)}return s}function un(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function hn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function yu(r,e){let t=Yg[e];t===void 0&&(t=new Int32Array(e),Yg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function iP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function rP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2fv(this.addr,e),hn(t,e)}}function sP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(un(t,e))return;r.uniform3fv(this.addr,e),hn(t,e)}}function aP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4fv(this.addr,e),hn(t,e)}}function oP(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),hn(t,e)}else{if(un(t,n))return;Kg.set(n),r.uniformMatrix2fv(this.addr,!1,Kg),hn(t,n)}}function lP(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),hn(t,e)}else{if(un(t,n))return;Jg.set(n),r.uniformMatrix3fv(this.addr,!1,Jg),hn(t,n)}}function cP(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),hn(t,e)}else{if(un(t,n))return;Zg.set(n),r.uniformMatrix4fv(this.addr,!1,Zg),hn(t,n)}}function uP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function hP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2iv(this.addr,e),hn(t,e)}}function fP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(un(t,e))return;r.uniform3iv(this.addr,e),hn(t,e)}}function dP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4iv(this.addr,e),hn(t,e)}}function pP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function mP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2uiv(this.addr,e),hn(t,e)}}function gP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(un(t,e))return;r.uniform3uiv(this.addr,e),hn(t,e)}}function _P(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4uiv(this.addr,e),hn(t,e)}}function vP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||_v,i)}function xP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||xv,i)}function yP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||yv,i)}function MP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||vv,i)}function SP(r){switch(r){case 5126:return iP;case 35664:return rP;case 35665:return sP;case 35666:return aP;case 35674:return oP;case 35675:return lP;case 35676:return cP;case 5124:case 35670:return uP;case 35667:case 35671:return hP;case 35668:case 35672:return fP;case 35669:case 35673:return dP;case 5125:return pP;case 36294:return mP;case 36295:return gP;case 36296:return _P;case 35678:case 36198:case 36298:case 36306:case 35682:return vP;case 35679:case 36299:case 36307:return xP;case 35680:case 36300:case 36308:case 36293:return yP;case 36289:case 36303:case 36311:case 36292:return MP}}function bP(r,e){r.uniform1fv(this.addr,e)}function EP(r,e){const t=Ha(e,this.size,2);r.uniform2fv(this.addr,t)}function wP(r,e){const t=Ha(e,this.size,3);r.uniform3fv(this.addr,t)}function TP(r,e){const t=Ha(e,this.size,4);r.uniform4fv(this.addr,t)}function AP(r,e){const t=Ha(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function RP(r,e){const t=Ha(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function CP(r,e){const t=Ha(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function PP(r,e){r.uniform1iv(this.addr,e)}function LP(r,e){r.uniform2iv(this.addr,e)}function IP(r,e){r.uniform3iv(this.addr,e)}function UP(r,e){r.uniform4iv(this.addr,e)}function DP(r,e){r.uniform1uiv(this.addr,e)}function NP(r,e){r.uniform2uiv(this.addr,e)}function OP(r,e){r.uniform3uiv(this.addr,e)}function FP(r,e){r.uniform4uiv(this.addr,e)}function BP(r,e,t){const n=this.cache,i=e.length,s=yu(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||_v,s[o])}function zP(r,e,t){const n=this.cache,i=e.length,s=yu(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||xv,s[o])}function HP(r,e,t){const n=this.cache,i=e.length,s=yu(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||yv,s[o])}function GP(r,e,t){const n=this.cache,i=e.length,s=yu(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||vv,s[o])}function kP(r){switch(r){case 5126:return bP;case 35664:return EP;case 35665:return wP;case 35666:return TP;case 35674:return AP;case 35675:return RP;case 35676:return CP;case 5124:case 35670:return PP;case 35667:case 35671:return LP;case 35668:case 35672:return IP;case 35669:case 35673:return UP;case 5125:return DP;case 36294:return NP;case 36295:return OP;case 36296:return FP;case 35678:case 36198:case 36298:case 36306:case 35682:return BP;case 35679:case 36299:case 36307:return zP;case 35680:case 36300:case 36308:case 36293:return HP;case 36289:case 36303:case 36311:case 36292:return GP}}class VP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=SP(t.type)}}class WP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=kP(t.type)}}class XP{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const uf=/(\w+)(\])?(\[|\.)?/g;function $g(r,e){r.seq.push(e),r.map[e.id]=e}function qP(r,e,t){const n=r.name,i=n.length;for(uf.lastIndex=0;;){const s=uf.exec(n),o=uf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&o+2===i){$g(t,h===void 0?new VP(c,r,e):new WP(c,r,e));break}else{let m=t.map[c];m===void 0&&(m=new XP(c),$g(t,m)),t=m}}}class tu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);qP(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Qg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let YP=0;function ZP(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const c=o+1;n.push(`${c===e?">":" "} ${c}: ${t[o]}`)}return n.join(`
`)}function JP(r){switch(r){case bi:return["Linear","( value )"];case ct:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function jg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+ZP(r.getShaderSource(e),o)}else return i}function KP(r,e){const t=JP(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function $P(r,e){let t;switch(e){case D0:t="Linear";break;case N0:t="Reinhard";break;case O0:t="OptimizedCineon";break;case F0:t="ACESFilmic";break;case B0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function QP(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(wo).join(`
`)}function jP(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function e2(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:c}}return t}function wo(r){return r!==""}function e_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function t_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const t2=/^[ \t]*#include +<([\w\d./]+)>/gm;function ad(r){return r.replace(t2,n2)}function n2(r,e){const t=dt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return ad(t)}const i2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function n_(r){return r.replace(i2,r2)}function r2(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function i_(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function s2(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===pd?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===f0?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ii&&(e="SHADOWMAP_TYPE_VSM"),e}function a2(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Hr:case Gr:e="ENVMAP_TYPE_CUBE";break;case Ba:e="ENVMAP_TYPE_CUBE_UV";break}return e}function o2(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Gr:e="ENVMAP_MODE_REFRACTION";break}return e}function l2(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case tl:e="ENVMAP_BLENDING_MULTIPLY";break;case I0:e="ENVMAP_BLENDING_MIX";break;case U0:e="ENVMAP_BLENDING_ADD";break}return e}function c2(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function u2(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,c=t.fragmentShader;const u=s2(t),h=a2(t),d=o2(t),m=l2(t),p=c2(t),g=t.isWebGL2?"":QP(t),v=jP(s),M=i.createProgram();let x,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(wo).join(`
`),x.length>0&&(x+=`
`),_=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(wo).join(`
`),_.length>0&&(_+=`
`)):(x=[i_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(wo).join(`
`),_=[g,i_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+m:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Bi?"#define TONE_MAPPING":"",t.toneMapping!==Bi?dt.tonemapping_pars_fragment:"",t.toneMapping!==Bi?$P("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",dt.encodings_pars_fragment,KP("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(wo).join(`
`)),o=ad(o),o=e_(o,t),o=t_(o,t),c=ad(c),c=e_(c,t),c=t_(c,t),o=n_(o),c=n_(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["#define varying in",t.glslVersion===id?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===id?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const S=b+x+o,w=b+_+c,P=Qg(i,i.VERTEX_SHADER,S),R=Qg(i,i.FRAGMENT_SHADER,w);if(i.attachShader(M,P),i.attachShader(M,R),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(M).trim(),D=i.getShaderInfoLog(P).trim(),J=i.getShaderInfoLog(R).trim();let ce=!0,q=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(ce=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,P,R);else{const Z=jg(i,P,"vertex"),W=jg(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Program Info Log: `+T+`
`+Z+`
`+W)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(D===""||J==="")&&(q=!1);q&&(this.diagnostics={runnable:ce,programLog:T,vertexShader:{log:D,prefix:x},fragmentShader:{log:J,prefix:_}})}i.deleteShader(P),i.deleteShader(R);let N;this.getUniforms=function(){return N===void 0&&(N=new tu(i,M)),N};let B;return this.getAttributes=function(){return B===void 0&&(B=e2(i,M)),B},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=YP++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=P,this.fragmentShader=R,this}let h2=0;class f2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new d2(e),t.set(e,n)),n}}class d2{constructor(e){this.id=h2++,this.code=e,this.usedTimes=0}}function p2(r,e,t,n,i,s,o){const c=new _u,u=new f2,h=[],d=i.isWebGL2,m=i.logarithmicDepthBuffer,p=i.vertexTextures;let g=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(T){return T===0?"uv":`uv${T}`}function x(T,D,J,ce,q){const Z=ce.fog,W=q.geometry,he=T.isMeshStandardMaterial?ce.environment:null,ee=(T.isMeshStandardMaterial?t:e).get(T.envMap||he),ae=ee&&ee.mapping===Ba?ee.image.height:null,fe=v[T.type];T.precision!==null&&(g=i.getMaxPrecision(T.precision),g!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",g,"instead."));const me=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,Ee=me!==void 0?me.length:0;let Q=0;W.morphAttributes.position!==void 0&&(Q=1),W.morphAttributes.normal!==void 0&&(Q=2),W.morphAttributes.color!==void 0&&(Q=3);let ge,_e,Pe,Le;if(fe){const Xt=Si[fe];ge=Xt.vertexShader,_e=Xt.fragmentShader}else ge=T.vertexShader,_e=T.fragmentShader,u.update(T),Pe=u.getVertexShaderID(T),Le=u.getFragmentShaderID(T);const He=r.getRenderTarget(),tt=q.isInstancedMesh===!0,Ye=!!T.map,At=!!T.matcap,Qe=!!ee,z=!!T.aoMap,Me=!!T.lightMap,ie=!!T.bumpMap,ye=!!T.normalMap,de=!!T.displacementMap,Ne=!!T.emissiveMap,Ie=!!T.metalnessMap,Oe=!!T.roughnessMap,je=T.anisotropy>0,nt=T.clearcoat>0,Lt=T.iridescence>0,O=T.sheen>0,L=T.transmission>0,j=je&&!!T.anisotropyMap,xe=nt&&!!T.clearcoatMap,ve=nt&&!!T.clearcoatNormalMap,Se=nt&&!!T.clearcoatRoughnessMap,ke=Lt&&!!T.iridescenceMap,we=Lt&&!!T.iridescenceThicknessMap,re=O&&!!T.sheenColorMap,We=O&&!!T.sheenRoughnessMap,Xe=!!T.specularMap,qe=!!T.specularColorMap,Be=!!T.specularIntensityMap,ze=L&&!!T.transmissionMap,ut=L&&!!T.thicknessMap,It=!!T.gradientMap,G=!!T.alphaMap,Ae=T.alphaTest>0,$=!!T.extensions,be=!!W.attributes.uv1,Ce=!!W.attributes.uv2,bt=!!W.attributes.uv3;return{isWebGL2:d,shaderID:fe,shaderType:T.type,shaderName:T.name,vertexShader:ge,fragmentShader:_e,defines:T.defines,customVertexShaderID:Pe,customFragmentShaderID:Le,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:g,instancing:tt,instancingColor:tt&&q.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:He===null?r.outputColorSpace:He.isXRRenderTarget===!0?He.texture.colorSpace:bi,map:Ye,matcap:At,envMap:Qe,envMapMode:Qe&&ee.mapping,envMapCubeUVHeight:ae,aoMap:z,lightMap:Me,bumpMap:ie,normalMap:ye,displacementMap:p&&de,emissiveMap:Ne,normalMapObjectSpace:ye&&T.normalMapType===j0,normalMapTangentSpace:ye&&T.normalMapType===Yr,metalnessMap:Ie,roughnessMap:Oe,anisotropy:je,anisotropyMap:j,clearcoat:nt,clearcoatMap:xe,clearcoatNormalMap:ve,clearcoatRoughnessMap:Se,iridescence:Lt,iridescenceMap:ke,iridescenceThicknessMap:we,sheen:O,sheenColorMap:re,sheenRoughnessMap:We,specularMap:Xe,specularColorMap:qe,specularIntensityMap:Be,transmission:L,transmissionMap:ze,thicknessMap:ut,gradientMap:It,opaque:T.transparent===!1&&T.blending===Ss,alphaMap:G,alphaTest:Ae,combine:T.combine,mapUv:Ye&&M(T.map.channel),aoMapUv:z&&M(T.aoMap.channel),lightMapUv:Me&&M(T.lightMap.channel),bumpMapUv:ie&&M(T.bumpMap.channel),normalMapUv:ye&&M(T.normalMap.channel),displacementMapUv:de&&M(T.displacementMap.channel),emissiveMapUv:Ne&&M(T.emissiveMap.channel),metalnessMapUv:Ie&&M(T.metalnessMap.channel),roughnessMapUv:Oe&&M(T.roughnessMap.channel),anisotropyMapUv:j&&M(T.anisotropyMap.channel),clearcoatMapUv:xe&&M(T.clearcoatMap.channel),clearcoatNormalMapUv:ve&&M(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Se&&M(T.clearcoatRoughnessMap.channel),iridescenceMapUv:ke&&M(T.iridescenceMap.channel),iridescenceThicknessMapUv:we&&M(T.iridescenceThicknessMap.channel),sheenColorMapUv:re&&M(T.sheenColorMap.channel),sheenRoughnessMapUv:We&&M(T.sheenRoughnessMap.channel),specularMapUv:Xe&&M(T.specularMap.channel),specularColorMapUv:qe&&M(T.specularColorMap.channel),specularIntensityMapUv:Be&&M(T.specularIntensityMap.channel),transmissionMapUv:ze&&M(T.transmissionMap.channel),thicknessMapUv:ut&&M(T.thicknessMap.channel),alphaMapUv:G&&M(T.alphaMap.channel),vertexTangents:!!W.attributes.tangent&&(ye||je),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,vertexUv1s:be,vertexUv2s:Ce,vertexUv3s:bt,pointsUvs:q.isPoints===!0&&!!W.attributes.uv&&(Ye||G),fog:!!Z,useFog:T.fog===!0,fogExp2:Z&&Z.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:q.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:Ee,morphTextureStride:Q,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numSpotLightMaps:D.spotLightMap.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numSpotLightShadowsWithMaps:D.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&J.length>0,shadowMapType:r.shadowMap.type,toneMapping:T.toneMapped?r.toneMapping:Bi,useLegacyLights:r.useLegacyLights,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===Ui,flipSided:T.side===In,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:$&&T.extensions.derivatives===!0,extensionFragDepth:$&&T.extensions.fragDepth===!0,extensionDrawBuffers:$&&T.extensions.drawBuffers===!0,extensionShaderTextureLOD:$&&T.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:T.customProgramCacheKey()}}function _(T){const D=[];if(T.shaderID?D.push(T.shaderID):(D.push(T.customVertexShaderID),D.push(T.customFragmentShaderID)),T.defines!==void 0)for(const J in T.defines)D.push(J),D.push(T.defines[J]);return T.isRawShaderMaterial===!1&&(b(D,T),S(D,T),D.push(r.outputColorSpace)),D.push(T.customProgramCacheKey),D.join()}function b(T,D){T.push(D.precision),T.push(D.outputColorSpace),T.push(D.envMapMode),T.push(D.envMapCubeUVHeight),T.push(D.mapUv),T.push(D.alphaMapUv),T.push(D.lightMapUv),T.push(D.aoMapUv),T.push(D.bumpMapUv),T.push(D.normalMapUv),T.push(D.displacementMapUv),T.push(D.emissiveMapUv),T.push(D.metalnessMapUv),T.push(D.roughnessMapUv),T.push(D.anisotropyMapUv),T.push(D.clearcoatMapUv),T.push(D.clearcoatNormalMapUv),T.push(D.clearcoatRoughnessMapUv),T.push(D.iridescenceMapUv),T.push(D.iridescenceThicknessMapUv),T.push(D.sheenColorMapUv),T.push(D.sheenRoughnessMapUv),T.push(D.specularMapUv),T.push(D.specularColorMapUv),T.push(D.specularIntensityMapUv),T.push(D.transmissionMapUv),T.push(D.thicknessMapUv),T.push(D.combine),T.push(D.fogExp2),T.push(D.sizeAttenuation),T.push(D.morphTargetsCount),T.push(D.morphAttributeCount),T.push(D.numDirLights),T.push(D.numPointLights),T.push(D.numSpotLights),T.push(D.numSpotLightMaps),T.push(D.numHemiLights),T.push(D.numRectAreaLights),T.push(D.numDirLightShadows),T.push(D.numPointLightShadows),T.push(D.numSpotLightShadows),T.push(D.numSpotLightShadowsWithMaps),T.push(D.shadowMapType),T.push(D.toneMapping),T.push(D.numClippingPlanes),T.push(D.numClipIntersection),T.push(D.depthPacking)}function S(T,D){c.disableAll(),D.isWebGL2&&c.enable(0),D.supportsVertexTextures&&c.enable(1),D.instancing&&c.enable(2),D.instancingColor&&c.enable(3),D.matcap&&c.enable(4),D.envMap&&c.enable(5),D.normalMapObjectSpace&&c.enable(6),D.normalMapTangentSpace&&c.enable(7),D.clearcoat&&c.enable(8),D.iridescence&&c.enable(9),D.alphaTest&&c.enable(10),D.vertexColors&&c.enable(11),D.vertexAlphas&&c.enable(12),D.vertexUv1s&&c.enable(13),D.vertexUv2s&&c.enable(14),D.vertexUv3s&&c.enable(15),D.vertexTangents&&c.enable(16),D.anisotropy&&c.enable(17),T.push(c.mask),c.disableAll(),D.fog&&c.enable(0),D.useFog&&c.enable(1),D.flatShading&&c.enable(2),D.logarithmicDepthBuffer&&c.enable(3),D.skinning&&c.enable(4),D.morphTargets&&c.enable(5),D.morphNormals&&c.enable(6),D.morphColors&&c.enable(7),D.premultipliedAlpha&&c.enable(8),D.shadowMapEnabled&&c.enable(9),D.useLegacyLights&&c.enable(10),D.doubleSided&&c.enable(11),D.flipSided&&c.enable(12),D.useDepthPacking&&c.enable(13),D.dithering&&c.enable(14),D.transmission&&c.enable(15),D.sheen&&c.enable(16),D.opaque&&c.enable(17),D.pointsUvs&&c.enable(18),T.push(c.mask)}function w(T){const D=v[T.type];let J;if(D){const ce=Si[D];J=dv.clone(ce.uniforms)}else J=T.uniforms;return J}function P(T,D){let J;for(let ce=0,q=h.length;ce<q;ce++){const Z=h[ce];if(Z.cacheKey===D){J=Z,++J.usedTimes;break}}return J===void 0&&(J=new u2(r,D,T,s),h.push(J)),J}function R(T){if(--T.usedTimes===0){const D=h.indexOf(T);h[D]=h[h.length-1],h.pop(),T.destroy()}}function N(T){u.remove(T)}function B(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:w,acquireProgram:P,releaseProgram:R,releaseShaderCache:N,programs:h,dispose:B}}function m2(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,c){r.get(s)[o]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function g2(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function r_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function s_(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(m,p,g,v,M,x){let _=r[e];return _===void 0?(_={id:m.id,object:m,geometry:p,material:g,groupOrder:v,renderOrder:m.renderOrder,z:M,group:x},r[e]=_):(_.id=m.id,_.object=m,_.geometry=p,_.material=g,_.groupOrder=v,_.renderOrder=m.renderOrder,_.z=M,_.group=x),e++,_}function c(m,p,g,v,M,x){const _=o(m,p,g,v,M,x);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function u(m,p,g,v,M,x){const _=o(m,p,g,v,M,x);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(m,p){t.length>1&&t.sort(m||g2),n.length>1&&n.sort(p||r_),i.length>1&&i.sort(p||r_)}function d(){for(let m=e,p=r.length;m<p;m++){const g=r[m];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function _2(){let r=new WeakMap;function e(n,i){const s=r.get(n);let o;return s===void 0?(o=new s_,r.set(n,[o])):i>=s.length?(o=new s_,s.push(o)):o=s[i],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function v2(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Ue};break;case"SpotLight":t={position:new U,direction:new U,color:new Ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Ue,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Ue,groundColor:new Ue};break;case"RectAreaLight":t={color:new Ue,position:new U,halfWidth:new U,halfHeight:new U};break}return r[e.id]=t,t}}}function x2(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let y2=0;function M2(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function S2(r,e){const t=new v2,n=x2(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new U);const s=new U,o=new st,c=new st;function u(d,m){let p=0,g=0,v=0;for(let J=0;J<9;J++)i.probe[J].set(0,0,0);let M=0,x=0,_=0,b=0,S=0,w=0,P=0,R=0,N=0,B=0;d.sort(M2);const T=m===!0?Math.PI:1;for(let J=0,ce=d.length;J<ce;J++){const q=d[J],Z=q.color,W=q.intensity,he=q.distance,ee=q.shadow&&q.shadow.map?q.shadow.map.texture:null;if(q.isAmbientLight)p+=Z.r*W*T,g+=Z.g*W*T,v+=Z.b*W*T;else if(q.isLightProbe)for(let ae=0;ae<9;ae++)i.probe[ae].addScaledVector(q.sh.coefficients[ae],W);else if(q.isDirectionalLight){const ae=t.get(q);if(ae.color.copy(q.color).multiplyScalar(q.intensity*T),q.castShadow){const fe=q.shadow,me=n.get(q);me.shadowBias=fe.bias,me.shadowNormalBias=fe.normalBias,me.shadowRadius=fe.radius,me.shadowMapSize=fe.mapSize,i.directionalShadow[M]=me,i.directionalShadowMap[M]=ee,i.directionalShadowMatrix[M]=q.shadow.matrix,w++}i.directional[M]=ae,M++}else if(q.isSpotLight){const ae=t.get(q);ae.position.setFromMatrixPosition(q.matrixWorld),ae.color.copy(Z).multiplyScalar(W*T),ae.distance=he,ae.coneCos=Math.cos(q.angle),ae.penumbraCos=Math.cos(q.angle*(1-q.penumbra)),ae.decay=q.decay,i.spot[_]=ae;const fe=q.shadow;if(q.map&&(i.spotLightMap[N]=q.map,N++,fe.updateMatrices(q),q.castShadow&&B++),i.spotLightMatrix[_]=fe.matrix,q.castShadow){const me=n.get(q);me.shadowBias=fe.bias,me.shadowNormalBias=fe.normalBias,me.shadowRadius=fe.radius,me.shadowMapSize=fe.mapSize,i.spotShadow[_]=me,i.spotShadowMap[_]=ee,R++}_++}else if(q.isRectAreaLight){const ae=t.get(q);ae.color.copy(Z).multiplyScalar(W),ae.halfWidth.set(q.width*.5,0,0),ae.halfHeight.set(0,q.height*.5,0),i.rectArea[b]=ae,b++}else if(q.isPointLight){const ae=t.get(q);if(ae.color.copy(q.color).multiplyScalar(q.intensity*T),ae.distance=q.distance,ae.decay=q.decay,q.castShadow){const fe=q.shadow,me=n.get(q);me.shadowBias=fe.bias,me.shadowNormalBias=fe.normalBias,me.shadowRadius=fe.radius,me.shadowMapSize=fe.mapSize,me.shadowCameraNear=fe.camera.near,me.shadowCameraFar=fe.camera.far,i.pointShadow[x]=me,i.pointShadowMap[x]=ee,i.pointShadowMatrix[x]=q.shadow.matrix,P++}i.point[x]=ae,x++}else if(q.isHemisphereLight){const ae=t.get(q);ae.skyColor.copy(q.color).multiplyScalar(W*T),ae.groundColor.copy(q.groundColor).multiplyScalar(W*T),i.hemi[S]=ae,S++}}b>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_FLOAT_1,i.rectAreaLTC2=Te.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_HALF_1,i.rectAreaLTC2=Te.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=p,i.ambient[1]=g,i.ambient[2]=v;const D=i.hash;(D.directionalLength!==M||D.pointLength!==x||D.spotLength!==_||D.rectAreaLength!==b||D.hemiLength!==S||D.numDirectionalShadows!==w||D.numPointShadows!==P||D.numSpotShadows!==R||D.numSpotMaps!==N)&&(i.directional.length=M,i.spot.length=_,i.rectArea.length=b,i.point.length=x,i.hemi.length=S,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=P,i.pointShadowMap.length=P,i.spotShadow.length=R,i.spotShadowMap.length=R,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=P,i.spotLightMatrix.length=R+N-B,i.spotLightMap.length=N,i.numSpotLightShadowsWithMaps=B,D.directionalLength=M,D.pointLength=x,D.spotLength=_,D.rectAreaLength=b,D.hemiLength=S,D.numDirectionalShadows=w,D.numPointShadows=P,D.numSpotShadows=R,D.numSpotMaps=N,i.version=y2++)}function h(d,m){let p=0,g=0,v=0,M=0,x=0;const _=m.matrixWorldInverse;for(let b=0,S=d.length;b<S;b++){const w=d[b];if(w.isDirectionalLight){const P=i.directional[p];P.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(_),p++}else if(w.isSpotLight){const P=i.spot[v];P.position.setFromMatrixPosition(w.matrixWorld),P.position.applyMatrix4(_),P.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(_),v++}else if(w.isRectAreaLight){const P=i.rectArea[M];P.position.setFromMatrixPosition(w.matrixWorld),P.position.applyMatrix4(_),c.identity(),o.copy(w.matrixWorld),o.premultiply(_),c.extractRotation(o),P.halfWidth.set(w.width*.5,0,0),P.halfHeight.set(0,w.height*.5,0),P.halfWidth.applyMatrix4(c),P.halfHeight.applyMatrix4(c),M++}else if(w.isPointLight){const P=i.point[g];P.position.setFromMatrixPosition(w.matrixWorld),P.position.applyMatrix4(_),g++}else if(w.isHemisphereLight){const P=i.hemi[x];P.direction.setFromMatrixPosition(w.matrixWorld),P.direction.transformDirection(_),x++}}}return{setup:u,setupView:h,state:i}}function a_(r,e){const t=new S2(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(m){n.push(m)}function c(m){i.push(m)}function u(m){t.setup(n,m)}function h(m){t.setupView(n,m)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:o,pushShadow:c}}function b2(r,e){let t=new WeakMap;function n(s,o=0){const c=t.get(s);let u;return c===void 0?(u=new a_(r,e),t.set(s,[u])):o>=c.length?(u=new a_(r,e),c.push(u)):u=c[o],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Ud extends Tn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=$0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Dd extends Tn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const E2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,w2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function T2(r,e,t){let n=new vu;const i=new ue,s=new ue,o=new Pt,c=new Ud({depthPacking:Q0}),u=new Dd,h={},d=t.maxTextureSize,m={[hr]:In,[In]:hr,[Ui]:Ui},p=new Hi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:E2,fragmentShader:w2}),g=p.clone();g.defines.HORIZONTAL_PASS=1;const v=new vt;v.setAttribute("position",new Nt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new gn(v,p),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=pd;let _=this.type;this.render=function(P,R,N){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||P.length===0)return;const B=r.getRenderTarget(),T=r.getActiveCubeFace(),D=r.getActiveMipmapLevel(),J=r.state;J.setBlending(cr),J.buffers.color.setClear(1,1,1,1),J.buffers.depth.setTest(!0),J.setScissorTest(!1);const ce=_!==Ii&&this.type===Ii,q=_===Ii&&this.type!==Ii;for(let Z=0,W=P.length;Z<W;Z++){const he=P[Z],ee=he.shadow;if(ee===void 0){console.warn("THREE.WebGLShadowMap:",he,"has no shadow.");continue}if(ee.autoUpdate===!1&&ee.needsUpdate===!1)continue;i.copy(ee.mapSize);const ae=ee.getFrameExtents();if(i.multiply(ae),s.copy(ee.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/ae.x),i.x=s.x*ae.x,ee.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/ae.y),i.y=s.y*ae.y,ee.mapSize.y=s.y)),ee.map===null||ce===!0||q===!0){const me=this.type!==Ii?{minFilter:Qt,magFilter:Qt}:{};ee.map!==null&&ee.map.dispose(),ee.map=new Ei(i.x,i.y,me),ee.map.texture.name=he.name+".shadowMap",ee.camera.updateProjectionMatrix()}r.setRenderTarget(ee.map),r.clear();const fe=ee.getViewportCount();for(let me=0;me<fe;me++){const Ee=ee.getViewport(me);o.set(s.x*Ee.x,s.y*Ee.y,s.x*Ee.z,s.y*Ee.w),J.viewport(o),ee.updateMatrices(he,me),n=ee.getFrustum(),w(R,N,ee.camera,he,this.type)}ee.isPointLightShadow!==!0&&this.type===Ii&&b(ee,N),ee.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(B,T,D)};function b(P,R){const N=e.update(M);p.defines.VSM_SAMPLES!==P.blurSamples&&(p.defines.VSM_SAMPLES=P.blurSamples,g.defines.VSM_SAMPLES=P.blurSamples,p.needsUpdate=!0,g.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new Ei(i.x,i.y)),p.uniforms.shadow_pass.value=P.map.texture,p.uniforms.resolution.value=P.mapSize,p.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(R,null,N,p,M,null),g.uniforms.shadow_pass.value=P.mapPass.texture,g.uniforms.resolution.value=P.mapSize,g.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(R,null,N,g,M,null)}function S(P,R,N,B){let T=null;const D=N.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(D!==void 0)T=D;else if(T=N.isPointLight===!0?u:c,r.localClippingEnabled&&R.clipShadows===!0&&Array.isArray(R.clippingPlanes)&&R.clippingPlanes.length!==0||R.displacementMap&&R.displacementScale!==0||R.alphaMap&&R.alphaTest>0||R.map&&R.alphaTest>0){const J=T.uuid,ce=R.uuid;let q=h[J];q===void 0&&(q={},h[J]=q);let Z=q[ce];Z===void 0&&(Z=T.clone(),q[ce]=Z),T=Z}if(T.visible=R.visible,T.wireframe=R.wireframe,B===Ii?T.side=R.shadowSide!==null?R.shadowSide:R.side:T.side=R.shadowSide!==null?R.shadowSide:m[R.side],T.alphaMap=R.alphaMap,T.alphaTest=R.alphaTest,T.map=R.map,T.clipShadows=R.clipShadows,T.clippingPlanes=R.clippingPlanes,T.clipIntersection=R.clipIntersection,T.displacementMap=R.displacementMap,T.displacementScale=R.displacementScale,T.displacementBias=R.displacementBias,T.wireframeLinewidth=R.wireframeLinewidth,T.linewidth=R.linewidth,N.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const J=r.properties.get(T);J.light=N}return T}function w(P,R,N,B,T){if(P.visible===!1)return;if(P.layers.test(R.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&T===Ii)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,P.matrixWorld);const ce=e.update(P),q=P.material;if(Array.isArray(q)){const Z=ce.groups;for(let W=0,he=Z.length;W<he;W++){const ee=Z[W],ae=q[ee.materialIndex];if(ae&&ae.visible){const fe=S(P,ae,B,T);r.renderBufferDirect(N,null,ce,fe,P,ee)}}}else if(q.visible){const Z=S(P,q,B,T);r.renderBufferDirect(N,null,ce,Z,P,null)}}const J=P.children;for(let ce=0,q=J.length;ce<q;ce++)w(J[ce],R,N,B,T)}}function A2(r,e,t){const n=t.isWebGL2;function i(){let G=!1;const Ae=new Pt;let $=null;const be=new Pt(0,0,0,0);return{setMask:function(Ce){$!==Ce&&!G&&(r.colorMask(Ce,Ce,Ce,Ce),$=Ce)},setLocked:function(Ce){G=Ce},setClear:function(Ce,bt,Bt,Xt,Ri){Ri===!0&&(Ce*=Xt,bt*=Xt,Bt*=Xt),Ae.set(Ce,bt,Bt,Xt),be.equals(Ae)===!1&&(r.clearColor(Ce,bt,Bt,Xt),be.copy(Ae))},reset:function(){G=!1,$=null,be.set(-1,0,0,0)}}}function s(){let G=!1,Ae=null,$=null,be=null;return{setTest:function(Ce){Ce?He(r.DEPTH_TEST):tt(r.DEPTH_TEST)},setMask:function(Ce){Ae!==Ce&&!G&&(r.depthMask(Ce),Ae=Ce)},setFunc:function(Ce){if($!==Ce){switch(Ce){case w0:r.depthFunc(r.NEVER);break;case T0:r.depthFunc(r.ALWAYS);break;case A0:r.depthFunc(r.LESS);break;case ou:r.depthFunc(r.LEQUAL);break;case R0:r.depthFunc(r.EQUAL);break;case C0:r.depthFunc(r.GEQUAL);break;case P0:r.depthFunc(r.GREATER);break;case L0:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}$=Ce}},setLocked:function(Ce){G=Ce},setClear:function(Ce){be!==Ce&&(r.clearDepth(Ce),be=Ce)},reset:function(){G=!1,Ae=null,$=null,be=null}}}function o(){let G=!1,Ae=null,$=null,be=null,Ce=null,bt=null,Bt=null,Xt=null,Ri=null;return{setTest:function(zt){G||(zt?He(r.STENCIL_TEST):tt(r.STENCIL_TEST))},setMask:function(zt){Ae!==zt&&!G&&(r.stencilMask(zt),Ae=zt)},setFunc:function(zt,ni,_n){($!==zt||be!==ni||Ce!==_n)&&(r.stencilFunc(zt,ni,_n),$=zt,be=ni,Ce=_n)},setOp:function(zt,ni,_n){(bt!==zt||Bt!==ni||Xt!==_n)&&(r.stencilOp(zt,ni,_n),bt=zt,Bt=ni,Xt=_n)},setLocked:function(zt){G=zt},setClear:function(zt){Ri!==zt&&(r.clearStencil(zt),Ri=zt)},reset:function(){G=!1,Ae=null,$=null,be=null,Ce=null,bt=null,Bt=null,Xt=null,Ri=null}}}const c=new i,u=new s,h=new o,d=new WeakMap,m=new WeakMap;let p={},g={},v=new WeakMap,M=[],x=null,_=!1,b=null,S=null,w=null,P=null,R=null,N=null,B=null,T=!1,D=null,J=null,ce=null,q=null,Z=null;const W=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let he=!1,ee=0;const ae=r.getParameter(r.VERSION);ae.indexOf("WebGL")!==-1?(ee=parseFloat(/^WebGL (\d)/.exec(ae)[1]),he=ee>=1):ae.indexOf("OpenGL ES")!==-1&&(ee=parseFloat(/^OpenGL ES (\d)/.exec(ae)[1]),he=ee>=2);let fe=null,me={};const Ee=r.getParameter(r.SCISSOR_BOX),Q=r.getParameter(r.VIEWPORT),ge=new Pt().fromArray(Ee),_e=new Pt().fromArray(Q);function Pe(G,Ae,$,be){const Ce=new Uint8Array(4),bt=r.createTexture();r.bindTexture(G,bt),r.texParameteri(G,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(G,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Bt=0;Bt<$;Bt++)n&&(G===r.TEXTURE_3D||G===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ae,0,r.RGBA,1,1,be,0,r.RGBA,r.UNSIGNED_BYTE,Ce):r.texImage2D(Ae+Bt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ce);return bt}const Le={};Le[r.TEXTURE_2D]=Pe(r.TEXTURE_2D,r.TEXTURE_2D,1),Le[r.TEXTURE_CUBE_MAP]=Pe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Le[r.TEXTURE_2D_ARRAY]=Pe(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Le[r.TEXTURE_3D]=Pe(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),He(r.DEPTH_TEST),u.setFunc(ou),de(!1),Ne(Rf),He(r.CULL_FACE),ie(cr);function He(G){p[G]!==!0&&(r.enable(G),p[G]=!0)}function tt(G){p[G]!==!1&&(r.disable(G),p[G]=!1)}function Ye(G,Ae){return g[G]!==Ae?(r.bindFramebuffer(G,Ae),g[G]=Ae,n&&(G===r.DRAW_FRAMEBUFFER&&(g[r.FRAMEBUFFER]=Ae),G===r.FRAMEBUFFER&&(g[r.DRAW_FRAMEBUFFER]=Ae)),!0):!1}function At(G,Ae){let $=M,be=!1;if(G)if($=v.get(Ae),$===void 0&&($=[],v.set(Ae,$)),G.isWebGLMultipleRenderTargets){const Ce=G.texture;if($.length!==Ce.length||$[0]!==r.COLOR_ATTACHMENT0){for(let bt=0,Bt=Ce.length;bt<Bt;bt++)$[bt]=r.COLOR_ATTACHMENT0+bt;$.length=Ce.length,be=!0}}else $[0]!==r.COLOR_ATTACHMENT0&&($[0]=r.COLOR_ATTACHMENT0,be=!0);else $[0]!==r.BACK&&($[0]=r.BACK,be=!0);be&&(t.isWebGL2?r.drawBuffers($):e.get("WEBGL_draw_buffers").drawBuffersWEBGL($))}function Qe(G){return x!==G?(r.useProgram(G),x=G,!0):!1}const z={[gs]:r.FUNC_ADD,[p0]:r.FUNC_SUBTRACT,[m0]:r.FUNC_REVERSE_SUBTRACT};if(n)z[If]=r.MIN,z[Uf]=r.MAX;else{const G=e.get("EXT_blend_minmax");G!==null&&(z[If]=G.MIN_EXT,z[Uf]=G.MAX_EXT)}const Me={[g0]:r.ZERO,[_0]:r.ONE,[v0]:r.SRC_COLOR,[md]:r.SRC_ALPHA,[E0]:r.SRC_ALPHA_SATURATE,[S0]:r.DST_COLOR,[y0]:r.DST_ALPHA,[x0]:r.ONE_MINUS_SRC_COLOR,[gd]:r.ONE_MINUS_SRC_ALPHA,[b0]:r.ONE_MINUS_DST_COLOR,[M0]:r.ONE_MINUS_DST_ALPHA};function ie(G,Ae,$,be,Ce,bt,Bt,Xt){if(G===cr){_===!0&&(tt(r.BLEND),_=!1);return}if(_===!1&&(He(r.BLEND),_=!0),G!==d0){if(G!==b||Xt!==T){if((S!==gs||R!==gs)&&(r.blendEquation(r.FUNC_ADD),S=gs,R=gs),Xt)switch(G){case Ss:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Cf:r.blendFunc(r.ONE,r.ONE);break;case Pf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Lf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Ss:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Cf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Pf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Lf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}w=null,P=null,N=null,B=null,b=G,T=Xt}return}Ce=Ce||Ae,bt=bt||$,Bt=Bt||be,(Ae!==S||Ce!==R)&&(r.blendEquationSeparate(z[Ae],z[Ce]),S=Ae,R=Ce),($!==w||be!==P||bt!==N||Bt!==B)&&(r.blendFuncSeparate(Me[$],Me[be],Me[bt],Me[Bt]),w=$,P=be,N=bt,B=Bt),b=G,T=!1}function ye(G,Ae){G.side===Ui?tt(r.CULL_FACE):He(r.CULL_FACE);let $=G.side===In;Ae&&($=!$),de($),G.blending===Ss&&G.transparent===!1?ie(cr):ie(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),u.setFunc(G.depthFunc),u.setTest(G.depthTest),u.setMask(G.depthWrite),c.setMask(G.colorWrite);const be=G.stencilWrite;h.setTest(be),be&&(h.setMask(G.stencilWriteMask),h.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),h.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Oe(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?He(r.SAMPLE_ALPHA_TO_COVERAGE):tt(r.SAMPLE_ALPHA_TO_COVERAGE)}function de(G){D!==G&&(G?r.frontFace(r.CW):r.frontFace(r.CCW),D=G)}function Ne(G){G!==u0?(He(r.CULL_FACE),G!==J&&(G===Rf?r.cullFace(r.BACK):G===h0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):tt(r.CULL_FACE),J=G}function Ie(G){G!==ce&&(he&&r.lineWidth(G),ce=G)}function Oe(G,Ae,$){G?(He(r.POLYGON_OFFSET_FILL),(q!==Ae||Z!==$)&&(r.polygonOffset(Ae,$),q=Ae,Z=$)):tt(r.POLYGON_OFFSET_FILL)}function je(G){G?He(r.SCISSOR_TEST):tt(r.SCISSOR_TEST)}function nt(G){G===void 0&&(G=r.TEXTURE0+W-1),fe!==G&&(r.activeTexture(G),fe=G)}function Lt(G,Ae,$){$===void 0&&(fe===null?$=r.TEXTURE0+W-1:$=fe);let be=me[$];be===void 0&&(be={type:void 0,texture:void 0},me[$]=be),(be.type!==G||be.texture!==Ae)&&(fe!==$&&(r.activeTexture($),fe=$),r.bindTexture(G,Ae||Le[G]),be.type=G,be.texture=Ae)}function O(){const G=me[fe];G!==void 0&&G.type!==void 0&&(r.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function L(){try{r.compressedTexImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function j(){try{r.compressedTexImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function xe(){try{r.texSubImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ve(){try{r.texSubImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Se(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ke(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function we(){try{r.texStorage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function re(){try{r.texStorage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function We(){try{r.texImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Xe(){try{r.texImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function qe(G){ge.equals(G)===!1&&(r.scissor(G.x,G.y,G.z,G.w),ge.copy(G))}function Be(G){_e.equals(G)===!1&&(r.viewport(G.x,G.y,G.z,G.w),_e.copy(G))}function ze(G,Ae){let $=m.get(Ae);$===void 0&&($=new WeakMap,m.set(Ae,$));let be=$.get(G);be===void 0&&(be=r.getUniformBlockIndex(Ae,G.name),$.set(G,be))}function ut(G,Ae){const be=m.get(Ae).get(G);d.get(Ae)!==be&&(r.uniformBlockBinding(Ae,be,G.__bindingPointIndex),d.set(Ae,be))}function It(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),p={},fe=null,me={},g={},v=new WeakMap,M=[],x=null,_=!1,b=null,S=null,w=null,P=null,R=null,N=null,B=null,T=!1,D=null,J=null,ce=null,q=null,Z=null,ge.set(0,0,r.canvas.width,r.canvas.height),_e.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:He,disable:tt,bindFramebuffer:Ye,drawBuffers:At,useProgram:Qe,setBlending:ie,setMaterial:ye,setFlipSided:de,setCullFace:Ne,setLineWidth:Ie,setPolygonOffset:Oe,setScissorTest:je,activeTexture:nt,bindTexture:Lt,unbindTexture:O,compressedTexImage2D:L,compressedTexImage3D:j,texImage2D:We,texImage3D:Xe,updateUBOMapping:ze,uniformBlockBinding:ut,texStorage2D:we,texStorage3D:re,texSubImage2D:xe,texSubImage3D:ve,compressedTexSubImage2D:Se,compressedTexSubImage3D:ke,scissor:qe,viewport:Be,reset:It}}function R2(r,e,t,n,i,s,o){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,m=i.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let M;const x=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(O,L){return _?new OffscreenCanvas(O,L):ko("canvas")}function S(O,L,j,xe){let ve=1;if((O.width>xe||O.height>xe)&&(ve=xe/Math.max(O.width,O.height)),ve<1||L===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const Se=L?uu:Math.floor,ke=Se(ve*O.width),we=Se(ve*O.height);M===void 0&&(M=b(ke,we));const re=j?b(ke,we):M;return re.width=ke,re.height=we,re.getContext("2d").drawImage(O,0,0,ke,we),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+ke+"x"+we+")."),re}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function w(O){return rd(O.width)&&rd(O.height)}function P(O){return c?!1:O.wrapS!==wn||O.wrapT!==wn||O.minFilter!==Qt&&O.minFilter!==en}function R(O,L){return O.generateMipmaps&&L&&O.minFilter!==Qt&&O.minFilter!==en}function N(O){r.generateMipmap(O)}function B(O,L,j,xe,ve=!1){if(c===!1)return L;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let Se=L;return L===r.RED&&(j===r.FLOAT&&(Se=r.R32F),j===r.HALF_FLOAT&&(Se=r.R16F),j===r.UNSIGNED_BYTE&&(Se=r.R8)),L===r.RG&&(j===r.FLOAT&&(Se=r.RG32F),j===r.HALF_FLOAT&&(Se=r.RG16F),j===r.UNSIGNED_BYTE&&(Se=r.RG8)),L===r.RGBA&&(j===r.FLOAT&&(Se=r.RGBA32F),j===r.HALF_FLOAT&&(Se=r.RGBA16F),j===r.UNSIGNED_BYTE&&(Se=xe===ct&&ve===!1?r.SRGB8_ALPHA8:r.RGBA8),j===r.UNSIGNED_SHORT_4_4_4_4&&(Se=r.RGBA4),j===r.UNSIGNED_SHORT_5_5_5_1&&(Se=r.RGB5_A1)),(Se===r.R16F||Se===r.R32F||Se===r.RG16F||Se===r.RG32F||Se===r.RGBA16F||Se===r.RGBA32F)&&e.get("EXT_color_buffer_float"),Se}function T(O,L,j){return R(O,j)===!0||O.isFramebufferTexture&&O.minFilter!==Qt&&O.minFilter!==en?Math.log2(Math.max(L.width,L.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?L.mipmaps.length:1}function D(O){return O===Qt||O===lu||O===Ao?r.NEAREST:r.LINEAR}function J(O){const L=O.target;L.removeEventListener("dispose",J),q(L),L.isVideoTexture&&v.delete(L)}function ce(O){const L=O.target;L.removeEventListener("dispose",ce),W(L)}function q(O){const L=n.get(O);if(L.__webglInit===void 0)return;const j=O.source,xe=x.get(j);if(xe){const ve=xe[L.__cacheKey];ve.usedTimes--,ve.usedTimes===0&&Z(O),Object.keys(xe).length===0&&x.delete(j)}n.remove(O)}function Z(O){const L=n.get(O);r.deleteTexture(L.__webglTexture);const j=O.source,xe=x.get(j);delete xe[L.__cacheKey],o.memory.textures--}function W(O){const L=O.texture,j=n.get(O),xe=n.get(L);if(xe.__webglTexture!==void 0&&(r.deleteTexture(xe.__webglTexture),o.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let ve=0;ve<6;ve++)r.deleteFramebuffer(j.__webglFramebuffer[ve]),j.__webglDepthbuffer&&r.deleteRenderbuffer(j.__webglDepthbuffer[ve]);else{if(r.deleteFramebuffer(j.__webglFramebuffer),j.__webglDepthbuffer&&r.deleteRenderbuffer(j.__webglDepthbuffer),j.__webglMultisampledFramebuffer&&r.deleteFramebuffer(j.__webglMultisampledFramebuffer),j.__webglColorRenderbuffer)for(let ve=0;ve<j.__webglColorRenderbuffer.length;ve++)j.__webglColorRenderbuffer[ve]&&r.deleteRenderbuffer(j.__webglColorRenderbuffer[ve]);j.__webglDepthRenderbuffer&&r.deleteRenderbuffer(j.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let ve=0,Se=L.length;ve<Se;ve++){const ke=n.get(L[ve]);ke.__webglTexture&&(r.deleteTexture(ke.__webglTexture),o.memory.textures--),n.remove(L[ve])}n.remove(L),n.remove(O)}let he=0;function ee(){he=0}function ae(){const O=he;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),he+=1,O}function fe(O){const L=[];return L.push(O.wrapS),L.push(O.wrapT),L.push(O.wrapR||0),L.push(O.magFilter),L.push(O.minFilter),L.push(O.anisotropy),L.push(O.internalFormat),L.push(O.format),L.push(O.type),L.push(O.generateMipmaps),L.push(O.premultiplyAlpha),L.push(O.flipY),L.push(O.unpackAlignment),L.push(O.colorSpace),L.join()}function me(O,L){const j=n.get(O);if(O.isVideoTexture&&nt(O),O.isRenderTargetTexture===!1&&O.version>0&&j.__version!==O.version){const xe=O.image;if(xe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(xe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ye(j,O,L);return}}t.bindTexture(r.TEXTURE_2D,j.__webglTexture,r.TEXTURE0+L)}function Ee(O,L){const j=n.get(O);if(O.version>0&&j.__version!==O.version){Ye(j,O,L);return}t.bindTexture(r.TEXTURE_2D_ARRAY,j.__webglTexture,r.TEXTURE0+L)}function Q(O,L){const j=n.get(O);if(O.version>0&&j.__version!==O.version){Ye(j,O,L);return}t.bindTexture(r.TEXTURE_3D,j.__webglTexture,r.TEXTURE0+L)}function ge(O,L){const j=n.get(O);if(O.version>0&&j.__version!==O.version){At(j,O,L);return}t.bindTexture(r.TEXTURE_CUBE_MAP,j.__webglTexture,r.TEXTURE0+L)}const _e={[No]:r.REPEAT,[wn]:r.CLAMP_TO_EDGE,[Oo]:r.MIRRORED_REPEAT},Pe={[Qt]:r.NEAREST,[lu]:r.NEAREST_MIPMAP_NEAREST,[Ao]:r.NEAREST_MIPMAP_LINEAR,[en]:r.LINEAR,[_d]:r.LINEAR_MIPMAP_NEAREST,[kr]:r.LINEAR_MIPMAP_LINEAR},Le={[tv]:r.NEVER,[lv]:r.ALWAYS,[nv]:r.LESS,[rv]:r.LEQUAL,[iv]:r.EQUAL,[ov]:r.GEQUAL,[sv]:r.GREATER,[av]:r.NOTEQUAL};function He(O,L,j){if(j?(r.texParameteri(O,r.TEXTURE_WRAP_S,_e[L.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,_e[L.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,_e[L.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,Pe[L.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,Pe[L.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(L.wrapS!==wn||L.wrapT!==wn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,D(L.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,D(L.minFilter)),L.minFilter!==Qt&&L.minFilter!==en&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),L.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,Le[L.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const xe=e.get("EXT_texture_filter_anisotropic");if(L.magFilter===Qt||L.minFilter!==Ao&&L.minFilter!==kr||L.type===Di&&e.has("OES_texture_float_linear")===!1||c===!1&&L.type===Ua&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||n.get(L).__currentAnisotropy)&&(r.texParameterf(O,xe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,i.getMaxAnisotropy())),n.get(L).__currentAnisotropy=L.anisotropy)}}function tt(O,L){let j=!1;O.__webglInit===void 0&&(O.__webglInit=!0,L.addEventListener("dispose",J));const xe=L.source;let ve=x.get(xe);ve===void 0&&(ve={},x.set(xe,ve));const Se=fe(L);if(Se!==O.__cacheKey){ve[Se]===void 0&&(ve[Se]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,j=!0),ve[Se].usedTimes++;const ke=ve[O.__cacheKey];ke!==void 0&&(ve[O.__cacheKey].usedTimes--,ke.usedTimes===0&&Z(L)),O.__cacheKey=Se,O.__webglTexture=ve[Se].texture}return j}function Ye(O,L,j){let xe=r.TEXTURE_2D;(L.isDataArrayTexture||L.isCompressedArrayTexture)&&(xe=r.TEXTURE_2D_ARRAY),L.isData3DTexture&&(xe=r.TEXTURE_3D);const ve=tt(O,L),Se=L.source;t.bindTexture(xe,O.__webglTexture,r.TEXTURE0+j);const ke=n.get(Se);if(Se.version!==ke.__version||ve===!0){t.activeTexture(r.TEXTURE0+j),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const we=P(L)&&w(L.image)===!1;let re=S(L.image,we,!1,d);re=Lt(L,re);const We=w(re)||c,Xe=s.convert(L.format,L.colorSpace);let qe=s.convert(L.type),Be=B(L.internalFormat,Xe,qe,L.colorSpace);He(xe,L,We);let ze;const ut=L.mipmaps,It=c&&L.isVideoTexture!==!0,G=ke.__version===void 0||ve===!0,Ae=T(L,re,We);if(L.isDepthTexture)Be=r.DEPTH_COMPONENT,c?L.type===Di?Be=r.DEPTH_COMPONENT32F:L.type===lr?Be=r.DEPTH_COMPONENT24:L.type===Nr?Be=r.DEPTH24_STENCIL8:Be=r.DEPTH_COMPONENT16:L.type===Di&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===Or&&Be===r.DEPTH_COMPONENT&&L.type!==pu&&L.type!==lr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=lr,qe=s.convert(L.type)),L.format===As&&Be===r.DEPTH_COMPONENT&&(Be=r.DEPTH_STENCIL,L.type!==Nr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=Nr,qe=s.convert(L.type))),G&&(It?t.texStorage2D(r.TEXTURE_2D,1,Be,re.width,re.height):t.texImage2D(r.TEXTURE_2D,0,Be,re.width,re.height,0,Xe,qe,null));else if(L.isDataTexture)if(ut.length>0&&We){It&&G&&t.texStorage2D(r.TEXTURE_2D,Ae,Be,ut[0].width,ut[0].height);for(let $=0,be=ut.length;$<be;$++)ze=ut[$],It?t.texSubImage2D(r.TEXTURE_2D,$,0,0,ze.width,ze.height,Xe,qe,ze.data):t.texImage2D(r.TEXTURE_2D,$,Be,ze.width,ze.height,0,Xe,qe,ze.data);L.generateMipmaps=!1}else It?(G&&t.texStorage2D(r.TEXTURE_2D,Ae,Be,re.width,re.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,re.width,re.height,Xe,qe,re.data)):t.texImage2D(r.TEXTURE_2D,0,Be,re.width,re.height,0,Xe,qe,re.data);else if(L.isCompressedTexture)if(L.isCompressedArrayTexture){It&&G&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,Be,ut[0].width,ut[0].height,re.depth);for(let $=0,be=ut.length;$<be;$++)ze=ut[$],L.format!==$n?Xe!==null?It?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,0,ze.width,ze.height,re.depth,Xe,ze.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,$,Be,ze.width,ze.height,re.depth,0,ze.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):It?t.texSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,0,ze.width,ze.height,re.depth,Xe,qe,ze.data):t.texImage3D(r.TEXTURE_2D_ARRAY,$,Be,ze.width,ze.height,re.depth,0,Xe,qe,ze.data)}else{It&&G&&t.texStorage2D(r.TEXTURE_2D,Ae,Be,ut[0].width,ut[0].height);for(let $=0,be=ut.length;$<be;$++)ze=ut[$],L.format!==$n?Xe!==null?It?t.compressedTexSubImage2D(r.TEXTURE_2D,$,0,0,ze.width,ze.height,Xe,ze.data):t.compressedTexImage2D(r.TEXTURE_2D,$,Be,ze.width,ze.height,0,ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):It?t.texSubImage2D(r.TEXTURE_2D,$,0,0,ze.width,ze.height,Xe,qe,ze.data):t.texImage2D(r.TEXTURE_2D,$,Be,ze.width,ze.height,0,Xe,qe,ze.data)}else if(L.isDataArrayTexture)It?(G&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,Be,re.width,re.height,re.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,re.width,re.height,re.depth,Xe,qe,re.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Be,re.width,re.height,re.depth,0,Xe,qe,re.data);else if(L.isData3DTexture)It?(G&&t.texStorage3D(r.TEXTURE_3D,Ae,Be,re.width,re.height,re.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,re.width,re.height,re.depth,Xe,qe,re.data)):t.texImage3D(r.TEXTURE_3D,0,Be,re.width,re.height,re.depth,0,Xe,qe,re.data);else if(L.isFramebufferTexture){if(G)if(It)t.texStorage2D(r.TEXTURE_2D,Ae,Be,re.width,re.height);else{let $=re.width,be=re.height;for(let Ce=0;Ce<Ae;Ce++)t.texImage2D(r.TEXTURE_2D,Ce,Be,$,be,0,Xe,qe,null),$>>=1,be>>=1}}else if(ut.length>0&&We){It&&G&&t.texStorage2D(r.TEXTURE_2D,Ae,Be,ut[0].width,ut[0].height);for(let $=0,be=ut.length;$<be;$++)ze=ut[$],It?t.texSubImage2D(r.TEXTURE_2D,$,0,0,Xe,qe,ze):t.texImage2D(r.TEXTURE_2D,$,Be,Xe,qe,ze);L.generateMipmaps=!1}else It?(G&&t.texStorage2D(r.TEXTURE_2D,Ae,Be,re.width,re.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Xe,qe,re)):t.texImage2D(r.TEXTURE_2D,0,Be,Xe,qe,re);R(L,We)&&N(xe),ke.__version=Se.version,L.onUpdate&&L.onUpdate(L)}O.__version=L.version}function At(O,L,j){if(L.image.length!==6)return;const xe=tt(O,L),ve=L.source;t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+j);const Se=n.get(ve);if(ve.version!==Se.__version||xe===!0){t.activeTexture(r.TEXTURE0+j),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const ke=L.isCompressedTexture||L.image[0].isCompressedTexture,we=L.image[0]&&L.image[0].isDataTexture,re=[];for(let $=0;$<6;$++)!ke&&!we?re[$]=S(L.image[$],!1,!0,h):re[$]=we?L.image[$].image:L.image[$],re[$]=Lt(L,re[$]);const We=re[0],Xe=w(We)||c,qe=s.convert(L.format,L.colorSpace),Be=s.convert(L.type),ze=B(L.internalFormat,qe,Be,L.colorSpace),ut=c&&L.isVideoTexture!==!0,It=Se.__version===void 0||xe===!0;let G=T(L,We,Xe);He(r.TEXTURE_CUBE_MAP,L,Xe);let Ae;if(ke){ut&&It&&t.texStorage2D(r.TEXTURE_CUBE_MAP,G,ze,We.width,We.height);for(let $=0;$<6;$++){Ae=re[$].mipmaps;for(let be=0;be<Ae.length;be++){const Ce=Ae[be];L.format!==$n?qe!==null?ut?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be,0,0,Ce.width,Ce.height,qe,Ce.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be,ze,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be,0,0,Ce.width,Ce.height,qe,Be,Ce.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be,ze,Ce.width,Ce.height,0,qe,Be,Ce.data)}}}else{Ae=L.mipmaps,ut&&It&&(Ae.length>0&&G++,t.texStorage2D(r.TEXTURE_CUBE_MAP,G,ze,re[0].width,re[0].height));for(let $=0;$<6;$++)if(we){ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,0,0,re[$].width,re[$].height,qe,Be,re[$].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,ze,re[$].width,re[$].height,0,qe,Be,re[$].data);for(let be=0;be<Ae.length;be++){const bt=Ae[be].image[$].image;ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be+1,0,0,bt.width,bt.height,qe,Be,bt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be+1,ze,bt.width,bt.height,0,qe,Be,bt.data)}}else{ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,0,0,qe,Be,re[$]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,ze,qe,Be,re[$]);for(let be=0;be<Ae.length;be++){const Ce=Ae[be];ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be+1,0,0,qe,Be,Ce.image[$]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,be+1,ze,qe,Be,Ce.image[$])}}}R(L,Xe)&&N(r.TEXTURE_CUBE_MAP),Se.__version=ve.version,L.onUpdate&&L.onUpdate(L)}O.__version=L.version}function Qe(O,L,j,xe,ve){const Se=s.convert(j.format,j.colorSpace),ke=s.convert(j.type),we=B(j.internalFormat,Se,ke,j.colorSpace);n.get(L).__hasExternalTextures||(ve===r.TEXTURE_3D||ve===r.TEXTURE_2D_ARRAY?t.texImage3D(ve,0,we,L.width,L.height,L.depth,0,Se,ke,null):t.texImage2D(ve,0,we,L.width,L.height,0,Se,ke,null)),t.bindFramebuffer(r.FRAMEBUFFER,O),je(L)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,xe,ve,n.get(j).__webglTexture,0,Oe(L)):(ve===r.TEXTURE_2D||ve>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ve<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,xe,ve,n.get(j).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function z(O,L,j){if(r.bindRenderbuffer(r.RENDERBUFFER,O),L.depthBuffer&&!L.stencilBuffer){let xe=r.DEPTH_COMPONENT16;if(j||je(L)){const ve=L.depthTexture;ve&&ve.isDepthTexture&&(ve.type===Di?xe=r.DEPTH_COMPONENT32F:ve.type===lr&&(xe=r.DEPTH_COMPONENT24));const Se=Oe(L);je(L)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Se,xe,L.width,L.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,Se,xe,L.width,L.height)}else r.renderbufferStorage(r.RENDERBUFFER,xe,L.width,L.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(L.depthBuffer&&L.stencilBuffer){const xe=Oe(L);j&&je(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,xe,r.DEPTH24_STENCIL8,L.width,L.height):je(L)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,xe,r.DEPTH24_STENCIL8,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const xe=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let ve=0;ve<xe.length;ve++){const Se=xe[ve],ke=s.convert(Se.format,Se.colorSpace),we=s.convert(Se.type),re=B(Se.internalFormat,ke,we,Se.colorSpace),We=Oe(L);j&&je(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,We,re,L.width,L.height):je(L)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,We,re,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,re,L.width,L.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Me(O,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),me(L.depthTexture,0);const xe=n.get(L.depthTexture).__webglTexture,ve=Oe(L);if(L.depthTexture.format===Or)je(L)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,xe,0,ve):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,xe,0);else if(L.depthTexture.format===As)je(L)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,xe,0,ve):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,xe,0);else throw new Error("Unknown depthTexture format")}function ie(O){const L=n.get(O),j=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!L.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");Me(L.__webglFramebuffer,O)}else if(j){L.__webglDepthbuffer=[];for(let xe=0;xe<6;xe++)t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer[xe]),L.__webglDepthbuffer[xe]=r.createRenderbuffer(),z(L.__webglDepthbuffer[xe],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer),L.__webglDepthbuffer=r.createRenderbuffer(),z(L.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function ye(O,L,j){const xe=n.get(O);L!==void 0&&Qe(xe.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),j!==void 0&&ie(O)}function de(O){const L=O.texture,j=n.get(O),xe=n.get(L);O.addEventListener("dispose",ce),O.isWebGLMultipleRenderTargets!==!0&&(xe.__webglTexture===void 0&&(xe.__webglTexture=r.createTexture()),xe.__version=L.version,o.memory.textures++);const ve=O.isWebGLCubeRenderTarget===!0,Se=O.isWebGLMultipleRenderTargets===!0,ke=w(O)||c;if(ve){j.__webglFramebuffer=[];for(let we=0;we<6;we++)j.__webglFramebuffer[we]=r.createFramebuffer()}else{if(j.__webglFramebuffer=r.createFramebuffer(),Se)if(i.drawBuffers){const we=O.texture;for(let re=0,We=we.length;re<We;re++){const Xe=n.get(we[re]);Xe.__webglTexture===void 0&&(Xe.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&je(O)===!1){const we=Se?L:[L];j.__webglMultisampledFramebuffer=r.createFramebuffer(),j.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,j.__webglMultisampledFramebuffer);for(let re=0;re<we.length;re++){const We=we[re];j.__webglColorRenderbuffer[re]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,j.__webglColorRenderbuffer[re]);const Xe=s.convert(We.format,We.colorSpace),qe=s.convert(We.type),Be=B(We.internalFormat,Xe,qe,We.colorSpace,O.isXRRenderTarget===!0),ze=Oe(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,ze,Be,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+re,r.RENDERBUFFER,j.__webglColorRenderbuffer[re])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(j.__webglDepthRenderbuffer=r.createRenderbuffer(),z(j.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ve){t.bindTexture(r.TEXTURE_CUBE_MAP,xe.__webglTexture),He(r.TEXTURE_CUBE_MAP,L,ke);for(let we=0;we<6;we++)Qe(j.__webglFramebuffer[we],O,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+we);R(L,ke)&&N(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Se){const we=O.texture;for(let re=0,We=we.length;re<We;re++){const Xe=we[re],qe=n.get(Xe);t.bindTexture(r.TEXTURE_2D,qe.__webglTexture),He(r.TEXTURE_2D,Xe,ke),Qe(j.__webglFramebuffer,O,Xe,r.COLOR_ATTACHMENT0+re,r.TEXTURE_2D),R(Xe,ke)&&N(r.TEXTURE_2D)}t.unbindTexture()}else{let we=r.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?we=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(we,xe.__webglTexture),He(we,L,ke),Qe(j.__webglFramebuffer,O,L,r.COLOR_ATTACHMENT0,we),R(L,ke)&&N(we),t.unbindTexture()}O.depthBuffer&&ie(O)}function Ne(O){const L=w(O)||c,j=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let xe=0,ve=j.length;xe<ve;xe++){const Se=j[xe];if(R(Se,L)){const ke=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,we=n.get(Se).__webglTexture;t.bindTexture(ke,we),N(ke),t.unbindTexture()}}}function Ie(O){if(c&&O.samples>0&&je(O)===!1){const L=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],j=O.width,xe=O.height;let ve=r.COLOR_BUFFER_BIT;const Se=[],ke=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,we=n.get(O),re=O.isWebGLMultipleRenderTargets===!0;if(re)for(let We=0;We<L.length;We++)t.bindFramebuffer(r.FRAMEBUFFER,we.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,we.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,we.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,we.__webglFramebuffer);for(let We=0;We<L.length;We++){Se.push(r.COLOR_ATTACHMENT0+We),O.depthBuffer&&Se.push(ke);const Xe=we.__ignoreDepthValues!==void 0?we.__ignoreDepthValues:!1;if(Xe===!1&&(O.depthBuffer&&(ve|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(ve|=r.STENCIL_BUFFER_BIT)),re&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,we.__webglColorRenderbuffer[We]),Xe===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[ke]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[ke])),re){const qe=n.get(L[We]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,qe,0)}r.blitFramebuffer(0,0,j,xe,0,0,j,xe,ve,r.NEAREST),g&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Se)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),re)for(let We=0;We<L.length;We++){t.bindFramebuffer(r.FRAMEBUFFER,we.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.RENDERBUFFER,we.__webglColorRenderbuffer[We]);const Xe=n.get(L[We]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,we.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.TEXTURE_2D,Xe,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,we.__webglMultisampledFramebuffer)}}function Oe(O){return Math.min(m,O.samples)}function je(O){const L=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function nt(O){const L=o.render.frame;v.get(O)!==L&&(v.set(O,L),O.update())}function Lt(O,L){const j=O.colorSpace,xe=O.format,ve=O.type;return O.isCompressedTexture===!0||O.format===cu||j!==bi&&j!==Br&&(j===ct?c===!1?e.has("EXT_sRGB")===!0&&xe===$n?(O.format=cu,O.minFilter=en,O.generateMipmaps=!1):L=Rd.sRGBToLinear(L):(xe!==$n||ve!==ur)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",j)),L}this.allocateTextureUnit=ae,this.resetTextureUnits=ee,this.setTexture2D=me,this.setTexture2DArray=Ee,this.setTexture3D=Q,this.setTextureCube=ge,this.rebindTextures=ye,this.setupRenderTarget=de,this.updateRenderTargetMipmap=Ne,this.updateMultisampleRenderTarget=Ie,this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=Qe,this.useMultisampledRTT=je}function Mv(r,e,t){const n=t.isWebGL2;function i(s,o=Br){let c;if(s===ur)return r.UNSIGNED_BYTE;if(s===xd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===yd)return r.UNSIGNED_SHORT_5_5_5_1;if(s===z0)return r.BYTE;if(s===H0)return r.SHORT;if(s===pu)return r.UNSIGNED_SHORT;if(s===vd)return r.INT;if(s===lr)return r.UNSIGNED_INT;if(s===Di)return r.FLOAT;if(s===Ua)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===G0)return r.ALPHA;if(s===$n)return r.RGBA;if(s===k0)return r.LUMINANCE;if(s===V0)return r.LUMINANCE_ALPHA;if(s===Or)return r.DEPTH_COMPONENT;if(s===As)return r.DEPTH_STENCIL;if(s===cu)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===W0)return r.RED;if(s===Md)return r.RED_INTEGER;if(s===X0)return r.RG;if(s===Sd)return r.RG_INTEGER;if(s===bd)return r.RGBA_INTEGER;if(s===Zc||s===Jc||s===Kc||s===$c)if(o===ct)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Zc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Jc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Kc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===$c)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Zc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Jc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Kc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===$c)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Df||s===Nf||s===Of||s===Ff)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Df)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Nf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Of)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Ff)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===q0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Bf||s===zf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Bf)return o===ct?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===zf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Hf||s===Gf||s===kf||s===Vf||s===Wf||s===Xf||s===qf||s===Yf||s===Zf||s===Jf||s===Kf||s===$f||s===Qf||s===jf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===Hf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Gf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===kf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Vf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Wf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Xf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===qf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Yf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Zf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Jf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Kf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===$f)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Qf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===jf)return o===ct?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Qc)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Qc)return o===ct?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===Y0||s===ed||s===td||s===nd)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Qc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===ed)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===td)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===nd)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Nr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Sv extends yn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ta extends wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const C2={type:"move"};class hf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ta,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ta,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ta,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),_=this._getHandJoint(h,M);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const d=h.joints["index-finger-tip"],m=h.joints["thumb-tip"],p=d.position.distanceTo(m.position),g=.02,v=.005;h.inputState.pinching&&p>g+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&p<=g-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(C2)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Ta;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class bv extends tn{constructor(e,t,n,i,s,o,c,u,h,d){if(d=d!==void 0?d:Or,d!==Or&&d!==As)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Or&&(n=lr),n===void 0&&d===As&&(n=Nr),super(null,i,s,o,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Qt,this.minFilter=u!==void 0?u:Qt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class P2 extends dr{constructor(e,t){super();const n=this;let i=null,s=1,o=null,c="local-floor",u=1,h=null,d=null,m=null,p=null,g=null,v=null;const M=t.getContextAttributes();let x=null,_=null;const b=[],S=[];let w=null;const P=new yn;P.layers.enable(1),P.viewport=new Pt;const R=new yn;R.layers.enable(2),R.viewport=new Pt;const N=[P,R],B=new Sv;B.layers.enable(1),B.layers.enable(2);let T=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(Q){w=Q},this.getController=function(Q){let ge=b[Q];return ge===void 0&&(ge=new hf,b[Q]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(Q){let ge=b[Q];return ge===void 0&&(ge=new hf,b[Q]=ge),ge.getGripSpace()},this.getHand=function(Q){let ge=b[Q];return ge===void 0&&(ge=new hf,b[Q]=ge),ge.getHandSpace()};function J(Q){const ge=S.indexOf(Q.inputSource);if(ge===-1)return;const _e=b[ge];_e!==void 0&&(_e.update(Q.inputSource,Q.frame,h||o),_e.dispatchEvent({type:Q.type,data:Q.inputSource}))}function ce(){i.removeEventListener("select",J),i.removeEventListener("selectstart",J),i.removeEventListener("selectend",J),i.removeEventListener("squeeze",J),i.removeEventListener("squeezestart",J),i.removeEventListener("squeezeend",J),i.removeEventListener("end",ce),i.removeEventListener("inputsourceschange",q);for(let Q=0;Q<b.length;Q++){const ge=S[Q];ge!==null&&(S[Q]=null,b[Q].disconnect(ge))}T=null,D=null,e.setRenderTarget(x),g=null,p=null,m=null,i=null,_=null,Ee.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Q){s=Q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Q){c=Q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||o},this.setReferenceSpace=function(Q){h=Q},this.getBaseLayer=function(){return p!==null?p:g},this.getBinding=function(){return m},this.getFrame=function(){return v},this.getSession=function(){return i},this.setSession=async function(Q){if(i=Q,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",J),i.addEventListener("selectstart",J),i.addEventListener("selectend",J),i.addEventListener("squeeze",J),i.addEventListener("squeezestart",J),i.addEventListener("squeezeend",J),i.addEventListener("end",ce),i.addEventListener("inputsourceschange",q),M.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ge={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(i,t,ge),i.updateRenderState({baseLayer:g}),_=new Ei(g.framebufferWidth,g.framebufferHeight,{format:$n,type:ur,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil})}else{let ge=null,_e=null,Pe=null;M.depth&&(Pe=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ge=M.stencil?As:Or,_e=M.stencil?Nr:lr);const Le={colorFormat:t.RGBA8,depthFormat:Pe,scaleFactor:s};m=new XRWebGLBinding(i,t),p=m.createProjectionLayer(Le),i.updateRenderState({layers:[p]}),_=new Ei(p.textureWidth,p.textureHeight,{format:$n,type:ur,depthTexture:new bv(p.textureWidth,p.textureHeight,_e,void 0,void 0,void 0,void 0,void 0,void 0,ge),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0});const He=e.properties.get(_);He.__ignoreDepthValues=p.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(u),h=null,o=await i.requestReferenceSpace(c),Ee.setContext(i),Ee.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function q(Q){for(let ge=0;ge<Q.removed.length;ge++){const _e=Q.removed[ge],Pe=S.indexOf(_e);Pe>=0&&(S[Pe]=null,b[Pe].disconnect(_e))}for(let ge=0;ge<Q.added.length;ge++){const _e=Q.added[ge];let Pe=S.indexOf(_e);if(Pe===-1){for(let He=0;He<b.length;He++)if(He>=S.length){S.push(_e),Pe=He;break}else if(S[He]===null){S[He]=_e,Pe=He;break}if(Pe===-1)break}const Le=b[Pe];Le&&Le.connect(_e)}}const Z=new U,W=new U;function he(Q,ge,_e){Z.setFromMatrixPosition(ge.matrixWorld),W.setFromMatrixPosition(_e.matrixWorld);const Pe=Z.distanceTo(W),Le=ge.projectionMatrix.elements,He=_e.projectionMatrix.elements,tt=Le[14]/(Le[10]-1),Ye=Le[14]/(Le[10]+1),At=(Le[9]+1)/Le[5],Qe=(Le[9]-1)/Le[5],z=(Le[8]-1)/Le[0],Me=(He[8]+1)/He[0],ie=tt*z,ye=tt*Me,de=Pe/(-z+Me),Ne=de*-z;ge.matrixWorld.decompose(Q.position,Q.quaternion,Q.scale),Q.translateX(Ne),Q.translateZ(de),Q.matrixWorld.compose(Q.position,Q.quaternion,Q.scale),Q.matrixWorldInverse.copy(Q.matrixWorld).invert();const Ie=tt+de,Oe=Ye+de,je=ie-Ne,nt=ye+(Pe-Ne),Lt=At*Ye/Oe*Ie,O=Qe*Ye/Oe*Ie;Q.projectionMatrix.makePerspective(je,nt,Lt,O,Ie,Oe),Q.projectionMatrixInverse.copy(Q.projectionMatrix).invert()}function ee(Q,ge){ge===null?Q.matrixWorld.copy(Q.matrix):Q.matrixWorld.multiplyMatrices(ge.matrixWorld,Q.matrix),Q.matrixWorldInverse.copy(Q.matrixWorld).invert()}this.updateCameraXR=function(Q){if(i===null)return Q;w&&(Q=w),B.near=R.near=P.near=Q.near,B.far=R.far=P.far=Q.far,(T!==B.near||D!==B.far)&&(i.updateRenderState({depthNear:B.near,depthFar:B.far}),T=B.near,D=B.far);const ge=Q.parent,_e=B.cameras;ee(B,ge);for(let Pe=0;Pe<_e.length;Pe++)ee(_e[Pe],ge);return _e.length===2?he(B,P,R):B.projectionMatrix.copy(P.projectionMatrix),w&&ae(B,ge),B};function ae(Q,ge){const _e=w;ge===null?_e.matrix.copy(Q.matrixWorld):(_e.matrix.copy(ge.matrixWorld),_e.matrix.invert(),_e.matrix.multiply(Q.matrixWorld)),_e.matrix.decompose(_e.position,_e.quaternion,_e.scale),_e.updateMatrixWorld(!0);const Pe=_e.children;for(let Le=0,He=Pe.length;Le<He;Le++)Pe[Le].updateMatrixWorld(!0);_e.projectionMatrix.copy(Q.projectionMatrix),_e.projectionMatrixInverse.copy(Q.projectionMatrixInverse),_e.isPerspectiveCamera&&(_e.fov=Da*2*Math.atan(1/_e.projectionMatrix.elements[5]),_e.zoom=1)}this.getFoveation=function(){if(!(p===null&&g===null))return u},this.setFoveation=function(Q){u=Q,p!==null&&(p.fixedFoveation=Q),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=Q)};let fe=null;function me(Q,ge){if(d=ge.getViewerPose(h||o),v=ge,d!==null){const _e=d.views;g!==null&&(e.setRenderTargetFramebuffer(_,g.framebuffer),e.setRenderTarget(_));let Pe=!1;_e.length!==B.cameras.length&&(B.cameras.length=0,Pe=!0);for(let Le=0;Le<_e.length;Le++){const He=_e[Le];let tt=null;if(g!==null)tt=g.getViewport(He);else{const At=m.getViewSubImage(p,He);tt=At.viewport,Le===0&&(e.setRenderTargetTextures(_,At.colorTexture,p.ignoreDepthValues?void 0:At.depthStencilTexture),e.setRenderTarget(_))}let Ye=N[Le];Ye===void 0&&(Ye=new yn,Ye.layers.enable(Le),Ye.viewport=new Pt,N[Le]=Ye),Ye.matrix.fromArray(He.transform.matrix),Ye.matrix.decompose(Ye.position,Ye.quaternion,Ye.scale),Ye.projectionMatrix.fromArray(He.projectionMatrix),Ye.projectionMatrixInverse.copy(Ye.projectionMatrix).invert(),Ye.viewport.set(tt.x,tt.y,tt.width,tt.height),Le===0&&(B.matrix.copy(Ye.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale)),Pe===!0&&B.cameras.push(Ye)}}for(let _e=0;_e<b.length;_e++){const Pe=S[_e],Le=b[_e];Pe!==null&&Le!==void 0&&Le.update(Pe,ge,h||o)}fe&&fe(Q,ge),ge.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ge}),v=null}const Ee=new gv;Ee.setAnimationLoop(me),this.setAnimationLoop=function(Q){fe=Q},this.dispose=function(){}}}function L2(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,fv(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,b,S,w){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),m(x,_)):_.isMeshPhongMaterial?(s(x,_),d(x,_)):_.isMeshStandardMaterial?(s(x,_),p(x,_),_.isMeshPhysicalMaterial&&g(x,_,w)):_.isMeshMatcapMaterial?(s(x,_),v(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),M(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(o(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,b,S):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===In&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===In&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const b=e.get(_).envMap;if(b&&(x.envMap.value=b,x.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const S=r.useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*S,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function o(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,b,S){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*b,x.scale.value=S*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function d(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function m(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function p(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),e.get(_).envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function g(x,_,b){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===In&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=b.texture,x.transmissionSamplerSize.value.set(b.width,b.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function v(x,_){_.matcap&&(x.matcap.value=_.matcap)}function M(x,_){const b=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(b.matrixWorld),x.nearDistance.value=b.shadow.camera.near,x.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function I2(r,e,t,n){let i={},s={},o=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(b,S){const w=S.program;n.uniformBlockBinding(b,w)}function h(b,S){let w=i[b.id];w===void 0&&(v(b),w=d(b),i[b.id]=w,b.addEventListener("dispose",x));const P=S.program;n.updateUBOMapping(b,P);const R=e.render.frame;s[b.id]!==R&&(p(b),s[b.id]=R)}function d(b){const S=m();b.__bindingPointIndex=S;const w=r.createBuffer(),P=b.__size,R=b.usage;return r.bindBuffer(r.UNIFORM_BUFFER,w),r.bufferData(r.UNIFORM_BUFFER,P,R),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,S,w),w}function m(){for(let b=0;b<c;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(b){const S=i[b.id],w=b.uniforms,P=b.__cache;r.bindBuffer(r.UNIFORM_BUFFER,S);for(let R=0,N=w.length;R<N;R++){const B=w[R];if(g(B,R,P)===!0){const T=B.__offset,D=Array.isArray(B.value)?B.value:[B.value];let J=0;for(let ce=0;ce<D.length;ce++){const q=D[ce],Z=M(q);typeof q=="number"?(B.__data[0]=q,r.bufferSubData(r.UNIFORM_BUFFER,T+J,B.__data)):q.isMatrix3?(B.__data[0]=q.elements[0],B.__data[1]=q.elements[1],B.__data[2]=q.elements[2],B.__data[3]=q.elements[0],B.__data[4]=q.elements[3],B.__data[5]=q.elements[4],B.__data[6]=q.elements[5],B.__data[7]=q.elements[0],B.__data[8]=q.elements[6],B.__data[9]=q.elements[7],B.__data[10]=q.elements[8],B.__data[11]=q.elements[0]):(q.toArray(B.__data,J),J+=Z.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,T,B.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function g(b,S,w){const P=b.value;if(w[S]===void 0){if(typeof P=="number")w[S]=P;else{const R=Array.isArray(P)?P:[P],N=[];for(let B=0;B<R.length;B++)N.push(R[B].clone());w[S]=N}return!0}else if(typeof P=="number"){if(w[S]!==P)return w[S]=P,!0}else{const R=Array.isArray(w[S])?w[S]:[w[S]],N=Array.isArray(P)?P:[P];for(let B=0;B<R.length;B++){const T=R[B];if(T.equals(N[B])===!1)return T.copy(N[B]),!0}}return!1}function v(b){const S=b.uniforms;let w=0;const P=16;let R=0;for(let N=0,B=S.length;N<B;N++){const T=S[N],D={boundary:0,storage:0},J=Array.isArray(T.value)?T.value:[T.value];for(let ce=0,q=J.length;ce<q;ce++){const Z=J[ce],W=M(Z);D.boundary+=W.boundary,D.storage+=W.storage}if(T.__data=new Float32Array(D.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=w,N>0){R=w%P;const ce=P-R;R!==0&&ce-D.boundary<0&&(w+=P-R,T.__offset=w)}w+=D.storage}return R=w%P,R>0&&(w+=P-R),b.__size=w,b.__cache={},this}function M(b){const S={boundary:0,storage:0};return typeof b=="number"?(S.boundary=4,S.storage=4):b.isVector2?(S.boundary=8,S.storage=8):b.isVector3||b.isColor?(S.boundary=16,S.storage=12):b.isVector4?(S.boundary=16,S.storage=16):b.isMatrix3?(S.boundary=48,S.storage=48):b.isMatrix4?(S.boundary=64,S.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),S}function x(b){const S=b.target;S.removeEventListener("dispose",x);const w=o.indexOf(S.__bindingPointIndex);o.splice(w,1),r.deleteBuffer(i[S.id]),delete i[S.id],delete s[S.id]}function _(){for(const b in i)r.deleteBuffer(i[b]);o=[],i={},s={}}return{bind:u,update:h,dispose:_}}function U2(){const r=ko("canvas");return r.style.display="block",r}class Ev{constructor(e={}){const{canvas:t=U2(),context:n=null,depth:i=!0,stencil:s=!0,alpha:o=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:m=!1}=e;this.isWebGLRenderer=!0;let p;n!==null?p=n.getContextAttributes().alpha:p=o;const g=new Uint32Array(4),v=new Int32Array(4);let M=null,x=null;const _=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ct,this.useLegacyLights=!0,this.toneMapping=Bi,this.toneMappingExposure=1;const S=this;let w=!1,P=0,R=0,N=null,B=-1,T=null;const D=new Pt,J=new Pt;let ce=null;const q=new Ue(0);let Z=0,W=t.width,he=t.height,ee=1,ae=null,fe=null;const me=new Pt(0,0,W,he),Ee=new Pt(0,0,W,he);let Q=!1;const ge=new vu;let _e=!1,Pe=!1,Le=null;const He=new st,tt=new ue,Ye=new U,At={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Qe(){return N===null?ee:1}let z=n;function Me(I,Y){for(let te=0;te<I.length;te++){const X=I[te],se=t.getContext(X,Y);if(se!==null)return se}return null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:m};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${fu}`),t.addEventListener("webglcontextlost",Ae,!1),t.addEventListener("webglcontextrestored",$,!1),t.addEventListener("webglcontextcreationerror",be,!1),z===null){const Y=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&Y.shift(),z=Me(Y,I),z===null)throw Me(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}z instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let ie,ye,de,Ne,Ie,Oe,je,nt,Lt,O,L,j,xe,ve,Se,ke,we,re,We,Xe,qe,Be,ze,ut;function It(){ie=new JC(z),ye=new VC(z,ie,e),ie.init(ye),Be=new Mv(z,ie,ye),de=new A2(z,ie,ye),Ne=new QC(z),Ie=new m2,Oe=new R2(z,ie,de,Ie,ye,Be,Ne),je=new XC(S),nt=new ZC(S),Lt=new uA(z,ye),ze=new GC(z,ie,Lt,ye),O=new KC(z,Lt,Ne,ze),L=new nP(z,O,Lt,Ne),We=new tP(z,ye,Oe),ke=new WC(Ie),j=new p2(S,je,nt,ie,ye,ze,ke),xe=new L2(S,Ie),ve=new _2,Se=new b2(ie,ye),re=new HC(S,je,nt,de,L,p,u),we=new T2(S,L,ye),ut=new I2(z,Ne,ye,de),Xe=new kC(z,ie,Ne,ye),qe=new $C(z,ie,Ne,ye),Ne.programs=j.programs,S.capabilities=ye,S.extensions=ie,S.properties=Ie,S.renderLists=ve,S.shadowMap=we,S.state=de,S.info=Ne}It();const G=new P2(S,z);this.xr=G,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const I=ie.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=ie.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return ee},this.setPixelRatio=function(I){I!==void 0&&(ee=I,this.setSize(W,he,!1))},this.getSize=function(I){return I.set(W,he)},this.setSize=function(I,Y,te=!0){if(G.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}W=I,he=Y,t.width=Math.floor(I*ee),t.height=Math.floor(Y*ee),te===!0&&(t.style.width=I+"px",t.style.height=Y+"px"),this.setViewport(0,0,I,Y)},this.getDrawingBufferSize=function(I){return I.set(W*ee,he*ee).floor()},this.setDrawingBufferSize=function(I,Y,te){W=I,he=Y,ee=te,t.width=Math.floor(I*te),t.height=Math.floor(Y*te),this.setViewport(0,0,I,Y)},this.getCurrentViewport=function(I){return I.copy(D)},this.getViewport=function(I){return I.copy(me)},this.setViewport=function(I,Y,te,X){I.isVector4?me.set(I.x,I.y,I.z,I.w):me.set(I,Y,te,X),de.viewport(D.copy(me).multiplyScalar(ee).floor())},this.getScissor=function(I){return I.copy(Ee)},this.setScissor=function(I,Y,te,X){I.isVector4?Ee.set(I.x,I.y,I.z,I.w):Ee.set(I,Y,te,X),de.scissor(J.copy(Ee).multiplyScalar(ee).floor())},this.getScissorTest=function(){return Q},this.setScissorTest=function(I){de.setScissorTest(Q=I)},this.setOpaqueSort=function(I){ae=I},this.setTransparentSort=function(I){fe=I},this.getClearColor=function(I){return I.copy(re.getClearColor())},this.setClearColor=function(){re.setClearColor.apply(re,arguments)},this.getClearAlpha=function(){return re.getClearAlpha()},this.setClearAlpha=function(){re.setClearAlpha.apply(re,arguments)},this.clear=function(I=!0,Y=!0,te=!0){let X=0;if(I){let se=!1;if(N!==null){const Fe=N.texture.format;se=Fe===bd||Fe===Sd||Fe===Md}if(se){const Fe=N.texture.type,Ze=Fe===ur||Fe===lr||Fe===pu||Fe===Nr||Fe===xd||Fe===yd,it=re.getClearColor(),et=re.getClearAlpha(),gt=it.r,rt=it.g,lt=it.b,Ut=Ie.get(N).__webglFramebuffer;Ze?(g[0]=gt,g[1]=rt,g[2]=lt,g[3]=et,z.clearBufferuiv(z.COLOR,Ut,g)):(v[0]=gt,v[1]=rt,v[2]=lt,v[3]=et,z.clearBufferiv(z.COLOR,Ut,v))}else X|=z.COLOR_BUFFER_BIT}Y&&(X|=z.DEPTH_BUFFER_BIT),te&&(X|=z.STENCIL_BUFFER_BIT),z.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ae,!1),t.removeEventListener("webglcontextrestored",$,!1),t.removeEventListener("webglcontextcreationerror",be,!1),ve.dispose(),Se.dispose(),Ie.dispose(),je.dispose(),nt.dispose(),L.dispose(),ze.dispose(),ut.dispose(),j.dispose(),G.dispose(),G.removeEventListener("sessionstart",zt),G.removeEventListener("sessionend",ni),Le&&(Le.dispose(),Le=null),_n.stop()};function Ae(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function $(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const I=Ne.autoReset,Y=we.enabled,te=we.autoUpdate,X=we.needsUpdate,se=we.type;It(),Ne.autoReset=I,we.enabled=Y,we.autoUpdate=te,we.needsUpdate=X,we.type=se}function be(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Ce(I){const Y=I.target;Y.removeEventListener("dispose",Ce),bt(Y)}function bt(I){Bt(I),Ie.remove(I)}function Bt(I){const Y=Ie.get(I).programs;Y!==void 0&&(Y.forEach(function(te){j.releaseProgram(te)}),I.isShaderMaterial&&j.releaseShaderCache(I))}this.renderBufferDirect=function(I,Y,te,X,se,Fe){Y===null&&(Y=At);const Ze=se.isMesh&&se.matrixWorld.determinant()<0,it=Lu(I,Y,te,X,se);de.setMaterial(X,Ze);let et=te.index,gt=1;X.wireframe===!0&&(et=O.getWireframeAttribute(te),gt=2);const rt=te.drawRange,lt=te.attributes.position;let Ut=rt.start*gt,Gt=(rt.start+rt.count)*gt;Fe!==null&&(Ut=Math.max(Ut,Fe.start*gt),Gt=Math.min(Gt,(Fe.start+Fe.count)*gt)),et!==null?(Ut=Math.max(Ut,0),Gt=Math.min(Gt,et.count)):lt!=null&&(Ut=Math.max(Ut,0),Gt=Math.min(Gt,lt.count));const Dn=Gt-Ut;if(Dn<0||Dn===1/0)return;ze.setup(se,X,it,te,et);let ii,kt=Xe;if(et!==null&&(ii=Lt.get(et),kt=qe,kt.setIndex(ii)),se.isMesh)X.wireframe===!0?(de.setLineWidth(X.wireframeLinewidth*Qe()),kt.setMode(z.LINES)):kt.setMode(z.TRIANGLES);else if(se.isLine){let yt=X.linewidth;yt===void 0&&(yt=1),de.setLineWidth(yt*Qe()),se.isLineSegments?kt.setMode(z.LINES):se.isLineLoop?kt.setMode(z.LINE_LOOP):kt.setMode(z.LINE_STRIP)}else se.isPoints?kt.setMode(z.POINTS):se.isSprite&&kt.setMode(z.TRIANGLES);if(se.isInstancedMesh)kt.renderInstances(Ut,Dn,se.count);else if(te.isInstancedBufferGeometry){const yt=te._maxInstanceCount!==void 0?te._maxInstanceCount:1/0,qa=Math.min(te.instanceCount,yt);kt.renderInstances(Ut,Dn,qa)}else kt.render(Ut,Dn)},this.compile=function(I,Y){function te(X,se,Fe){X.transparent===!0&&X.side===Ui&&X.forceSinglePass===!1?(X.side=In,X.needsUpdate=!0,Bs(X,se,Fe),X.side=hr,X.needsUpdate=!0,Bs(X,se,Fe),X.side=Ui):Bs(X,se,Fe)}x=Se.get(I),x.init(),b.push(x),I.traverseVisible(function(X){X.isLight&&X.layers.test(Y.layers)&&(x.pushLight(X),X.castShadow&&x.pushShadow(X))}),x.setupLights(S.useLegacyLights),I.traverse(function(X){const se=X.material;if(se)if(Array.isArray(se))for(let Fe=0;Fe<se.length;Fe++){const Ze=se[Fe];te(Ze,I,X)}else te(se,I,X)}),b.pop(),x=null};let Xt=null;function Ri(I){Xt&&Xt(I)}function zt(){_n.stop()}function ni(){_n.start()}const _n=new gv;_n.setAnimationLoop(Ri),typeof self<"u"&&_n.setContext(self),this.setAnimationLoop=function(I){Xt=I,G.setAnimationLoop(I),I===null?_n.stop():_n.start()},G.addEventListener("sessionstart",zt),G.addEventListener("sessionend",ni),this.render=function(I,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),Y.parent===null&&Y.matrixWorldAutoUpdate===!0&&Y.updateMatrixWorld(),G.enabled===!0&&G.isPresenting===!0&&(Y=G.updateCameraXR(Y)),I.isScene===!0&&I.onBeforeRender(S,I,Y,N),x=Se.get(I,b.length),x.init(),b.push(x),He.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),ge.setFromProjectionMatrix(He),Pe=this.localClippingEnabled,_e=ke.init(this.clippingPlanes,Pe),M=ve.get(I,_.length),M.init(),_.push(M),Os(I,Y,0,S.sortObjects),M.finish(),S.sortObjects===!0&&M.sort(ae,fe),_e===!0&&ke.beginShadows();const te=x.state.shadowsArray;if(we.render(te,I,Y),_e===!0&&ke.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,re.render(M,I),x.setupLights(S.useLegacyLights),Y.isArrayCamera){const X=Y.cameras;for(let se=0,Fe=X.length;se<Fe;se++){const Ze=X[se];xl(M,I,Ze,Ze.viewport)}}else xl(M,I,Y);N!==null&&(Oe.updateMultisampleRenderTarget(N),Oe.updateRenderTargetMipmap(N)),I.isScene===!0&&I.onAfterRender(S,I,Y),ze.resetDefaultState(),B=-1,T=null,b.pop(),b.length>0?x=b[b.length-1]:x=null,_.pop(),_.length>0?M=_[_.length-1]:M=null};function Os(I,Y,te,X){if(I.visible===!1)return;if(I.layers.test(Y.layers)){if(I.isGroup)te=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(Y);else if(I.isLight)x.pushLight(I),I.castShadow&&x.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||ge.intersectsSprite(I)){X&&Ye.setFromMatrixPosition(I.matrixWorld).applyMatrix4(He);const Ze=L.update(I),it=I.material;it.visible&&M.push(I,Ze,it,te,Ye.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||ge.intersectsObject(I))){I.isSkinnedMesh&&I.skeleton.frame!==Ne.render.frame&&(I.skeleton.update(),I.skeleton.frame=Ne.render.frame);const Ze=L.update(I),it=I.material;if(X&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),Ye.copy(I.boundingSphere.center)):(Ze.boundingSphere===null&&Ze.computeBoundingSphere(),Ye.copy(Ze.boundingSphere.center)),Ye.applyMatrix4(I.matrixWorld).applyMatrix4(He)),Array.isArray(it)){const et=Ze.groups;for(let gt=0,rt=et.length;gt<rt;gt++){const lt=et[gt],Ut=it[lt.materialIndex];Ut&&Ut.visible&&M.push(I,Ze,Ut,te,Ye.z,lt)}}else it.visible&&M.push(I,Ze,it,te,Ye.z,null)}}const Fe=I.children;for(let Ze=0,it=Fe.length;Ze<it;Ze++)Os(Fe[Ze],Y,te,X)}function xl(I,Y,te,X){const se=I.opaque,Fe=I.transmissive,Ze=I.transparent;x.setupLightsView(te),_e===!0&&ke.setGlobalState(S.clippingPlanes,te),Fe.length>0&&Xa(se,Fe,Y,te),X&&de.viewport(D.copy(X)),se.length>0&&Fs(se,Y,te),Fe.length>0&&Fs(Fe,Y,te),Ze.length>0&&Fs(Ze,Y,te),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function Xa(I,Y,te,X){const se=ye.isWebGL2;Le===null&&(Le=new Ei(1,1,{generateMipmaps:!0,type:ie.has("EXT_color_buffer_half_float")?Ua:ur,minFilter:kr,samples:se&&c===!0?4:0})),S.getDrawingBufferSize(tt),se?Le.setSize(tt.x,tt.y):Le.setSize(uu(tt.x),uu(tt.y));const Fe=S.getRenderTarget();S.setRenderTarget(Le),S.getClearColor(q),Z=S.getClearAlpha(),Z<1&&S.setClearColor(16777215,.5),S.clear();const Ze=S.toneMapping;S.toneMapping=Bi,Fs(I,te,X),Oe.updateMultisampleRenderTarget(Le),Oe.updateRenderTargetMipmap(Le);let it=!1;for(let et=0,gt=Y.length;et<gt;et++){const rt=Y[et],lt=rt.object,Ut=rt.geometry,Gt=rt.material,Dn=rt.group;if(Gt.side===Ui&&lt.layers.test(X.layers)){const ii=Gt.side;Gt.side=In,Gt.needsUpdate=!0,yl(lt,te,X,Ut,Gt,Dn),Gt.side=ii,Gt.needsUpdate=!0,it=!0}}it===!0&&(Oe.updateMultisampleRenderTarget(Le),Oe.updateRenderTargetMipmap(Le)),S.setRenderTarget(Fe),S.setClearColor(q,Z),S.toneMapping=Ze}function Fs(I,Y,te){const X=Y.isScene===!0?Y.overrideMaterial:null;for(let se=0,Fe=I.length;se<Fe;se++){const Ze=I[se],it=Ze.object,et=Ze.geometry,gt=X===null?Ze.material:X,rt=Ze.group;it.layers.test(te.layers)&&yl(it,Y,te,et,gt,rt)}}function yl(I,Y,te,X,se,Fe){I.onBeforeRender(S,Y,te,X,se,Fe),I.modelViewMatrix.multiplyMatrices(te.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),se.onBeforeRender(S,Y,te,X,I,Fe),se.transparent===!0&&se.side===Ui&&se.forceSinglePass===!1?(se.side=In,se.needsUpdate=!0,S.renderBufferDirect(te,Y,X,se,I,Fe),se.side=hr,se.needsUpdate=!0,S.renderBufferDirect(te,Y,X,se,I,Fe),se.side=Ui):S.renderBufferDirect(te,Y,X,se,I,Fe),I.onAfterRender(S,Y,te,X,se,Fe)}function Bs(I,Y,te){Y.isScene!==!0&&(Y=At);const X=Ie.get(I),se=x.state.lights,Fe=x.state.shadowsArray,Ze=se.state.version,it=j.getParameters(I,se.state,Fe,Y,te),et=j.getProgramCacheKey(it);let gt=X.programs;X.environment=I.isMeshStandardMaterial?Y.environment:null,X.fog=Y.fog,X.envMap=(I.isMeshStandardMaterial?nt:je).get(I.envMap||X.environment),gt===void 0&&(I.addEventListener("dispose",Ce),gt=new Map,X.programs=gt);let rt=gt.get(et);if(rt!==void 0){if(X.currentProgram===rt&&X.lightsStateVersion===Ze)return Ml(I,it),rt}else it.uniforms=j.getUniforms(I),I.onBuild(te,it,S),I.onBeforeCompile(it,S),rt=j.acquireProgram(it,et),gt.set(et,rt),X.uniforms=it.uniforms;const lt=X.uniforms;(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(lt.clippingPlanes=ke.uniform),Ml(I,it),X.needsLights=Uu(I),X.lightsStateVersion=Ze,X.needsLights&&(lt.ambientLightColor.value=se.state.ambient,lt.lightProbe.value=se.state.probe,lt.directionalLights.value=se.state.directional,lt.directionalLightShadows.value=se.state.directionalShadow,lt.spotLights.value=se.state.spot,lt.spotLightShadows.value=se.state.spotShadow,lt.rectAreaLights.value=se.state.rectArea,lt.ltc_1.value=se.state.rectAreaLTC1,lt.ltc_2.value=se.state.rectAreaLTC2,lt.pointLights.value=se.state.point,lt.pointLightShadows.value=se.state.pointShadow,lt.hemisphereLights.value=se.state.hemi,lt.directionalShadowMap.value=se.state.directionalShadowMap,lt.directionalShadowMatrix.value=se.state.directionalShadowMatrix,lt.spotShadowMap.value=se.state.spotShadowMap,lt.spotLightMatrix.value=se.state.spotLightMatrix,lt.spotLightMap.value=se.state.spotLightMap,lt.pointShadowMap.value=se.state.pointShadowMap,lt.pointShadowMatrix.value=se.state.pointShadowMatrix);const Ut=rt.getUniforms(),Gt=tu.seqWithValue(Ut.seq,lt);return X.currentProgram=rt,X.uniformsList=Gt,rt}function Ml(I,Y){const te=Ie.get(I);te.outputColorSpace=Y.outputColorSpace,te.instancing=Y.instancing,te.skinning=Y.skinning,te.morphTargets=Y.morphTargets,te.morphNormals=Y.morphNormals,te.morphColors=Y.morphColors,te.morphTargetsCount=Y.morphTargetsCount,te.numClippingPlanes=Y.numClippingPlanes,te.numIntersection=Y.numClipIntersection,te.vertexAlphas=Y.vertexAlphas,te.vertexTangents=Y.vertexTangents,te.toneMapping=Y.toneMapping}function Lu(I,Y,te,X,se){Y.isScene!==!0&&(Y=At),Oe.resetTextureUnits();const Fe=Y.fog,Ze=X.isMeshStandardMaterial?Y.environment:null,it=N===null?S.outputColorSpace:N.isXRRenderTarget===!0?N.texture.colorSpace:bi,et=(X.isMeshStandardMaterial?nt:je).get(X.envMap||Ze),gt=X.vertexColors===!0&&!!te.attributes.color&&te.attributes.color.itemSize===4,rt=!!te.attributes.tangent&&(!!X.normalMap||X.anisotropy>0),lt=!!te.morphAttributes.position,Ut=!!te.morphAttributes.normal,Gt=!!te.morphAttributes.color,Dn=X.toneMapped?S.toneMapping:Bi,ii=te.morphAttributes.position||te.morphAttributes.normal||te.morphAttributes.color,kt=ii!==void 0?ii.length:0,yt=Ie.get(X),qa=x.state.lights;if(_e===!0&&(Pe===!0||I!==T)){const fn=I===T&&X.id===B;ke.setState(X,I,fn)}let nn=!1;X.version===yt.__version?(yt.needsLights&&yt.lightsStateVersion!==qa.state.version||yt.outputColorSpace!==it||se.isInstancedMesh&&yt.instancing===!1||!se.isInstancedMesh&&yt.instancing===!0||se.isSkinnedMesh&&yt.skinning===!1||!se.isSkinnedMesh&&yt.skinning===!0||yt.envMap!==et||X.fog===!0&&yt.fog!==Fe||yt.numClippingPlanes!==void 0&&(yt.numClippingPlanes!==ke.numPlanes||yt.numIntersection!==ke.numIntersection)||yt.vertexAlphas!==gt||yt.vertexTangents!==rt||yt.morphTargets!==lt||yt.morphNormals!==Ut||yt.morphColors!==Gt||yt.toneMapping!==Dn||ye.isWebGL2===!0&&yt.morphTargetsCount!==kt)&&(nn=!0):(nn=!0,yt.__version=X.version);let Vi=yt.currentProgram;nn===!0&&(Vi=Bs(X,Y,se));let Ya=!1,mr=!1,zs=!1;const on=Vi.getUniforms(),Wi=yt.uniforms;if(de.useProgram(Vi.program)&&(Ya=!0,mr=!0,zs=!0),X.id!==B&&(B=X.id,mr=!0),Ya||T!==I){if(on.setValue(z,"projectionMatrix",I.projectionMatrix),ye.logarithmicDepthBuffer&&on.setValue(z,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),T!==I&&(T=I,mr=!0,zs=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const fn=on.map.cameraPosition;fn!==void 0&&fn.setValue(z,Ye.setFromMatrixPosition(I.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&on.setValue(z,"isOrthographic",I.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||se.isSkinnedMesh)&&on.setValue(z,"viewMatrix",I.matrixWorldInverse)}if(se.isSkinnedMesh){on.setOptional(z,se,"bindMatrix"),on.setOptional(z,se,"bindMatrixInverse");const fn=se.skeleton;fn&&(ye.floatVertexTextures?(fn.boneTexture===null&&fn.computeBoneTexture(),on.setValue(z,"boneTexture",fn.boneTexture,Oe),on.setValue(z,"boneTextureSize",fn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Hs=te.morphAttributes;if((Hs.position!==void 0||Hs.normal!==void 0||Hs.color!==void 0&&ye.isWebGL2===!0)&&We.update(se,te,Vi),(mr||yt.receiveShadow!==se.receiveShadow)&&(yt.receiveShadow=se.receiveShadow,on.setValue(z,"receiveShadow",se.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(Wi.envMap.value=et,Wi.flipEnvMap.value=et.isCubeTexture&&et.isRenderTargetTexture===!1?-1:1),mr&&(on.setValue(z,"toneMappingExposure",S.toneMappingExposure),yt.needsLights&&Iu(Wi,zs),Fe&&X.fog===!0&&xe.refreshFogUniforms(Wi,Fe),xe.refreshMaterialUniforms(Wi,X,ee,he,Le),tu.upload(z,yt.uniformsList,Wi,Oe)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(tu.upload(z,yt.uniformsList,Wi,Oe),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&on.setValue(z,"center",se.center),on.setValue(z,"modelViewMatrix",se.modelViewMatrix),on.setValue(z,"normalMatrix",se.normalMatrix),on.setValue(z,"modelMatrix",se.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const fn=X.uniformsGroups;for(let Gs=0,Du=fn.length;Gs<Du;Gs++)if(ye.isWebGL2){const Za=fn[Gs];ut.update(Za,Vi),ut.bind(Za,Vi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Vi}function Iu(I,Y){I.ambientLightColor.needsUpdate=Y,I.lightProbe.needsUpdate=Y,I.directionalLights.needsUpdate=Y,I.directionalLightShadows.needsUpdate=Y,I.pointLights.needsUpdate=Y,I.pointLightShadows.needsUpdate=Y,I.spotLights.needsUpdate=Y,I.spotLightShadows.needsUpdate=Y,I.rectAreaLights.needsUpdate=Y,I.hemisphereLights.needsUpdate=Y}function Uu(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return P},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(I,Y,te){Ie.get(I.texture).__webglTexture=Y,Ie.get(I.depthTexture).__webglTexture=te;const X=Ie.get(I);X.__hasExternalTextures=!0,X.__hasExternalTextures&&(X.__autoAllocateDepthBuffer=te===void 0,X.__autoAllocateDepthBuffer||ie.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,Y){const te=Ie.get(I);te.__webglFramebuffer=Y,te.__useDefaultFramebuffer=Y===void 0},this.setRenderTarget=function(I,Y=0,te=0){N=I,P=Y,R=te;let X=!0,se=null,Fe=!1,Ze=!1;if(I){const et=Ie.get(I);et.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(z.FRAMEBUFFER,null),X=!1):et.__webglFramebuffer===void 0?Oe.setupRenderTarget(I):et.__hasExternalTextures&&Oe.rebindTextures(I,Ie.get(I.texture).__webglTexture,Ie.get(I.depthTexture).__webglTexture);const gt=I.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Ze=!0);const rt=Ie.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(se=rt[Y],Fe=!0):ye.isWebGL2&&I.samples>0&&Oe.useMultisampledRTT(I)===!1?se=Ie.get(I).__webglMultisampledFramebuffer:se=rt,D.copy(I.viewport),J.copy(I.scissor),ce=I.scissorTest}else D.copy(me).multiplyScalar(ee).floor(),J.copy(Ee).multiplyScalar(ee).floor(),ce=Q;if(de.bindFramebuffer(z.FRAMEBUFFER,se)&&ye.drawBuffers&&X&&de.drawBuffers(I,se),de.viewport(D),de.scissor(J),de.setScissorTest(ce),Fe){const et=Ie.get(I.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+Y,et.__webglTexture,te)}else if(Ze){const et=Ie.get(I.texture),gt=Y||0;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,et.__webglTexture,te||0,gt)}B=-1},this.readRenderTargetPixels=function(I,Y,te,X,se,Fe,Ze){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=Ie.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ze!==void 0&&(it=it[Ze]),it){de.bindFramebuffer(z.FRAMEBUFFER,it);try{const et=I.texture,gt=et.format,rt=et.type;if(gt!==$n&&Be.convert(gt)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const lt=rt===Ua&&(ie.has("EXT_color_buffer_half_float")||ye.isWebGL2&&ie.has("EXT_color_buffer_float"));if(rt!==ur&&Be.convert(rt)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)&&!(rt===Di&&(ye.isWebGL2||ie.has("OES_texture_float")||ie.has("WEBGL_color_buffer_float")))&&!lt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=I.width-X&&te>=0&&te<=I.height-se&&z.readPixels(Y,te,X,se,Be.convert(gt),Be.convert(rt),Fe)}finally{const et=N!==null?Ie.get(N).__webglFramebuffer:null;de.bindFramebuffer(z.FRAMEBUFFER,et)}}},this.copyFramebufferToTexture=function(I,Y,te=0){const X=Math.pow(2,-te),se=Math.floor(Y.image.width*X),Fe=Math.floor(Y.image.height*X);Oe.setTexture2D(Y,0),z.copyTexSubImage2D(z.TEXTURE_2D,te,0,0,I.x,I.y,se,Fe),de.unbindTexture()},this.copyTextureToTexture=function(I,Y,te,X=0){const se=Y.image.width,Fe=Y.image.height,Ze=Be.convert(te.format),it=Be.convert(te.type);Oe.setTexture2D(te,0),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,te.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,te.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,te.unpackAlignment),Y.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,X,I.x,I.y,se,Fe,Ze,it,Y.image.data):Y.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,X,I.x,I.y,Y.mipmaps[0].width,Y.mipmaps[0].height,Ze,Y.mipmaps[0].data):z.texSubImage2D(z.TEXTURE_2D,X,I.x,I.y,Ze,it,Y.image),X===0&&te.generateMipmaps&&z.generateMipmap(z.TEXTURE_2D),de.unbindTexture()},this.copyTextureToTexture3D=function(I,Y,te,X,se=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Fe=I.max.x-I.min.x+1,Ze=I.max.y-I.min.y+1,it=I.max.z-I.min.z+1,et=Be.convert(X.format),gt=Be.convert(X.type);let rt;if(X.isData3DTexture)Oe.setTexture3D(X,0),rt=z.TEXTURE_3D;else if(X.isDataArrayTexture)Oe.setTexture2DArray(X,0),rt=z.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,X.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,X.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,X.unpackAlignment);const lt=z.getParameter(z.UNPACK_ROW_LENGTH),Ut=z.getParameter(z.UNPACK_IMAGE_HEIGHT),Gt=z.getParameter(z.UNPACK_SKIP_PIXELS),Dn=z.getParameter(z.UNPACK_SKIP_ROWS),ii=z.getParameter(z.UNPACK_SKIP_IMAGES),kt=te.isCompressedTexture?te.mipmaps[0]:te.image;z.pixelStorei(z.UNPACK_ROW_LENGTH,kt.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,kt.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,I.min.x),z.pixelStorei(z.UNPACK_SKIP_ROWS,I.min.y),z.pixelStorei(z.UNPACK_SKIP_IMAGES,I.min.z),te.isDataTexture||te.isData3DTexture?z.texSubImage3D(rt,se,Y.x,Y.y,Y.z,Fe,Ze,it,et,gt,kt.data):te.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(rt,se,Y.x,Y.y,Y.z,Fe,Ze,it,et,kt.data)):z.texSubImage3D(rt,se,Y.x,Y.y,Y.z,Fe,Ze,it,et,gt,kt),z.pixelStorei(z.UNPACK_ROW_LENGTH,lt),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Ut),z.pixelStorei(z.UNPACK_SKIP_PIXELS,Gt),z.pixelStorei(z.UNPACK_SKIP_ROWS,Dn),z.pixelStorei(z.UNPACK_SKIP_IMAGES,ii),se===0&&X.generateMipmaps&&z.generateMipmap(rt),de.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?Oe.setTextureCube(I,0):I.isData3DTexture?Oe.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?Oe.setTexture2DArray(I,0):Oe.setTexture2D(I,0),de.unbindTexture()},this.resetState=function(){P=0,R=0,N=null,de.reset(),ze.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ni}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ct?Fr:wd}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Fr?ct:bi}}class wv extends Ev{}wv.prototype.isWebGL1Renderer=!0;class Mu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ue(e),this.density=t}clone(){return new Mu(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Su{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ue(e),this.near=t,this.far=n}clone(){return new Su(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Tv extends wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class bu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ho,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=jn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=jn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=jn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Pn=new U;class Rs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyMatrix4(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyNormalMatrix(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.transformDirection(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Qn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Qn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Qn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Qn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Nt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Rs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Nd extends Tn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let va;const mo=new U,xa=new U,ya=new U,Ma=new ue,go=new ue,Av=new st,Ac=new U,_o=new U,Rc=new U,o_=new ue,ff=new ue,l_=new ue;class Rv extends wt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",va===void 0){va=new vt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new bu(t,5);va.setIndex([0,1,2,0,2,3]),va.setAttribute("position",new Rs(n,3,0,!1)),va.setAttribute("uv",new Rs(n,2,3,!1))}this.geometry=va,this.material=e!==void 0?e:new Nd,this.center=new ue(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),xa.setFromMatrixScale(this.matrixWorld),Av.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ya.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&xa.multiplyScalar(-ya.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;Cc(Ac.set(-.5,-.5,0),ya,o,xa,i,s),Cc(_o.set(.5,-.5,0),ya,o,xa,i,s),Cc(Rc.set(.5,.5,0),ya,o,xa,i,s),o_.set(0,0),ff.set(1,0),l_.set(1,1);let c=e.ray.intersectTriangle(Ac,_o,Rc,!1,mo);if(c===null&&(Cc(_o.set(-.5,.5,0),ya,o,xa,i,s),ff.set(0,1),c=e.ray.intersectTriangle(Ac,Rc,_o,!1,mo),c===null))return;const u=e.ray.origin.distanceTo(mo);u<e.near||u>e.far||t.push({distance:u,point:mo.clone(),uv:Hn.getInterpolation(mo,Ac,_o,Rc,o_,ff,l_,new ue),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Cc(r,e,t,n,i,s){Ma.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(go.x=s*Ma.x-i*Ma.y,go.y=i*Ma.x+s*Ma.y):go.copy(Ma),r.copy(e),r.x+=go.x,r.y+=go.y,r.applyMatrix4(Av)}const Pc=new U,c_=new U;class Cv extends wt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Pc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Pc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Pc.setFromMatrixPosition(e.matrixWorld),c_.setFromMatrixPosition(this.matrixWorld);const n=Pc.distanceTo(c_)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const u_=new U,h_=new Pt,f_=new Pt,D2=new U,d_=new st,Sa=new U,df=new wi,p_=new st,pf=new za;class Pv extends gn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new st,this.bindMatrixInverse=new st,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Gi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Sa.fromBufferAttribute(t,n),this.applyBoneTransform(n,Sa),this.boundingBox.expandByPoint(Sa)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new wi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Sa.fromBufferAttribute(t,n),this.applyBoneTransform(n,Sa),this.boundingSphere.expandByPoint(Sa)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),df.copy(this.boundingSphere),df.applyMatrix4(i),e.ray.intersectsSphere(df)!==!1&&(p_.copy(i).invert(),pf.copy(e.ray).applyMatrix4(p_),!(this.boundingBox!==null&&pf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,pf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Pt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;h_.fromBufferAttribute(i.attributes.skinIndex,e),f_.fromBufferAttribute(i.attributes.skinWeight,e),u_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=f_.getComponent(s);if(o!==0){const c=h_.getComponent(s);d_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(D2.copy(u_).applyMatrix4(d_),o)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Od extends wt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Pa extends tn{constructor(e=null,t=1,n=1,i,s,o,c,u,h=Qt,d=Qt,m,p){super(null,o,c,u,h,d,i,s,m,p),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const m_=new st,N2=new st;class Eu{constructor(e=[],t=[]){this.uuid=jn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new st)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new st;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const c=e[s]?e[s].matrixWorld:N2;m_.multiplyMatrices(c,t[s]),m_.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Eu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=cv(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Pa(t,e,e,$n,Di);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Od),this.bones.push(o),this.boneInverses.push(new st().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Oa extends Nt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ba=new st,g_=new st,Lc=[],__=new Gi,O2=new st,vo=new gn,xo=new wi;class Lv extends gn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Oa(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,O2)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Gi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ba),__.copy(e.boundingBox).applyMatrix4(ba),this.boundingBox.union(__)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new wi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ba),xo.copy(e.boundingSphere).applyMatrix4(ba),this.boundingSphere.union(xo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(vo.geometry=this.geometry,vo.material=this.material,vo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),xo.copy(this.boundingSphere),xo.applyMatrix4(n),e.ray.intersectsSphere(xo)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,ba),g_.multiplyMatrices(n,ba),vo.matrixWorld=g_,vo.raycast(e,Lc);for(let o=0,c=Lc.length;o<c;o++){const u=Lc[o];u.instanceId=s,u.object=this,t.push(u)}Lc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Oa(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Un extends Tn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ue(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const v_=new U,x_=new U,y_=new st,mf=new za,Ic=new wi;class Vr extends wt{constructor(e=new vt,t=new Un){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)v_.fromBufferAttribute(t,i-1),x_.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=v_.distanceTo(x_);e.setAttribute("lineDistance",new Ge(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ic.copy(n.boundingSphere),Ic.applyMatrix4(i),Ic.radius+=s,e.ray.intersectsSphere(Ic)===!1)return;y_.copy(i).invert(),mf.copy(e.ray).applyMatrix4(y_);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new U,d=new U,m=new U,p=new U,g=this.isLineSegments?2:1,v=n.index,x=n.attributes.position;if(v!==null){const _=Math.max(0,o.start),b=Math.min(v.count,o.start+o.count);for(let S=_,w=b-1;S<w;S+=g){const P=v.getX(S),R=v.getX(S+1);if(h.fromBufferAttribute(x,P),d.fromBufferAttribute(x,R),mf.distanceSqToSegment(h,d,p,m)>u)continue;p.applyMatrix4(this.matrixWorld);const B=e.ray.origin.distanceTo(p);B<e.near||B>e.far||t.push({distance:B,point:m.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),b=Math.min(x.count,o.start+o.count);for(let S=_,w=b-1;S<w;S+=g){if(h.fromBufferAttribute(x,S),d.fromBufferAttribute(x,S+1),mf.distanceSqToSegment(h,d,p,m)>u)continue;p.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(p);R<e.near||R>e.far||t.push({distance:R,point:m.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const M_=new U,S_=new U;class ki extends Vr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)M_.fromBufferAttribute(t,i),S_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+M_.distanceTo(S_);e.setAttribute("lineDistance",new Ge(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Iv extends Vr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Fd extends Tn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const b_=new st,od=new za,Uc=new wi,Dc=new U;class Uv extends wt{constructor(e=new vt,t=new Fd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Uc.copy(n.boundingSphere),Uc.applyMatrix4(i),Uc.radius+=s,e.ray.intersectsSphere(Uc)===!1)return;b_.copy(i).invert(),od.copy(e.ray).applyMatrix4(b_);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,m=n.attributes.position;if(h!==null){const p=Math.max(0,o.start),g=Math.min(h.count,o.start+o.count);for(let v=p,M=g;v<M;v++){const x=h.getX(v);Dc.fromBufferAttribute(m,x),E_(Dc,x,u,i,e,t,this)}}else{const p=Math.max(0,o.start),g=Math.min(m.count,o.start+o.count);for(let v=p,M=g;v<M;v++)Dc.fromBufferAttribute(m,v),E_(Dc,v,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function E_(r,e,t,n,i,s,o){const c=od.distanceSqToPoint(r);if(c<t){const u=new U;od.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:o})}}class F2 extends tn{constructor(e,t,n,i,s,o,c,u,h){super(e,t,n,i,s,o,c,u,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:en,this.magFilter=s!==void 0?s:en,this.generateMipmaps=!1;const d=this;function m(){d.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class B2 extends tn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Qt,this.minFilter=Qt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Bd extends tn{constructor(e,t,n,i,s,o,c,u,h,d,m,p){super(null,o,c,u,h,d,i,s,m,p),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class z2 extends Bd{constructor(e,t,n,i,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=wn}}class H2 extends tn{constructor(e,t,n,i,s,o,c,u,h){super(e,t,n,i,s,o,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ti{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-o,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===o)return i/(s-1);const d=n[i],p=n[i+1]-d,g=(o-d)/p;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),c=this.getPoint(s),u=t||(o.isVector2?new ue:new U);return u.copy(c).sub(o).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],s=[],o=[],c=new U,u=new st;for(let g=0;g<=e;g++){const v=g/e;i[g]=this.getTangentAt(v,new U)}s[0]=new U,o[0]=new U;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),m=Math.abs(i[0].y),p=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),m<=h&&(h=m,n.set(0,1,0)),p<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),o[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),o[g]=o[g-1].clone(),c.crossVectors(i[g-1],i[g]),c.length()>Number.EPSILON){c.normalize();const v=Math.acos(Zt(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,v))}o[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(Zt(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let v=1;v<=e;v++)s[v].applyMatrix4(u.makeRotationAxis(i[v],g*v)),o[v].crossVectors(i[v],s[v])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class wu extends Ti{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new ue,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),m=Math.sin(this.aRotation),p=u-this.aX,g=h-this.aY;u=p*d-g*m+this.aX,h=p*m+g*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Dv extends wu{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function zd(){let r=0,e=0,t=0,n=0;function i(s,o,c,u){r=s,e=c,t=-3*s+3*o-2*c-u,n=2*s-2*o+c+u}return{initCatmullRom:function(s,o,c,u,h){i(o,c,h*(c-s),h*(u-o))},initNonuniformCatmullRom:function(s,o,c,u,h,d,m){let p=(o-s)/h-(c-s)/(h+d)+(c-o)/d,g=(c-o)/d-(u-o)/(d+m)+(u-c)/m;p*=d,g*=d,i(o,c,p,g)},calc:function(s){const o=s*s,c=o*s;return r+e*s+t*o+n*c}}}const Nc=new U,gf=new zd,_f=new zd,vf=new zd;class Nv extends Ti{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let c=Math.floor(o),u=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(Nc.subVectors(i[0],i[1]).add(i[0]),h=Nc);const m=i[c%s],p=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(Nc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=Nc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(m),g),M=Math.pow(m.distanceToSquared(p),g),x=Math.pow(p.distanceToSquared(d),g);M<1e-4&&(M=1),v<1e-4&&(v=M),x<1e-4&&(x=M),gf.initNonuniformCatmullRom(h.x,m.x,p.x,d.x,v,M,x),_f.initNonuniformCatmullRom(h.y,m.y,p.y,d.y,v,M,x),vf.initNonuniformCatmullRom(h.z,m.z,p.z,d.z,v,M,x)}else this.curveType==="catmullrom"&&(gf.initCatmullRom(h.x,m.x,p.x,d.x,this.tension),_f.initCatmullRom(h.y,m.y,p.y,d.y,this.tension),vf.initCatmullRom(h.z,m.z,p.z,d.z,this.tension));return n.set(gf.calc(u),_f.calc(u),vf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function w_(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+o)*u+(-3*t+3*n-2*s-o)*c+s*r+t}function G2(r,e){const t=1-r;return t*t*e}function k2(r,e){return 2*(1-r)*r*e}function V2(r,e){return r*r*e}function Po(r,e,t,n){return G2(r,e)+k2(r,t)+V2(r,n)}function W2(r,e){const t=1-r;return t*t*t*e}function X2(r,e){const t=1-r;return 3*t*t*r*e}function q2(r,e){return 3*(1-r)*r*r*e}function Y2(r,e){return r*r*r*e}function Lo(r,e,t,n,i){return W2(r,e)+X2(r,t)+q2(r,n)+Y2(r,i)}class Hd extends Ti{constructor(e=new ue,t=new ue,n=new ue,i=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(Lo(e,i.x,s.x,o.x,c.x),Lo(e,i.y,s.y,o.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ov extends Ti{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(Lo(e,i.x,s.x,o.x,c.x),Lo(e,i.y,s.y,o.y,c.y),Lo(e,i.z,s.z,o.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Tu extends Ti{constructor(e=new ue,t=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ue){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Fv extends Ti{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Gd extends Ti{constructor(e=new ue,t=new ue,n=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Po(e,i.x,s.x,o.x),Po(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class kd extends Ti{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Po(e,i.x,s.x,o.x),Po(e,i.y,s.y,o.y),Po(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Vd extends Ti{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ue){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),c=s-o,u=i[o===0?o:o-1],h=i[o],d=i[o>i.length-2?i.length-1:o+1],m=i[o>i.length-3?i.length-1:o+2];return n.set(w_(c,u.x,h.x,d.x,m.x),w_(c,u.y,h.y,d.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ue().fromArray(i))}return this}}var Wd=Object.freeze({__proto__:null,ArcCurve:Dv,CatmullRomCurve3:Nv,CubicBezierCurve:Hd,CubicBezierCurve3:Ov,EllipseCurve:wu,LineCurve:Tu,LineCurve3:Fv,QuadraticBezierCurve:Gd,QuadraticBezierCurve3:kd,SplineCurve:Vd});class Bv extends Ti{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Tu(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-o/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],c=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,u=o.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Wd[i.type]().fromJSON(i))}return this}}class Vo extends Bv{constructor(e){super(),this.type="Path",this.currentPoint=new ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Tu(this.currentPoint.clone(),new ue(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Gd(this.currentPoint.clone(),new ue(e,t),new ue(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const c=new Hd(this.currentPoint.clone(),new ue(e,t),new ue(n,i),new ue(s,o));return this.curves.push(c),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Vd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,o,c,u),this}absellipse(e,t,n,i,s,o,c,u){const h=new wu(e,t,n,i,s,o,c,u);if(this.curves.length>0){const m=h.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ga extends vt{constructor(e=[new ue(0,-.5),new ue(.5,0),new ue(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Zt(i,0,Math.PI*2);const s=[],o=[],c=[],u=[],h=[],d=1/t,m=new U,p=new ue,g=new U,v=new U,M=new U;let x=0,_=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:x=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,g.x=_*1,g.y=-x,g.z=_*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,g.x=_*1,g.y=-x,g.z=_*0,v.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(v)}for(let b=0;b<=t;b++){const S=n+b*d*i,w=Math.sin(S),P=Math.cos(S);for(let R=0;R<=e.length-1;R++){m.x=e[R].x*w,m.y=e[R].y,m.z=e[R].x*P,o.push(m.x,m.y,m.z),p.x=b/t,p.y=R/(e.length-1),c.push(p.x,p.y);const N=u[3*R+0]*w,B=u[3*R+1],T=u[3*R+0]*P;h.push(N,B,T)}}for(let b=0;b<t;b++)for(let S=0;S<e.length-1;S++){const w=S+b*e.length,P=w,R=w+e.length,N=w+e.length+1,B=w+1;s.push(P,R,B),s.push(N,B,R)}this.setIndex(s),this.setAttribute("position",new Ge(o,3)),this.setAttribute("uv",new Ge(c,2)),this.setAttribute("normal",new Ge(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ga(e.points,e.segments,e.phiStart,e.phiLength)}}class sl extends Ga{constructor(e=1,t=1,n=4,i=8){const s=new Vo;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new sl(e.radius,e.length,e.capSegments,e.radialSegments)}}class al extends vt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],c=[],u=[],h=new U,d=new ue;o.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let m=0,p=3;m<=t;m++,p+=3){const g=n+m/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),o.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(o[p]/e+1)/2,d.y=(o[p+1]/e+1)/2,u.push(d.x,d.y)}for(let m=1;m<=t;m++)s.push(m,m+1,0);this.setIndex(s),this.setAttribute("position",new Ge(o,3)),this.setAttribute("normal",new Ge(c,3)),this.setAttribute("uv",new Ge(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new al(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Us extends vt{constructor(e=1,t=1,n=1,i=32,s=1,o=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],m=[],p=[],g=[];let v=0;const M=[],x=n/2;let _=0;b(),o===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(d),this.setAttribute("position",new Ge(m,3)),this.setAttribute("normal",new Ge(p,3)),this.setAttribute("uv",new Ge(g,2));function b(){const w=new U,P=new U;let R=0;const N=(t-e)/n;for(let B=0;B<=s;B++){const T=[],D=B/s,J=D*(t-e)+e;for(let ce=0;ce<=i;ce++){const q=ce/i,Z=q*u+c,W=Math.sin(Z),he=Math.cos(Z);P.x=J*W,P.y=-D*n+x,P.z=J*he,m.push(P.x,P.y,P.z),w.set(W,N,he).normalize(),p.push(w.x,w.y,w.z),g.push(q,1-D),T.push(v++)}M.push(T)}for(let B=0;B<i;B++)for(let T=0;T<s;T++){const D=M[T][B],J=M[T+1][B],ce=M[T+1][B+1],q=M[T][B+1];d.push(D,J,q),d.push(J,ce,q),R+=6}h.addGroup(_,R,0),_+=R}function S(w){const P=v,R=new ue,N=new U;let B=0;const T=w===!0?e:t,D=w===!0?1:-1;for(let ce=1;ce<=i;ce++)m.push(0,x*D,0),p.push(0,D,0),g.push(.5,.5),v++;const J=v;for(let ce=0;ce<=i;ce++){const Z=ce/i*u+c,W=Math.cos(Z),he=Math.sin(Z);N.x=T*he,N.y=x*D,N.z=T*W,m.push(N.x,N.y,N.z),p.push(0,D,0),R.x=W*.5+.5,R.y=he*.5*D+.5,g.push(R.x,R.y),v++}for(let ce=0;ce<i;ce++){const q=P+ce,Z=J+ce;w===!0?d.push(Z,Z+1,q):d.push(Z+1,Z,q),B+=3}h.addGroup(_,B,w===!0?1:2),_+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Us(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ol extends Us{constructor(e=1,t=1,n=32,i=1,s=!1,o=0,c=Math.PI*2){super(0,e,t,n,i,s,o,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:c}}static fromJSON(e){return new ol(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class pr extends vt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];c(i),h(n),d(),this.setAttribute("position",new Ge(s,3)),this.setAttribute("normal",new Ge(s.slice(),3)),this.setAttribute("uv",new Ge(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(b){const S=new U,w=new U,P=new U;for(let R=0;R<t.length;R+=3)g(t[R+0],S),g(t[R+1],w),g(t[R+2],P),u(S,w,P,b)}function u(b,S,w,P){const R=P+1,N=[];for(let B=0;B<=R;B++){N[B]=[];const T=b.clone().lerp(w,B/R),D=S.clone().lerp(w,B/R),J=R-B;for(let ce=0;ce<=J;ce++)ce===0&&B===R?N[B][ce]=T:N[B][ce]=T.clone().lerp(D,ce/J)}for(let B=0;B<R;B++)for(let T=0;T<2*(R-B)-1;T++){const D=Math.floor(T/2);T%2===0?(p(N[B][D+1]),p(N[B+1][D]),p(N[B][D])):(p(N[B][D+1]),p(N[B+1][D+1]),p(N[B+1][D]))}}function h(b){const S=new U;for(let w=0;w<s.length;w+=3)S.x=s[w+0],S.y=s[w+1],S.z=s[w+2],S.normalize().multiplyScalar(b),s[w+0]=S.x,s[w+1]=S.y,s[w+2]=S.z}function d(){const b=new U;for(let S=0;S<s.length;S+=3){b.x=s[S+0],b.y=s[S+1],b.z=s[S+2];const w=x(b)/2/Math.PI+.5,P=_(b)/Math.PI+.5;o.push(w,1-P)}v(),m()}function m(){for(let b=0;b<o.length;b+=6){const S=o[b+0],w=o[b+2],P=o[b+4],R=Math.max(S,w,P),N=Math.min(S,w,P);R>.9&&N<.1&&(S<.2&&(o[b+0]+=1),w<.2&&(o[b+2]+=1),P<.2&&(o[b+4]+=1))}}function p(b){s.push(b.x,b.y,b.z)}function g(b,S){const w=b*3;S.x=e[w+0],S.y=e[w+1],S.z=e[w+2]}function v(){const b=new U,S=new U,w=new U,P=new U,R=new ue,N=new ue,B=new ue;for(let T=0,D=0;T<s.length;T+=9,D+=6){b.set(s[T+0],s[T+1],s[T+2]),S.set(s[T+3],s[T+4],s[T+5]),w.set(s[T+6],s[T+7],s[T+8]),R.set(o[D+0],o[D+1]),N.set(o[D+2],o[D+3]),B.set(o[D+4],o[D+5]),P.copy(b).add(S).add(w).divideScalar(3);const J=x(P);M(R,D+0,b,J),M(N,D+2,S,J),M(B,D+4,w,J)}}function M(b,S,w,P){P<0&&b.x===1&&(o[S]=b.x-1),w.x===0&&w.z===0&&(o[S]=P/2/Math.PI+.5)}function x(b){return Math.atan2(b.z,-b.x)}function _(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pr(e.vertices,e.indices,e.radius,e.details)}}class ll extends pr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ll(e.radius,e.detail)}}const Oc=new U,Fc=new U,xf=new U,Bc=new Hn;class zv extends vt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(bs*t),o=e.getIndex(),c=e.getAttribute("position"),u=o?o.count:c.count,h=[0,0,0],d=["a","b","c"],m=new Array(3),p={},g=[];for(let v=0;v<u;v+=3){o?(h[0]=o.getX(v),h[1]=o.getX(v+1),h[2]=o.getX(v+2)):(h[0]=v,h[1]=v+1,h[2]=v+2);const{a:M,b:x,c:_}=Bc;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Bc.getNormal(xf),m[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,m[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let b=0;b<3;b++){const S=(b+1)%3,w=m[b],P=m[S],R=Bc[d[b]],N=Bc[d[S]],B=`${w}_${P}`,T=`${P}_${w}`;T in p&&p[T]?(xf.dot(p[T].normal)<=s&&(g.push(R.x,R.y,R.z),g.push(N.x,N.y,N.z)),p[T]=null):B in p||(p[B]={index0:h[b],index1:h[S],normal:xf.clone()})}}for(const v in p)if(p[v]){const{index0:M,index1:x}=p[v];Oc.fromBufferAttribute(c,M),Fc.fromBufferAttribute(c,x),g.push(Oc.x,Oc.y,Oc.z),g.push(Fc.x,Fc.y,Fc.z)}this.setAttribute("position",new Ge(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Es extends Vo{constructor(e){super(e),this.uuid=jn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Vo().fromJSON(i))}return this}}const Z2={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Hv(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let c,u,h,d,m,p,g;if(n&&(s=j2(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let v=t;v<i;v+=t)m=r[v],p=r[v+1],m<c&&(c=m),p<u&&(u=p),m>h&&(h=m),p>d&&(d=p);g=Math.max(h-c,d-u),g=g!==0?32767/g:0}return Wo(s,o,t,c,u,g,0),o}};function Hv(r,e,t,n,i){let s,o;if(i===uL(r,e,t,n)>0)for(s=e;s<t;s+=n)o=T_(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=T_(s,r[s],r[s+1],o);return o&&Au(o,o.next)&&(qo(o),o=o.next),o}function Cs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Au(t,t.next)||Wt(t.prev,t,t.next)===0)){if(qo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Wo(r,e,t,n,i,s,o){if(!r)return;!o&&s&&rL(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?K2(r,n,i,s):J2(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),qo(r),r=h.next,c=h.next;continue}if(r=h,r===c){o?o===1?(r=$2(Cs(r),e,t),Wo(r,e,t,n,i,s,2)):o===2&&Q2(r,e,t,n,i,s):Wo(Cs(r),e,t,n,i,s,1);break}}}function J2(r){const e=r.prev,t=r,n=r.next;if(Wt(e,t,n)>=0)return!1;const i=e.x,s=t.x,o=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<o?i:o:s<o?s:o,m=c<u?c<h?c:h:u<h?u:h,p=i>s?i>o?i:o:s>o?s:o,g=c>u?c>h?c:h:u>h?u:h;let v=n.next;for(;v!==e;){if(v.x>=d&&v.x<=p&&v.y>=m&&v.y<=g&&Aa(i,c,s,u,o,h,v.x,v.y)&&Wt(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function K2(r,e,t,n){const i=r.prev,s=r,o=r.next;if(Wt(i,s,o)>=0)return!1;const c=i.x,u=s.x,h=o.x,d=i.y,m=s.y,p=o.y,g=c<u?c<h?c:h:u<h?u:h,v=d<m?d<p?d:p:m<p?m:p,M=c>u?c>h?c:h:u>h?u:h,x=d>m?d>p?d:p:m>p?m:p,_=ld(g,v,e,t,n),b=ld(M,x,e,t,n);let S=r.prevZ,w=r.nextZ;for(;S&&S.z>=_&&w&&w.z<=b;){if(S.x>=g&&S.x<=M&&S.y>=v&&S.y<=x&&S!==i&&S!==o&&Aa(c,d,u,m,h,p,S.x,S.y)&&Wt(S.prev,S,S.next)>=0||(S=S.prevZ,w.x>=g&&w.x<=M&&w.y>=v&&w.y<=x&&w!==i&&w!==o&&Aa(c,d,u,m,h,p,w.x,w.y)&&Wt(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;S&&S.z>=_;){if(S.x>=g&&S.x<=M&&S.y>=v&&S.y<=x&&S!==i&&S!==o&&Aa(c,d,u,m,h,p,S.x,S.y)&&Wt(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;w&&w.z<=b;){if(w.x>=g&&w.x<=M&&w.y>=v&&w.y<=x&&w!==i&&w!==o&&Aa(c,d,u,m,h,p,w.x,w.y)&&Wt(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function $2(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Au(i,s)&&Gv(i,n,n.next,s)&&Xo(i,s)&&Xo(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),qo(n),qo(n.next),n=r=s),n=n.next}while(n!==r);return Cs(n)}function Q2(r,e,t,n,i,s){let o=r;do{let c=o.next.next;for(;c!==o.prev;){if(o.i!==c.i&&oL(o,c)){let u=kv(o,c);o=Cs(o,o.next),u=Cs(u,u.next),Wo(o,e,t,n,i,s,0),Wo(u,e,t,n,i,s,0);return}c=c.next}o=o.next}while(o!==r)}function j2(r,e,t,n){const i=[];let s,o,c,u,h;for(s=0,o=e.length;s<o;s++)c=e[s]*n,u=s<o-1?e[s+1]*n:r.length,h=Hv(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(aL(h));for(i.sort(eL),s=0;s<i.length;s++)t=tL(i[s],t);return t}function eL(r,e){return r.x-e.x}function tL(r,e){const t=nL(r,e);if(!t)return e;const n=kv(t,r);return Cs(n,n.next),Cs(t,t.next)}function nL(r,e){let t=e,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const p=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=s&&p>n&&(n=p,i=t.x<t.next.x?t:t.next,p===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,m;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&Aa(o<h?s:n,o,u,h,o<h?n:s,o,t.x,t.y)&&(m=Math.abs(o-t.y)/(s-t.x),Xo(t,r)&&(m<d||m===d&&(t.x>i.x||t.x===i.x&&iL(i,t)))&&(i=t,d=m)),t=t.next;while(t!==c);return i}function iL(r,e){return Wt(r.prev,r,e.prev)<0&&Wt(e.next,r,r.next)<0}function rL(r,e,t,n){let i=r;do i.z===0&&(i.z=ld(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,sL(i)}function sL(r){let e,t,n,i,s,o,c,u,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function ld(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function aL(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Aa(r,e,t,n,i,s,o,c){return(i-o)*(e-c)>=(r-o)*(s-c)&&(r-o)*(n-c)>=(t-o)*(e-c)&&(t-o)*(s-c)>=(i-o)*(n-c)}function oL(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!lL(r,e)&&(Xo(r,e)&&Xo(e,r)&&cL(r,e)&&(Wt(r.prev,r,e.prev)||Wt(r,e.prev,e))||Au(r,e)&&Wt(r.prev,r,r.next)>0&&Wt(e.prev,e,e.next)>0)}function Wt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Au(r,e){return r.x===e.x&&r.y===e.y}function Gv(r,e,t,n){const i=Hc(Wt(r,e,t)),s=Hc(Wt(r,e,n)),o=Hc(Wt(t,n,r)),c=Hc(Wt(t,n,e));return!!(i!==s&&o!==c||i===0&&zc(r,t,e)||s===0&&zc(r,n,e)||o===0&&zc(t,r,n)||c===0&&zc(t,e,n))}function zc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Hc(r){return r>0?1:r<0?-1:0}function lL(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Gv(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Xo(r,e){return Wt(r.prev,r,r.next)<0?Wt(r,e,r.next)>=0&&Wt(r,r.prev,e)>=0:Wt(r,e,r.prev)<0||Wt(r,r.next,e)<0}function cL(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function kv(r,e){const t=new cd(r.i,r.x,r.y),n=new cd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function T_(r,e,t,n){const i=new cd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function qo(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function cd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function uL(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class zi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return zi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];A_(e),R_(n,e);let o=e.length;t.forEach(A_);for(let u=0;u<t.length;u++)i.push(o),o+=t[u].length,R_(n,t[u]);const c=Z2.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function A_(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function R_(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class cl extends vt{constructor(e=new Es([new ue(.5,.5),new ue(-.5,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];o(h)}this.setAttribute("position",new Ge(i,3)),this.setAttribute("uv",new Ge(s,2)),this.computeVertexNormals();function o(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,m=t.depth!==void 0?t.depth:1;let p=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:hL;let S,w=!1,P,R,N,B;_&&(S=_.getSpacedPoints(d),w=!0,p=!1,P=_.computeFrenetFrames(d,!1),R=new U,N=new U,B=new U),p||(x=0,g=0,v=0,M=0);const T=c.extractPoints(h);let D=T.shape;const J=T.holes;if(!zi.isClockWise(D)){D=D.reverse();for(let z=0,Me=J.length;z<Me;z++){const ie=J[z];zi.isClockWise(ie)&&(J[z]=ie.reverse())}}const q=zi.triangulateShape(D,J),Z=D;for(let z=0,Me=J.length;z<Me;z++){const ie=J[z];D=D.concat(ie)}function W(z,Me,ie){return Me||console.error("THREE.ExtrudeGeometry: vec does not exist"),z.clone().addScaledVector(Me,ie)}const he=D.length,ee=q.length;function ae(z,Me,ie){let ye,de,Ne;const Ie=z.x-Me.x,Oe=z.y-Me.y,je=ie.x-z.x,nt=ie.y-z.y,Lt=Ie*Ie+Oe*Oe,O=Ie*nt-Oe*je;if(Math.abs(O)>Number.EPSILON){const L=Math.sqrt(Lt),j=Math.sqrt(je*je+nt*nt),xe=Me.x-Oe/L,ve=Me.y+Ie/L,Se=ie.x-nt/j,ke=ie.y+je/j,we=((Se-xe)*nt-(ke-ve)*je)/(Ie*nt-Oe*je);ye=xe+Ie*we-z.x,de=ve+Oe*we-z.y;const re=ye*ye+de*de;if(re<=2)return new ue(ye,de);Ne=Math.sqrt(re/2)}else{let L=!1;Ie>Number.EPSILON?je>Number.EPSILON&&(L=!0):Ie<-Number.EPSILON?je<-Number.EPSILON&&(L=!0):Math.sign(Oe)===Math.sign(nt)&&(L=!0),L?(ye=-Oe,de=Ie,Ne=Math.sqrt(Lt)):(ye=Ie,de=Oe,Ne=Math.sqrt(Lt/2))}return new ue(ye/Ne,de/Ne)}const fe=[];for(let z=0,Me=Z.length,ie=Me-1,ye=z+1;z<Me;z++,ie++,ye++)ie===Me&&(ie=0),ye===Me&&(ye=0),fe[z]=ae(Z[z],Z[ie],Z[ye]);const me=[];let Ee,Q=fe.concat();for(let z=0,Me=J.length;z<Me;z++){const ie=J[z];Ee=[];for(let ye=0,de=ie.length,Ne=de-1,Ie=ye+1;ye<de;ye++,Ne++,Ie++)Ne===de&&(Ne=0),Ie===de&&(Ie=0),Ee[ye]=ae(ie[ye],ie[Ne],ie[Ie]);me.push(Ee),Q=Q.concat(Ee)}for(let z=0;z<x;z++){const Me=z/x,ie=g*Math.cos(Me*Math.PI/2),ye=v*Math.sin(Me*Math.PI/2)+M;for(let de=0,Ne=Z.length;de<Ne;de++){const Ie=W(Z[de],fe[de],ye);He(Ie.x,Ie.y,-ie)}for(let de=0,Ne=J.length;de<Ne;de++){const Ie=J[de];Ee=me[de];for(let Oe=0,je=Ie.length;Oe<je;Oe++){const nt=W(Ie[Oe],Ee[Oe],ye);He(nt.x,nt.y,-ie)}}}const ge=v+M;for(let z=0;z<he;z++){const Me=p?W(D[z],Q[z],ge):D[z];w?(N.copy(P.normals[0]).multiplyScalar(Me.x),R.copy(P.binormals[0]).multiplyScalar(Me.y),B.copy(S[0]).add(N).add(R),He(B.x,B.y,B.z)):He(Me.x,Me.y,0)}for(let z=1;z<=d;z++)for(let Me=0;Me<he;Me++){const ie=p?W(D[Me],Q[Me],ge):D[Me];w?(N.copy(P.normals[z]).multiplyScalar(ie.x),R.copy(P.binormals[z]).multiplyScalar(ie.y),B.copy(S[z]).add(N).add(R),He(B.x,B.y,B.z)):He(ie.x,ie.y,m/d*z)}for(let z=x-1;z>=0;z--){const Me=z/x,ie=g*Math.cos(Me*Math.PI/2),ye=v*Math.sin(Me*Math.PI/2)+M;for(let de=0,Ne=Z.length;de<Ne;de++){const Ie=W(Z[de],fe[de],ye);He(Ie.x,Ie.y,m+ie)}for(let de=0,Ne=J.length;de<Ne;de++){const Ie=J[de];Ee=me[de];for(let Oe=0,je=Ie.length;Oe<je;Oe++){const nt=W(Ie[Oe],Ee[Oe],ye);w?He(nt.x,nt.y+S[d-1].y,S[d-1].x+ie):He(nt.x,nt.y,m+ie)}}}_e(),Pe();function _e(){const z=i.length/3;if(p){let Me=0,ie=he*Me;for(let ye=0;ye<ee;ye++){const de=q[ye];tt(de[2]+ie,de[1]+ie,de[0]+ie)}Me=d+x*2,ie=he*Me;for(let ye=0;ye<ee;ye++){const de=q[ye];tt(de[0]+ie,de[1]+ie,de[2]+ie)}}else{for(let Me=0;Me<ee;Me++){const ie=q[Me];tt(ie[2],ie[1],ie[0])}for(let Me=0;Me<ee;Me++){const ie=q[Me];tt(ie[0]+he*d,ie[1]+he*d,ie[2]+he*d)}}n.addGroup(z,i.length/3-z,0)}function Pe(){const z=i.length/3;let Me=0;Le(Z,Me),Me+=Z.length;for(let ie=0,ye=J.length;ie<ye;ie++){const de=J[ie];Le(de,Me),Me+=de.length}n.addGroup(z,i.length/3-z,1)}function Le(z,Me){let ie=z.length;for(;--ie>=0;){const ye=ie;let de=ie-1;de<0&&(de=z.length-1);for(let Ne=0,Ie=d+x*2;Ne<Ie;Ne++){const Oe=he*Ne,je=he*(Ne+1),nt=Me+ye+Oe,Lt=Me+de+Oe,O=Me+de+je,L=Me+ye+je;Ye(nt,Lt,O,L)}}}function He(z,Me,ie){u.push(z),u.push(Me),u.push(ie)}function tt(z,Me,ie){At(z),At(Me),At(ie);const ye=i.length/3,de=b.generateTopUV(n,i,ye-3,ye-2,ye-1);Qe(de[0]),Qe(de[1]),Qe(de[2])}function Ye(z,Me,ie,ye){At(z),At(Me),At(ye),At(Me),At(ie),At(ye);const de=i.length/3,Ne=b.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);Qe(Ne[0]),Qe(Ne[1]),Qe(Ne[3]),Qe(Ne[1]),Qe(Ne[2]),Qe(Ne[3])}function At(z){i.push(u[z*3+0]),i.push(u[z*3+1]),i.push(u[z*3+2])}function Qe(z){s.push(z.x),s.push(z.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return fL(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Wd[i.type]().fromJSON(i)),new cl(n,e.options)}}const hL={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ue(s,o),new ue(c,u),new ue(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],m=e[n*3+2],p=e[i*3],g=e[i*3+1],v=e[i*3+2],M=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-d)<Math.abs(o-h)?[new ue(o,1-u),new ue(h,1-m),new ue(p,1-v),new ue(M,1-_)]:[new ue(c,1-u),new ue(d,1-m),new ue(g,1-v),new ue(x,1-_)]}};function fL(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ul extends pr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ul(e.radius,e.detail)}}class ka extends pr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ka(e.radius,e.detail)}}class hl extends vt{constructor(e=.5,t=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let m=e;const p=(t-e)/i,g=new U,v=new ue;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const _=s+x/n*o;g.x=m*Math.cos(_),g.y=m*Math.sin(_),u.push(g.x,g.y,g.z),h.push(0,0,1),v.x=(g.x/t+1)/2,v.y=(g.y/t+1)/2,d.push(v.x,v.y)}m+=p}for(let M=0;M<i;M++){const x=M*(n+1);for(let _=0;_<n;_++){const b=_+x,S=b,w=b+n+1,P=b+n+2,R=b+1;c.push(S,w,R),c.push(w,P,R)}}this.setIndex(c),this.setAttribute("position",new Ge(u,3)),this.setAttribute("normal",new Ge(h,3)),this.setAttribute("uv",new Ge(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class fl extends vt{constructor(e=new Es([new ue(0,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ge(i,3)),this.setAttribute("normal",new Ge(s,3)),this.setAttribute("uv",new Ge(o,2));function h(d){const m=i.length/3,p=d.extractPoints(t);let g=p.shape;const v=p.holes;zi.isClockWise(g)===!1&&(g=g.reverse());for(let x=0,_=v.length;x<_;x++){const b=v[x];zi.isClockWise(b)===!0&&(v[x]=b.reverse())}const M=zi.triangulateShape(g,v);for(let x=0,_=v.length;x<_;x++){const b=v[x];g=g.concat(b)}for(let x=0,_=g.length;x<_;x++){const b=g[x];i.push(b.x,b.y,0),s.push(0,0,1),o.push(b.x,b.y)}for(let x=0,_=M.length;x<_;x++){const b=M[x],S=b[0]+m,w=b[1]+m,P=b[2]+m;n.push(S,w,P),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return dL(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new fl(n,e.curveSegments)}}function dL(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Va extends vt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+c,Math.PI);let h=0;const d=[],m=new U,p=new U,g=[],v=[],M=[],x=[];for(let _=0;_<=n;_++){const b=[],S=_/n;let w=0;_===0&&o===0?w=.5/t:_===n&&u===Math.PI&&(w=-.5/t);for(let P=0;P<=t;P++){const R=P/t;m.x=-e*Math.cos(i+R*s)*Math.sin(o+S*c),m.y=e*Math.cos(o+S*c),m.z=e*Math.sin(i+R*s)*Math.sin(o+S*c),v.push(m.x,m.y,m.z),p.copy(m).normalize(),M.push(p.x,p.y,p.z),x.push(R+w,1-S),b.push(h++)}d.push(b)}for(let _=0;_<n;_++)for(let b=0;b<t;b++){const S=d[_][b+1],w=d[_][b],P=d[_+1][b],R=d[_+1][b+1];(_!==0||o>0)&&g.push(S,w,R),(_!==n-1||u<Math.PI)&&g.push(w,P,R)}this.setIndex(g),this.setAttribute("position",new Ge(v,3)),this.setAttribute("normal",new Ge(M,3)),this.setAttribute("uv",new Ge(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Va(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class dl extends pr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new dl(e.radius,e.detail)}}class pl extends vt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],c=[],u=[],h=[],d=new U,m=new U,p=new U;for(let g=0;g<=n;g++)for(let v=0;v<=i;v++){const M=v/i*s,x=g/n*Math.PI*2;m.x=(e+t*Math.cos(x))*Math.cos(M),m.y=(e+t*Math.cos(x))*Math.sin(M),m.z=t*Math.sin(x),c.push(m.x,m.y,m.z),d.x=e*Math.cos(M),d.y=e*Math.sin(M),p.subVectors(m,d).normalize(),u.push(p.x,p.y,p.z),h.push(v/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let v=1;v<=i;v++){const M=(i+1)*g+v-1,x=(i+1)*(g-1)+v-1,_=(i+1)*(g-1)+v,b=(i+1)*g+v;o.push(M,x,b),o.push(x,_,b)}this.setIndex(o),this.setAttribute("position",new Ge(c,3)),this.setAttribute("normal",new Ge(u,3)),this.setAttribute("uv",new Ge(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pl(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class ml extends vt{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],m=new U,p=new U,g=new U,v=new U,M=new U,x=new U,_=new U;for(let S=0;S<=n;++S){const w=S/n*s*Math.PI*2;b(w,s,o,e,g),b(w+.01,s,o,e,v),x.subVectors(v,g),_.addVectors(v,g),M.crossVectors(x,_),_.crossVectors(M,x),M.normalize(),_.normalize();for(let P=0;P<=i;++P){const R=P/i*Math.PI*2,N=-t*Math.cos(R),B=t*Math.sin(R);m.x=g.x+(N*_.x+B*M.x),m.y=g.y+(N*_.y+B*M.y),m.z=g.z+(N*_.z+B*M.z),u.push(m.x,m.y,m.z),p.subVectors(m,g).normalize(),h.push(p.x,p.y,p.z),d.push(S/n),d.push(P/i)}}for(let S=1;S<=n;S++)for(let w=1;w<=i;w++){const P=(i+1)*(S-1)+(w-1),R=(i+1)*S+(w-1),N=(i+1)*S+w,B=(i+1)*(S-1)+w;c.push(P,R,B),c.push(R,N,B)}this.setIndex(c),this.setAttribute("position",new Ge(u,3)),this.setAttribute("normal",new Ge(h,3)),this.setAttribute("uv",new Ge(d,2));function b(S,w,P,R,N){const B=Math.cos(S),T=Math.sin(S),D=P/w*S,J=Math.cos(D);N.x=R*(2+J)*.5*B,N.y=R*(2+J)*T*.5,N.z=R*Math.sin(D)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ml(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class gl extends vt{constructor(e=new kd(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const c=new U,u=new U,h=new ue;let d=new U;const m=[],p=[],g=[],v=[];M(),this.setIndex(v),this.setAttribute("position",new Ge(m,3)),this.setAttribute("normal",new Ge(p,3)),this.setAttribute("uv",new Ge(g,2));function M(){for(let S=0;S<t;S++)x(S);x(s===!1?t:0),b(),_()}function x(S){d=e.getPointAt(S/t,d);const w=o.normals[S],P=o.binormals[S];for(let R=0;R<=i;R++){const N=R/i*Math.PI*2,B=Math.sin(N),T=-Math.cos(N);u.x=T*w.x+B*P.x,u.y=T*w.y+B*P.y,u.z=T*w.z+B*P.z,u.normalize(),p.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,m.push(c.x,c.y,c.z)}}function _(){for(let S=1;S<=t;S++)for(let w=1;w<=i;w++){const P=(i+1)*(S-1)+(w-1),R=(i+1)*S+(w-1),N=(i+1)*S+w,B=(i+1)*(S-1)+w;v.push(P,R,B),v.push(R,N,B)}}function b(){for(let S=0;S<=t;S++)for(let w=0;w<=i;w++)h.x=S/t,h.y=w/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new gl(new Wd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Vv extends vt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,s=new U;if(e.index!==null){const o=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const m=u[h],p=m.start,g=m.count;for(let v=p,M=p+g;v<M;v+=3)for(let x=0;x<3;x++){const _=c.getX(v+x),b=c.getX(v+(x+1)%3);i.fromBufferAttribute(o,_),s.fromBufferAttribute(o,b),C_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let c=0,u=o.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,m=3*c+(h+1)%3;i.fromBufferAttribute(o,d),s.fromBufferAttribute(o,m),C_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ge(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function C_(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var P_=Object.freeze({__proto__:null,BoxGeometry:Jr,CapsuleGeometry:sl,CircleGeometry:al,ConeGeometry:ol,CylinderGeometry:Us,DodecahedronGeometry:ll,EdgesGeometry:zv,ExtrudeGeometry:cl,IcosahedronGeometry:ul,LatheGeometry:Ga,OctahedronGeometry:ka,PlaneGeometry:Is,PolyhedronGeometry:pr,RingGeometry:hl,ShapeGeometry:fl,SphereGeometry:Va,TetrahedronGeometry:dl,TorusGeometry:pl,TorusKnotGeometry:ml,TubeGeometry:gl,WireframeGeometry:Vv});class Wv extends Tn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ue(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Xv extends Hi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Xd extends Tn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ue(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qv extends Xd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Zt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ue(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ue(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ue(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Yv extends Tn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ue(16777215),this.specular=new Ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=tl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Zv extends Tn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ue(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Jv extends Tn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Kv extends Tn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=tl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class $v extends Tn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ue(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Qv extends Un{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function pi(r,e,t){return qd(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function Ms(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function qd(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function jv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function ud(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[o++]=r[c+u]}return i}function Yd(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)}function pL(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),m=[],p=[];for(let g=0;g<h.times.length;++g){const v=h.times[g]*i;if(!(v<t||v>=n)){m.push(h.times[g]);for(let M=0;M<d;++M)p.push(h.values[g*d+M])}}m.length!==0&&(h.times=Ms(m,h.times.constructor),h.values=Ms(p,h.values.constructor),o.push(h))}s.tracks=o;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function mL(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const c=t.tracks[o],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let d=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=m/3);let p=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=g/3);const v=c.times.length-1;let M;if(s<=c.times[0]){const _=d,b=m-d;M=pi(c.values,_,b)}else if(s>=c.times[v]){const _=v*m+d,b=_+m-d;M=pi(c.values,_,b)}else{const _=c.createInterpolant(),b=d,S=m-d;_.evaluate(s),M=pi(_.resultBuffer,b,S)}u==="quaternion"&&new Gn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let _=0;_<x;++_){const b=_*g+p;if(u==="quaternion")Gn.multiplyQuaternionsFlat(h.values,b,M,0,h.values,b);else{const S=g-p*2;for(let w=0;w<S;++w)h.values[b+w]-=M[w]}}}return r.blendMode=Ed,r}const gL={arraySlice:pi,convertArray:Ms,isTypedArray:qd,getKeyframeOrder:jv,sortedArray:ud,flattenJSON:Yd,subclip:pL,makeClipAdditive:mL};class _l{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const c=n+o>>>1;e<t[c]?o=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ex extends _l{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:vs,endingEnd:vs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,c=i[s],u=i[o];if(c===void 0)switch(this.getSettings_().endingStart){case xs:s=e,c=2*t-n;break;case zo:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case xs:o=e,u=2*n-t;break;case zo:o=1,u=n+i[1]-i[0];break;default:o=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=o*d}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,m=this._offsetNext,p=this._weightPrev,g=this._weightNext,v=(n-t)/(i-t),M=v*v,x=M*v,_=-p*x+2*p*M-p*v,b=(1+p)*x+(-1.5-2*p)*M+(-.5+p)*v+1,S=(-1-g)*x+(1.5+g)*M+.5*v,w=g*x-g*M;for(let P=0;P!==c;++P)s[P]=_*o[d+P]+b*o[h+P]+S*o[u+P]+w*o[m+P];return s}}class Zd extends _l{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),m=1-d;for(let p=0;p!==c;++p)s[p]=o[h+p]*m+o[u+p]*d;return s}}class tx extends _l{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ai{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ms(t,this.TimeBufferType),this.values=Ms(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ms(e.times,Array),values:Ms(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new tx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Zd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ex(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Fo:t=this.InterpolantFactoryMethodDiscrete;break;case Bo:t=this.InterpolantFactoryMethodLinear;break;case jc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Fo;case this.InterpolantFactoryMethodLinear:return Bo;case this.InterpolantFactoryMethodSmooth:return jc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const c=this.getValueSize();this.times=pi(n,s,o),this.values=pi(this.values,s*c,o*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,o),e=!1;break}o=u}if(i!==void 0&&qd(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=pi(this.times),t=pi(this.values),n=this.getValueSize(),i=this.getInterpolation()===jc,s=e.length-1;let o=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const m=c*n,p=m-n,g=m+n;for(let v=0;v!==n;++v){const M=t[m+v];if(M!==t[p+v]||M!==t[g+v]){u=!0;break}}}if(u){if(c!==o){e[o]=e[c];const m=c*n,p=o*n;for(let g=0;g!==n;++g)t[p+g]=t[m+g]}++o}}if(s>0){e[o]=e[s];for(let c=s*n,u=o*n,h=0;h!==n;++h)t[u+h]=t[c+h];++o}return o!==e.length?(this.times=pi(e,0,o),this.values=pi(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=pi(this.times,0),t=pi(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ai.prototype.TimeBufferType=Float32Array;Ai.prototype.ValueBufferType=Float32Array;Ai.prototype.DefaultInterpolation=Bo;class Ds extends Ai{}Ds.prototype.ValueTypeName="bool";Ds.prototype.ValueBufferType=Array;Ds.prototype.DefaultInterpolation=Fo;Ds.prototype.InterpolantFactoryMethodLinear=void 0;Ds.prototype.InterpolantFactoryMethodSmooth=void 0;class Jd extends Ai{}Jd.prototype.ValueTypeName="color";class Yo extends Ai{}Yo.prototype.ValueTypeName="number";class nx extends _l{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Gn.slerpFlat(s,0,o,h-c,o,h,u);return s}}class Wa extends Ai{InterpolantFactoryMethodLinear(e){return new nx(this.times,this.values,this.getValueSize(),e)}}Wa.prototype.ValueTypeName="quaternion";Wa.prototype.DefaultInterpolation=Bo;Wa.prototype.InterpolantFactoryMethodSmooth=void 0;class Ns extends Ai{}Ns.prototype.ValueTypeName="string";Ns.prototype.ValueBufferType=Array;Ns.prototype.DefaultInterpolation=Fo;Ns.prototype.InterpolantFactoryMethodLinear=void 0;Ns.prototype.InterpolantFactoryMethodSmooth=void 0;class Zo extends Ai{}Zo.prototype.ValueTypeName="vector";class Jo{constructor(e,t=-1,n,i=mu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=jn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,c=n.length;o!==c;++o)t.push(vL(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Ai.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=jv(u);u=ud(u,1,d),h=ud(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),o.push(new Yo(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const m=d[1];let p=i[m];p||(i[m]=p=[]),p.push(h)}}const o=[];for(const c in i)o.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,p,g,v,M){if(g.length!==0){const x=[],_=[];Yd(g,x,_,v),x.length!==0&&M.push(new m(p,x,_))}},i=[],s=e.name||"default",o=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let m=0;m<h.length;m++){const p=h[m].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const g={};let v;for(v=0;v<p.length;v++)if(p[v].morphTargets)for(let M=0;M<p[v].morphTargets.length;M++)g[p[v].morphTargets[M]]=-1;for(const M in g){const x=[],_=[];for(let b=0;b!==p[v].morphTargets.length;++b){const S=p[v];x.push(S.time),_.push(S.morphTarget===M?1:0)}i.push(new Yo(".morphTargetInfluence["+M+"]",x,_))}u=g.length*o}else{const g=".bones["+t[m].name+"]";n(Zo,g+".position",p,"pos",i),n(Wa,g+".quaternion",p,"rot",i),n(Zo,g+".scale",p,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function _L(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Yo;case"vector":case"vector2":case"vector3":case"vector4":return Zo;case"color":return Jd;case"quaternion":return Wa;case"bool":case"boolean":return Ds;case"string":return Ns}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function vL(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=_L(r.type);if(r.times===void 0){const t=[],n=[];Yd(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Ps={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Kd{constructor(e,t,n){const i=this;let s=!1,o=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,o,c),s=!0},this.itemEnd=function(d){o++,i.onProgress!==void 0&&i.onProgress(d,o,c),o===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,m){return h.push(d,m),this},this.removeHandler=function(d){const m=h.indexOf(d);return m!==-1&&h.splice(m,2),this},this.getHandler=function(d){for(let m=0,p=h.length;m<p;m+=2){const g=h[m],v=h[m+1];if(g.global&&(g.lastIndex=0),g.test(d))return v}return null}}}const ix=new Kd;class ti{constructor(e){this.manager=e!==void 0?e:ix,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ar={};class xL extends Error{constructor(e,t){super(e),this.response=t}}class fr extends ti{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Ps.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ar[e]!==void 0){ar[e].push({onLoad:t,onProgress:n,onError:i});return}ar[e]=[],ar[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=ar[e],m=h.body.getReader(),p=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=p?parseInt(p):0,v=g!==0;let M=0;const x=new ReadableStream({start(_){b();function b(){m.read().then(({done:S,value:w})=>{if(S)_.close();else{M+=w.byteLength;const P=new ProgressEvent("progress",{lengthComputable:v,loaded:M,total:g});for(let R=0,N=d.length;R<N;R++){const B=d[R];B.onProgress&&B.onProgress(P)}_.enqueue(w),b()}})}}});return new Response(x)}else throw new xL(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),p=m&&m[1]?m[1].toLowerCase():void 0,g=new TextDecoder(p);return h.arrayBuffer().then(v=>g.decode(v))}}}).then(h=>{Ps.add(e,h);const d=ar[e];delete ar[e];for(let m=0,p=d.length;m<p;m++){const g=d[m];g.onLoad&&g.onLoad(h)}}).catch(h=>{const d=ar[e];if(d===void 0)throw this.manager.itemError(e),h;delete ar[e];for(let m=0,p=d.length;m<p;m++){const g=d[m];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class yL extends ti{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new fr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Jo.parse(e[n]);t.push(i)}return t}}class ML extends ti{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],c=new Bd,u=new fr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(m){u.load(e[m],function(p){const g=s.parse(p,!0);o[m]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=en),c.image=o,c.format=g.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let m=0,p=e.length;m<p;++m)d(m);else u.load(e,function(m){const p=s.parse(m,!0);if(p.isCubemap){const g=p.mipmaps.length/p.mipmapCount;for(let v=0;v<g;v++){o[v]={mipmaps:[]};for(let M=0;M<p.mipmapCount;M++)o[v].mipmaps.push(p.mipmaps[v*p.mipmapCount+M]),o[v].format=p.format,o[v].width=p.width,o[v].height=p.height}c.image=o}else c.image.width=p.width,c.image.height=p.height,c.mipmaps=p.mipmaps;p.mipmapCount===1&&(c.minFilter=en),c.format=p.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Ko extends ti{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Ps.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const c=ko("img");function u(){d(),Ps.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(m){d(),i&&i(m),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class SL extends ti{constructor(e){super(e)}load(e,t,n,i){const s=new rl;s.colorSpace=ct;const o=new Ko(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let c=0;function u(h){o.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class bL extends ti{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Pa,c=new fr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){const h=s.parse(u);h&&(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:wn,o.wrapT=h.wrapT!==void 0?h.wrapT:wn,o.magFilter=h.magFilter!==void 0?h.magFilter:en,o.minFilter=h.minFilter!==void 0?h.minFilter:en,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?o.colorSpace=h.colorSpace:h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=kr),h.mipmapCount===1&&(o.minFilter=en),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class EL extends ti{constructor(e){super(e)}load(e,t,n,i){const s=new tn,o=new Ko(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Kr extends wt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ue(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class rx extends Kr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ue(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const yf=new st,L_=new U,I_=new U;class $d{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.map=null,this.mapPass=null,this.matrix=new st,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new vu,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new Pt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;L_.setFromMatrixPosition(e.matrixWorld),t.position.copy(L_),I_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(I_),t.updateMatrixWorld(),yf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(yf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class wL extends $d{constructor(){super(new yn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Da*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class sx extends Kr{constructor(e,t,n=0,i=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new wL}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const U_=new st,yo=new U,Mf=new U;class TL extends $d{constructor(){super(new yn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new Pt(2,1,1,1),new Pt(0,1,1,1),new Pt(3,1,1,1),new Pt(1,1,1,1),new Pt(3,0,1,1),new Pt(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),yo.setFromMatrixPosition(e.matrixWorld),n.position.copy(yo),Mf.copy(n.position),Mf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Mf),n.updateMatrixWorld(),i.makeTranslation(-yo.x,-yo.y,-yo.z),U_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(U_)}}class ax extends Kr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new TL}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class AL extends $d{constructor(){super(new xu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ox extends Kr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.shadow=new AL}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class lx extends Kr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class cx extends Kr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class ux{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Ru extends Kr{constructor(e=new ux,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Cu extends ti{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new fr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Cu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ue().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new Ue().setHex(o.value);break;case"v2":i.uniforms[s].value=new ue().fromArray(o.value);break;case"v3":i.uniforms[s].value=new U().fromArray(o.value);break;case"v4":i.uniforms[s].value=new Pt().fromArray(o.value);break;case"m3":i.uniforms[s].value=new pt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new st().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ue().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ue().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Wv,SpriteMaterial:Nd,RawShaderMaterial:Xv,ShaderMaterial:Hi,PointsMaterial:Fd,MeshPhysicalMaterial:qv,MeshStandardMaterial:Xd,MeshPhongMaterial:Yv,MeshToonMaterial:Zv,MeshNormalMaterial:Jv,MeshLambertMaterial:Kv,MeshDepthMaterial:Ud,MeshDistanceMaterial:Dd,MeshBasicMaterial:Zr,MeshMatcapMaterial:$v,LineDashedMaterial:Qv,LineBasicMaterial:Un,Material:Tn};return new t[e]}}class hd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class hx extends vt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class fx extends ti{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new fr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,v){if(t[v]!==void 0)return t[v];const x=g.interleavedBuffers[v],_=s(g,x.buffer),b=Ea(x.type,_),S=new bu(b,x.stride);return S.uuid=x.uuid,t[v]=S,S}function s(g,v){if(n[v]!==void 0)return n[v];const x=g.arrayBuffers[v],_=new Uint32Array(x).buffer;return n[v]=_,_}const o=e.isInstancedBufferGeometry?new hx:new vt,c=e.data.index;if(c!==void 0){const g=Ea(c.type,c.array);o.setIndex(new Nt(g,1))}const u=e.data.attributes;for(const g in u){const v=u[g];let M;if(v.isInterleavedBufferAttribute){const x=i(e.data,v.data);M=new Rs(x,v.itemSize,v.offset,v.normalized)}else{const x=Ea(v.type,v.array),_=v.isInstancedBufferAttribute?Oa:Nt;M=new _(x,v.itemSize,v.normalized)}v.name!==void 0&&(M.name=v.name),v.usage!==void 0&&M.setUsage(v.usage),v.updateRange!==void 0&&(M.updateRange.offset=v.updateRange.offset,M.updateRange.count=v.updateRange.count),o.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const v=h[g],M=[];for(let x=0,_=v.length;x<_;x++){const b=v[x];let S;if(b.isInterleavedBufferAttribute){const w=i(e.data,b.data);S=new Rs(w,b.itemSize,b.offset,b.normalized)}else{const w=Ea(b.type,b.array);S=new Nt(w,b.itemSize,b.normalized)}b.name!==void 0&&(S.name=b.name),M.push(S)}o.morphAttributes[g]=M}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const m=e.data.groups||e.data.drawcalls||e.data.offsets;if(m!==void 0)for(let g=0,v=m.length;g!==v;++g){const M=m[g];o.addGroup(M.start,M.count,M.materialIndex)}const p=e.data.boundingSphere;if(p!==void 0){const g=new U;p.center!==void 0&&g.fromArray(p.center),o.boundingSphere=new wi(g,p.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class RL extends ti{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const c=new fr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+e+".",m.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new fr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),c=JSON.parse(o),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,o),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let m=!1;for(const p in o)if(o[p].data instanceof HTMLImageElement){m=!0;break}m===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,i,c,o,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Es().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=new Eu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new fx;for(let s=0,o=e.length;s<o;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in P_?c=P_[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Cu;s.setTextures(t);for(let o=0,c=e.length;o<c;o++){const u=e[o];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Jo.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(d)}else return u.data?{data:Ea(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Kd(t);s=new Ko(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const m=e[h],p=m.url;if(Array.isArray(p)){const g=[];for(let v=0,M=p.length;v<M;v++){const x=p[v],_=c(x);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Pa(_.data,_.width,_.height)))}i[m.uuid]=new ys(g)}else{const g=c(m.url);i[m.uuid]=new ys(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const c=o,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return o.data?{data:Ea(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Ko(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,c=e.length;o<c;o++){const u=e[o],h=u.url;if(Array.isArray(h)){const d=[];for(let m=0,p=h.length;m<p;m++){const g=h[m],v=await s(g);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new Pa(v.data,v.width,v.height)))}n[u.uuid]=new ys(d)}else{const d=await s(u.url);n[u.uuid]=new ys(d)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new rl,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Pa:d=new tn,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,CL)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],D_),d.wrapT=n(c.wrap[1],D_)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,N_)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,N_)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let o;function c(p){return t[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",p),t[p]}function u(p){if(p!==void 0){if(Array.isArray(p)){const g=[];for(let v=0,M=p.length;v<M;v++){const x=p[v];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),g.push(n[x])}return g}return n[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),n[p]}}function h(p){return i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",p),i[p]}let d,m;switch(e.type){case"Scene":o=new Tv,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ue(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Su(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Mu(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":o=new yn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new xu(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new lx(e.color,e.intensity);break;case"DirectionalLight":o=new ox(e.color,e.intensity);break;case"PointLight":o=new ax(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new cx(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new sx(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new rx(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Ru().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),m=u(e.material),o=new Pv(d,m),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),m=u(e.material),o=new gn(d,m);break;case"InstancedMesh":d=c(e.geometry),m=u(e.material);const p=e.count,g=e.instanceMatrix,v=e.instanceColor;o=new Lv(d,m,p),o.instanceMatrix=new Oa(new Float32Array(g.array),16),v!==void 0&&(o.instanceColor=new Oa(new Float32Array(v.array),v.itemSize));break;case"LOD":o=new Cv;break;case"Line":o=new Vr(c(e.geometry),u(e.material));break;case"LineLoop":o=new Iv(c(e.geometry),u(e.material));break;case"LineSegments":o=new ki(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":o=new Uv(c(e.geometry),u(e.material));break;case"Sprite":o=new Rv(u(e.material));break;case"Group":o=new Ta;break;case"Bone":o=new Od;break;default:o=new wt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const p=e.children;for(let g=0;g<p.length;g++)o.add(this.parseObject(p[g],t,n,i,s))}if(e.animations!==void 0){const p=e.animations;for(let g=0;g<p.length;g++){const v=p[g];o.animations.push(s[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const p=e.levels;for(let g=0;g<p.length;g++){const v=p[g],M=o.getObjectByProperty("uuid",v.object);M!==void 0&&o.addLevel(M,v.distance,v.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const CL={UVMapping:du,CubeReflectionMapping:Hr,CubeRefractionMapping:Gr,EquirectangularReflectionMapping:Uo,EquirectangularRefractionMapping:Do,CubeUVReflectionMapping:Ba},D_={RepeatWrapping:No,ClampToEdgeWrapping:wn,MirroredRepeatWrapping:Oo},N_={NearestFilter:Qt,NearestMipmapNearestFilter:lu,NearestMipmapLinearFilter:Ao,LinearFilter:en,LinearMipmapNearestFilter:_d,LinearMipmapLinearFilter:kr};class PL extends ti{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Ps.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){Ps.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Gc;class Qd{static getContext(){return Gc===void 0&&(Gc=new(window.AudioContext||window.webkitAudioContext)),Gc}static setContext(e){Gc=e}}class LL extends ti{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new fr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(u){try{const h=u.slice(0);Qd.getContext().decodeAudioData(h,function(m){t(m)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}class IL extends Ru{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Ue().set(e),s=new Ue().set(t),o=new U(i.r,i.g,i.b),c=new U(s.r,s.g,s.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(o).sub(c).multiplyScalar(h)}}class UL extends Ru{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Ue().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const O_=new st,F_=new st,us=new st;class DL{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new yn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new yn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,us.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(bs*t.fov*.5)/t.zoom;let c,u;F_.elements[12]=-i,O_.elements[12]=i,c=-o*t.aspect+s,u=o*t.aspect+s,us.elements[0]=2*t.near/(u-c),us.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(us),c=-o*t.aspect-s,u=o*t.aspect-s,us.elements[0]=2*t.near/(u-c),us.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(us)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(F_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(O_)}}class dx{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=B_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=B_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function B_(){return(typeof performance>"u"?Date:performance).now()}const hs=new U,z_=new Gn,NL=new U,fs=new U;class OL extends wt{constructor(){super(),this.type="AudioListener",this.context=Qd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new dx}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(hs,z_,NL),fs.set(0,0,-1).applyQuaternion(z_),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(hs.x,i),t.positionY.linearRampToValueAtTime(hs.y,i),t.positionZ.linearRampToValueAtTime(hs.z,i),t.forwardX.linearRampToValueAtTime(fs.x,i),t.forwardY.linearRampToValueAtTime(fs.y,i),t.forwardZ.linearRampToValueAtTime(fs.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(hs.x,hs.y,hs.z),t.setOrientation(fs.x,fs.y,fs.z,n.x,n.y,n.z)}}class px extends wt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ds=new U,H_=new Gn,FL=new U,ps=new U;class BL extends px{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ds,H_,FL),ps.set(0,0,1).applyQuaternion(H_);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ds.x,n),t.positionY.linearRampToValueAtTime(ds.y,n),t.positionZ.linearRampToValueAtTime(ds.z,n),t.orientationX.linearRampToValueAtTime(ps.x,n),t.orientationY.linearRampToValueAtTime(ps.y,n),t.orientationZ.linearRampToValueAtTime(ps.z,n)}else t.setPosition(ds.x,ds.y,ds.z),t.setOrientation(ps.x,ps.y,ps.z)}}class zL{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class mx{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let c=0;c!==i;++c)n[s+c]=n[c];o=t}else{o+=t;const c=t/o;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Gn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;Gn.multiplyQuaternionsFlat(e,o,e,t,e,n),Gn.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*o+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const c=t+o;e[c]=e[c]+e[n+o]*i}}}const jd="\\[\\]\\.:\\/",HL=new RegExp("["+jd+"]","g"),ep="[^"+jd+"]",GL="[^"+jd.replace("\\.","")+"]",kL=/((?:WC+[\/:])*)/.source.replace("WC",ep),VL=/(WCOD+)?/.source.replace("WCOD",GL),WL=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ep),XL=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ep),qL=new RegExp("^"+kL+VL+WL+XL+"$"),YL=["material","materials","bones","map"];class ZL{constructor(e,t,n){const i=n||Et.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Et{constructor(e,t,n){this.path=t,this.parsedPath=n||Et.parseTrackName(t),this.node=Et.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Et.Composite(e,t,n):new Et(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(HL,"")}static parseTrackName(e){const t=qL.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);YL.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const c=s[o];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Et.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Et.Composite=ZL;Et.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Et.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Et.prototype.GetterByBindingType=[Et.prototype._getValue_direct,Et.prototype._getValue_array,Et.prototype._getValue_arrayElement,Et.prototype._getValue_toArray];Et.prototype.SetterByBindingTypeAndVersioning=[[Et.prototype._setValue_direct,Et.prototype._setValue_direct_setNeedsUpdate,Et.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_array,Et.prototype._setValue_array_setNeedsUpdate,Et.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_arrayElement,Et.prototype._setValue_arrayElement_setNeedsUpdate,Et.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_fromArray,Et.prototype._setValue_fromArray_setNeedsUpdate,Et.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class JL{constructor(){this.isAnimationObjectGroup=!0,this.uuid=jn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,m=arguments.length;d!==m;++d){const p=arguments[d],g=p.uuid;let v=t[g];if(v===void 0){v=u++,t[g]=v,e.push(p);for(let M=0,x=o;M!==x;++M)s[M].push(new Et(p,n[M],i[M]))}else if(v<h){c=e[v];const M=--h,x=e[M];t[x.uuid]=v,e[v]=x,t[g]=M,e[M]=p;for(let _=0,b=o;_!==b;++_){const S=s[_],w=S[M];let P=S[v];S[v]=w,P===void 0&&(P=new Et(p,n[_],i[_])),S[M]=P}}else e[v]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,c=arguments.length;o!==c;++o){const u=arguments[o],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const m=s++,p=e[m];t[p.uuid]=d,e[d]=p,t[h]=m,e[m]=u;for(let g=0,v=i;g!==v;++g){const M=n[g],x=M[m],_=M[d];M[d]=x,M[m]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,m=t[d];if(m!==void 0)if(delete t[d],m<s){const p=--s,g=e[p],v=--o,M=e[v];t[g.uuid]=m,e[m]=g,t[M.uuid]=p,e[p]=M,e.pop();for(let x=0,_=i;x!==_;++x){const b=n[x],S=b[p],w=b[v];b[m]=S,b[p]=w,b.pop()}}else{const p=--o,g=e[p];p>0&&(t[g.uuid]=m),e[m]=g,e.pop();for(let v=0,M=i;v!==M;++v){const x=n[v];x[m]=x[p],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,m=new Array(h);i=s.length,n[e]=i,o.push(e),c.push(t),s.push(m);for(let p=d,g=u.length;p!==g;++p){const v=u[p];m[p]=new Et(v,e,t)}return m}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,c=o.length-1,u=o[c],h=e[c];t[h]=n,o[n]=u,o.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class gx{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,c=new Array(o),u={endingStart:vs,endingEnd:vs};for(let h=0;h!==o;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=J0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,c=i/s;e.warp(1,o,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const o=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Ed:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(o),h[d].accumulateAdditive(c);break;case mu:default:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(o),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===K0;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===Z0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=xs,i.endingEnd=xs):(e?i.endingStart=this.zeroSlopeAtStart?xs:vs:i.endingStart=zo,t?i.endingEnd=this.zeroSlopeAtEnd?xs:vs:i.endingEnd=zo)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const c=o.parameterPositions,u=o.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const KL=new Float32Array(1);class $L extends dr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let m=0;m!==s;++m){const p=i[m],g=p.name;let v=d[g];if(v!==void 0)++v.referenceCount,o[m]=v;else{if(v=o[m],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,u,g));continue}const M=t&&t._propertyBindings[m].binding.parsedPath;v=new mx(Et.create(n,g,M),p.ValueTypeName,p.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,u,g),o[m]=v}c[m].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const c=o.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,c=o[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const m=c.actionByRoot,p=(e._localRoot||this._root).uuid;delete m[p],u.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,c=o[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Zd(new Float32Array(2),new Float32Array(2),1,KL),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?Jo.findByName(i,e):e;const c=o!==null?o.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=mu),u!==void 0){const m=u.actionByRoot[s];if(m!==void 0&&m.blendMode===n)return m;h=u.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const d=new gx(this,o,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Jo.findByName(n,e):e,o=s?s.uuid:e,c=this._actionsByClip[o];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let c=0,u=o.length;c!==u;++c){const h=o[c];this._deactivateAction(h);const d=h._cacheIndex,m=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,m._cacheIndex=d,t[d]=m,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const c=n[o].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const c=s[o];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class tp{constructor(e){this.value=e}clone(){return new tp(this.value.clone===void 0?this.value:this.value.clone())}}let QL=0;class jL extends dr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:QL++}),this.name="",this.usage=Ho,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class eI extends bu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class tI{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class nI{constructor(e,t,n=0,i=1/0){this.ray=new za(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new _u,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return fd(e,this,n,t),n.sort(G_),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)fd(e[i],this,n,t);return n.sort(G_),n}}function G_(r,e){return r.distance-e.distance}function fd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)fd(i[s],e,t,!0)}}class iI{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Zt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class rI{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const k_=new ue;class sI{constructor(e=new ue(1/0,1/0),t=new ue(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=k_.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,k_).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const V_=new U,kc=new U;class aI{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){V_.subVectors(e,this.start),kc.subVectors(this.end,this.start);const n=kc.dot(kc);let s=kc.dot(V_)/n;return t&&(s=Zt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const W_=new U;class oI extends wt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new vt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,c=1,u=32;o<u;o++,c++){const h=o/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Ge(i,3));const s=new Un({fog:!1,toneMapped:!1});this.cone=new ki(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),W_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(W_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Cr=new U,Vc=new st,Sf=new st;class lI extends ki{constructor(e){const t=_x(e),n=new vt,i=[],s=[],o=new Ue(0,0,1),c=new Ue(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Ge(i,3)),n.setAttribute("color",new Ge(s,3));const u=new Un({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Sf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Vc.multiplyMatrices(Sf,c.matrixWorld),Cr.setFromMatrixPosition(Vc),i.setXYZ(o,Cr.x,Cr.y,Cr.z),Vc.multiplyMatrices(Sf,c.parent.matrixWorld),Cr.setFromMatrixPosition(Vc),i.setXYZ(o+1,Cr.x,Cr.y,Cr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function _x(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,_x(r.children[t]));return e}class cI extends gn{constructor(e,t,n){const i=new Va(t,4,2),s=new Zr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const uI=new U,X_=new Ue,q_=new Ue;class hI extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new ka(t);i.rotateY(Math.PI*.5),this.material=new Zr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new Nt(o,3)),this.add(new gn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");X_.copy(this.light.color),q_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?X_:q_;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(uI.setFromMatrixPosition(this.light.matrixWorld).negate())}}class fI extends ki{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ue(n),i=new Ue(i);const s=t/2,o=e/t,c=e/2,u=[],h=[];for(let p=0,g=0,v=-c;p<=t;p++,v+=o){u.push(-c,0,v,c,0,v),u.push(v,0,-c,v,0,c);const M=p===s?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const d=new vt;d.setAttribute("position",new Ge(u,3)),d.setAttribute("color",new Ge(h,3));const m=new Un({vertexColors:!0,toneMapped:!1});super(d,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class dI extends ki{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new Ue(s),o=new Ue(o);const c=[],u=[];if(t>1)for(let m=0;m<t;m++){const p=m/t*(Math.PI*2),g=Math.sin(p)*e,v=Math.cos(p)*e;c.push(0,0,0),c.push(g,0,v);const M=m&1?s:o;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let m=0;m<n;m++){const p=m&1?s:o,g=e-e/n*m;for(let v=0;v<i;v++){let M=v/i*(Math.PI*2),x=Math.sin(M)*g,_=Math.cos(M)*g;c.push(x,0,_),u.push(p.r,p.g,p.b),M=(v+1)/i*(Math.PI*2),x=Math.sin(M)*g,_=Math.cos(M)*g,c.push(x,0,_),u.push(p.r,p.g,p.b)}}const h=new vt;h.setAttribute("position",new Ge(c,3)),h.setAttribute("color",new Ge(u,3));const d=new Un({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Y_=new U,Wc=new U,Z_=new U;class pI extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new vt;i.setAttribute("position",new Ge([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Un({fog:!1,toneMapped:!1});this.lightPlane=new Vr(i,s),this.add(this.lightPlane),i=new vt,i.setAttribute("position",new Ge([0,0,0,0,0,1],3)),this.targetLine=new Vr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Y_.setFromMatrixPosition(this.light.matrixWorld),Wc.setFromMatrixPosition(this.light.target.matrixWorld),Z_.subVectors(Wc,Y_),this.lightPlane.lookAt(Wc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Wc),this.targetLine.scale.z=Z_.length()}}const Xc=new U,Yt=new il;class mI extends ki{constructor(e){const t=new vt,n=new Un({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(v,M){u(v),u(M)}function u(v){i.push(0,0,0),s.push(0,0,0),o[v]===void 0&&(o[v]=[]),o[v].push(i.length/3-1)}t.setAttribute("position",new Ge(i,3)),t.setAttribute("color",new Ge(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Ue(16755200),d=new Ue(16711680),m=new Ue(43775),p=new Ue(16777215),g=new Ue(3355443);this.setColors(h,d,m,p,g)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Yt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),$t("c",t,e,Yt,0,0,-1),$t("t",t,e,Yt,0,0,1),$t("n1",t,e,Yt,-n,-i,-1),$t("n2",t,e,Yt,n,-i,-1),$t("n3",t,e,Yt,-n,i,-1),$t("n4",t,e,Yt,n,i,-1),$t("f1",t,e,Yt,-n,-i,1),$t("f2",t,e,Yt,n,-i,1),$t("f3",t,e,Yt,-n,i,1),$t("f4",t,e,Yt,n,i,1),$t("u1",t,e,Yt,n*.7,i*1.1,-1),$t("u2",t,e,Yt,-n*.7,i*1.1,-1),$t("u3",t,e,Yt,0,i*2,-1),$t("cf1",t,e,Yt,-n,0,1),$t("cf2",t,e,Yt,n,0,1),$t("cf3",t,e,Yt,0,-i,1),$t("cf4",t,e,Yt,0,i,1),$t("cn1",t,e,Yt,-n,0,-1),$t("cn2",t,e,Yt,n,0,-1),$t("cn3",t,e,Yt,0,-i,-1),$t("cn4",t,e,Yt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function $t(r,e,t,n,i,s,o){Xc.set(i,s,o).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],Xc.x,Xc.y,Xc.z)}}const qc=new Gi;class gI extends ki{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new vt;s.setIndex(new Nt(n,1)),s.setAttribute("position",new Nt(i,3)),super(s,new Un({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&qc.setFromObject(this.object),qc.isEmpty())return;const t=qc.min,n=qc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class _I extends ki{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new vt;s.setIndex(new Nt(n,1)),s.setAttribute("position",new Ge(i,3)),super(s,new Un({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class vI extends Vr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new vt;o.setAttribute("position",new Ge(s,3)),o.computeBoundingSphere(),super(o,new Un({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new vt;u.setAttribute("position",new Ge(c,3)),u.computeBoundingSphere(),this.add(new gn(u,new Zr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const J_=new U;let Yc,bf;class xI extends wt{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Yc===void 0&&(Yc=new vt,Yc.setAttribute("position",new Ge([0,0,0,0,1,0],3)),bf=new Us(0,.5,1,5,1),bf.translate(0,-.5,0)),this.position.copy(t),this.line=new Vr(Yc,new Un({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new gn(bf,new Zr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{J_.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(J_,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class yI extends ki{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new vt;i.setAttribute("position",new Ge(t,3)),i.setAttribute("color",new Ge(n,3));const s=new Un({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ue,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class MI{constructor(){this.type="ShapePath",this.color=new Ue,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Vo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const b=[];for(let S=0,w=_.length;S<w;S++){const P=_[S],R=new Es;R.curves=P.curves,b.push(R)}return b}function n(_,b){const S=b.length;let w=!1;for(let P=S-1,R=0;R<S;P=R++){let N=b[P],B=b[R],T=B.x-N.x,D=B.y-N.y;if(Math.abs(D)>Number.EPSILON){if(D<0&&(N=b[R],T=-T,B=b[P],D=-D),_.y<N.y||_.y>B.y)continue;if(_.y===N.y){if(_.x===N.x)return!0}else{const J=D*(_.x-N.x)-T*(_.y-N.y);if(J===0)return!0;if(J<0)continue;w=!w}}else{if(_.y!==N.y)continue;if(B.x<=_.x&&_.x<=N.x||N.x<=_.x&&_.x<=B.x)return!0}}return w}const i=zi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,c,u;const h=[];if(s.length===1)return c=s[0],u=new Es,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const m=[],p=[];let g=[],v=0,M;p[v]=void 0,g[v]=[];for(let _=0,b=s.length;_<b;_++)c=s[_],M=c.getPoints(),o=i(M),o=e?!o:o,o?(!d&&p[v]&&v++,p[v]={s:new Es,p:M},p[v].s.curves=c.curves,d&&v++,g[v]=[]):g[v].push({h:c,p:M[0]});if(!p[0])return t(s);if(p.length>1){let _=!1,b=0;for(let S=0,w=p.length;S<w;S++)m[S]=[];for(let S=0,w=p.length;S<w;S++){const P=g[S];for(let R=0;R<P.length;R++){const N=P[R];let B=!0;for(let T=0;T<p.length;T++)n(N.p,p[T].p)&&(S!==T&&b++,B?(B=!1,m[T].push(N)):_=!0);B&&m[S].push(N)}}b>0&&_===!1&&(g=m)}let x;for(let _=0,b=p.length;_<b;_++){u=p[_].s,h.push(u),x=g[_];for(let S=0,w=x.length;S<w;S++)u.holes.push(x[S].h)}return h}}class SI extends Jr{constructor(e,t,n,i,s,o){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,o)}}class bI extends sl{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class EI extends al{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class wI extends ol{constructor(e,t,n,i,s,o,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,o,c)}}class TI extends Us{constructor(e,t,n,i,s,o,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,o,c,u)}}class AI extends ll{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class RI extends cl{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class CI extends ul{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class PI extends Ga{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class LI extends ka{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class II extends Is{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class UI extends pr{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class DI extends hl{constructor(e,t,n,i,s,o){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,o)}}class NI extends fl{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class OI extends Va{constructor(e,t,n,i,s,o,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,o,c)}}class FI extends dl{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class BI extends pl{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class zI extends ml{constructor(e,t,n,i,s,o){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,o)}}class HI extends gl{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:fu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=fu);const GI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:F0,AddEquation:gs,AddOperation:U0,AdditiveAnimationBlendMode:Ed,AdditiveBlending:Cf,AlphaFormat:G0,AlwaysCompare:lv,AlwaysDepth:T0,AlwaysStencilFunc:ev,AmbientLight:lx,AmbientLightProbe:UL,AnimationAction:gx,AnimationClip:Jo,AnimationLoader:yL,AnimationMixer:$L,AnimationObjectGroup:JL,AnimationUtils:gL,ArcCurve:Dv,ArrayCamera:Sv,ArrowHelper:xI,Audio:px,AudioAnalyser:zL,AudioContext:Qd,AudioListener:OL,AudioLoader:LL,AxesHelper:yI,BackSide:In,BasicDepthPacking:$0,BasicShadowMap:Ow,Bone:Od,BooleanKeyframeTrack:Ds,Box2:sI,Box3:Gi,Box3Helper:_I,BoxBufferGeometry:SI,BoxGeometry:Jr,BoxHelper:gI,BufferAttribute:Nt,BufferGeometry:vt,BufferGeometryLoader:fx,ByteType:z0,Cache:Ps,Camera:il,CameraHelper:mI,CanvasTexture:H2,CapsuleBufferGeometry:bI,CapsuleGeometry:sl,CatmullRomCurve3:Nv,CineonToneMapping:O0,CircleBufferGeometry:EI,CircleGeometry:al,ClampToEdgeWrapping:wn,Clock:dx,Color:Ue,ColorKeyframeTrack:Jd,ColorManagement:di,CompressedArrayTexture:z2,CompressedTexture:Bd,CompressedTextureLoader:ML,ConeBufferGeometry:wI,ConeGeometry:ol,CubeCamera:pv,CubeReflectionMapping:Hr,CubeRefractionMapping:Gr,CubeTexture:rl,CubeTextureLoader:SL,CubeUVReflectionMapping:Ba,CubicBezierCurve:Hd,CubicBezierCurve3:Ov,CubicInterpolant:ex,CullFaceBack:Rf,CullFaceFront:h0,CullFaceFrontBack:Nw,CullFaceNone:u0,Curve:Ti,CurvePath:Bv,CustomBlending:d0,CustomToneMapping:B0,CylinderBufferGeometry:TI,CylinderGeometry:Us,Cylindrical:rI,Data3DTexture:Cd,DataArrayTexture:gu,DataTexture:Pa,DataTextureLoader:bL,DataUtils:JT,DecrementStencilOp:Zw,DecrementWrapStencilOp:Kw,DefaultLoadingManager:ix,DepthFormat:Or,DepthStencilFormat:As,DepthTexture:bv,DirectionalLight:ox,DirectionalLightHelper:pI,DiscreteInterpolant:tx,DisplayP3ColorSpace:Td,DodecahedronBufferGeometry:AI,DodecahedronGeometry:ll,DoubleSide:Ui,DstAlphaFactor:y0,DstColorFactor:S0,DynamicCopyUsage:hT,DynamicDrawUsage:sT,DynamicReadUsage:lT,EdgesGeometry:zv,EllipseCurve:wu,EqualCompare:iv,EqualDepth:R0,EqualStencilFunc:eT,EquirectangularReflectionMapping:Uo,EquirectangularRefractionMapping:Do,Euler:nl,EventDispatcher:dr,ExtrudeBufferGeometry:RI,ExtrudeGeometry:cl,FileLoader:fr,Float16BufferAttribute:tA,Float32BufferAttribute:Ge,Float64BufferAttribute:nA,FloatType:Di,Fog:Su,FogExp2:Mu,FramebufferTexture:B2,FrontSide:hr,Frustum:vu,GLBufferAttribute:tI,GLSL1:dT,GLSL3:id,GreaterCompare:sv,GreaterDepth:P0,GreaterEqualCompare:ov,GreaterEqualDepth:C0,GreaterEqualStencilFunc:rT,GreaterStencilFunc:nT,GridHelper:fI,Group:Ta,HalfFloatType:Ua,HemisphereLight:rx,HemisphereLightHelper:hI,HemisphereLightProbe:IL,IcosahedronBufferGeometry:CI,IcosahedronGeometry:ul,ImageBitmapLoader:PL,ImageLoader:Ko,ImageUtils:Rd,IncrementStencilOp:Yw,IncrementWrapStencilOp:Jw,InstancedBufferAttribute:Oa,InstancedBufferGeometry:hx,InstancedInterleavedBuffer:eI,InstancedMesh:Lv,Int16BufferAttribute:jT,Int32BufferAttribute:eA,Int8BufferAttribute:KT,IntType:vd,InterleavedBuffer:bu,InterleavedBufferAttribute:Rs,Interpolant:_l,InterpolateDiscrete:Fo,InterpolateLinear:Bo,InterpolateSmooth:jc,InvertStencilOp:$w,KeepStencilOp:eu,KeyframeTrack:Ai,LOD:Cv,LatheBufferGeometry:PI,LatheGeometry:Ga,Layers:_u,LessCompare:nv,LessDepth:A0,LessEqualCompare:rv,LessEqualDepth:ou,LessEqualStencilFunc:tT,LessStencilFunc:jw,Light:Kr,LightProbe:Ru,Line:Vr,Line3:aI,LineBasicMaterial:Un,LineCurve:Tu,LineCurve3:Fv,LineDashedMaterial:Qv,LineLoop:Iv,LineSegments:ki,LinearEncoding:wd,LinearFilter:en,LinearInterpolant:Zd,LinearMipMapLinearFilter:Gw,LinearMipMapNearestFilter:Hw,LinearMipmapLinearFilter:kr,LinearMipmapNearestFilter:_d,LinearSRGBColorSpace:bi,LinearToneMapping:D0,Loader:ti,LoaderUtils:hd,LoadingManager:Kd,LoopOnce:Z0,LoopPingPong:K0,LoopRepeat:J0,LuminanceAlphaFormat:V0,LuminanceFormat:k0,MOUSE:Uw,Material:Tn,MaterialLoader:Cu,MathUtils:AT,Matrix3:pt,Matrix4:st,MaxEquation:Uf,Mesh:gn,MeshBasicMaterial:Zr,MeshDepthMaterial:Ud,MeshDistanceMaterial:Dd,MeshLambertMaterial:Kv,MeshMatcapMaterial:$v,MeshNormalMaterial:Jv,MeshPhongMaterial:Yv,MeshPhysicalMaterial:qv,MeshStandardMaterial:Xd,MeshToonMaterial:Zv,MinEquation:If,MirroredRepeatWrapping:Oo,MixOperation:I0,MultiplyBlending:Lf,MultiplyOperation:tl,NearestFilter:Qt,NearestMipMapLinearFilter:zw,NearestMipMapNearestFilter:Bw,NearestMipmapLinearFilter:Ao,NearestMipmapNearestFilter:lu,NeverCompare:tv,NeverDepth:w0,NeverStencilFunc:Qw,NoBlending:cr,NoColorSpace:Br,NoToneMapping:Bi,NormalAnimationBlendMode:mu,NormalBlending:Ss,NotEqualCompare:av,NotEqualDepth:L0,NotEqualStencilFunc:iT,NumberKeyframeTrack:Yo,Object3D:wt,ObjectLoader:RL,ObjectSpaceNormalMap:j0,OctahedronBufferGeometry:LI,OctahedronGeometry:ka,OneFactor:_0,OneMinusDstAlphaFactor:M0,OneMinusDstColorFactor:b0,OneMinusSrcAlphaFactor:gd,OneMinusSrcColorFactor:x0,OrthographicCamera:xu,PCFShadowMap:pd,PCFSoftShadowMap:f0,PMREMGenerator:sd,Path:Vo,PerspectiveCamera:yn,Plane:Pr,PlaneBufferGeometry:II,PlaneGeometry:Is,PlaneHelper:vI,PointLight:ax,PointLightHelper:cI,Points:Uv,PointsMaterial:Fd,PolarGridHelper:dI,PolyhedronBufferGeometry:UI,PolyhedronGeometry:pr,PositionalAudio:BL,PropertyBinding:Et,PropertyMixer:mx,QuadraticBezierCurve:Gd,QuadraticBezierCurve3:kd,Quaternion:Gn,QuaternionKeyframeTrack:Wa,QuaternionLinearInterpolant:nx,RED_GREEN_RGTC2_Format:td,RED_RGTC1_Format:Y0,REVISION:fu,RGBADepthPacking:Q0,RGBAFormat:$n,RGBAIntegerFormat:bd,RGBA_ASTC_10x10_Format:$f,RGBA_ASTC_10x5_Format:Zf,RGBA_ASTC_10x6_Format:Jf,RGBA_ASTC_10x8_Format:Kf,RGBA_ASTC_12x10_Format:Qf,RGBA_ASTC_12x12_Format:jf,RGBA_ASTC_4x4_Format:Hf,RGBA_ASTC_5x4_Format:Gf,RGBA_ASTC_5x5_Format:kf,RGBA_ASTC_6x5_Format:Vf,RGBA_ASTC_6x6_Format:Wf,RGBA_ASTC_8x5_Format:Xf,RGBA_ASTC_8x6_Format:qf,RGBA_ASTC_8x8_Format:Yf,RGBA_BPTC_Format:Qc,RGBA_ETC2_EAC_Format:zf,RGBA_PVRTC_2BPPV1_Format:Ff,RGBA_PVRTC_4BPPV1_Format:Of,RGBA_S3TC_DXT1_Format:Jc,RGBA_S3TC_DXT3_Format:Kc,RGBA_S3TC_DXT5_Format:$c,RGB_ETC1_Format:q0,RGB_ETC2_Format:Bf,RGB_PVRTC_2BPPV1_Format:Nf,RGB_PVRTC_4BPPV1_Format:Df,RGB_S3TC_DXT1_Format:Zc,RGFormat:X0,RGIntegerFormat:Sd,RawShaderMaterial:Xv,Ray:za,Raycaster:nI,RectAreaLight:cx,RedFormat:W0,RedIntegerFormat:Md,ReinhardToneMapping:N0,RepeatWrapping:No,ReplaceStencilOp:qw,ReverseSubtractEquation:m0,RingBufferGeometry:DI,RingGeometry:hl,SIGNED_RED_GREEN_RGTC2_Format:nd,SIGNED_RED_RGTC1_Format:ed,SRGBColorSpace:ct,Scene:Tv,ShaderChunk:dt,ShaderLib:Si,ShaderMaterial:Hi,ShadowMaterial:Wv,Shape:Es,ShapeBufferGeometry:NI,ShapeGeometry:fl,ShapePath:MI,ShapeUtils:zi,ShortType:H0,Skeleton:Eu,SkeletonHelper:lI,SkinnedMesh:Pv,Source:ys,Sphere:wi,SphereBufferGeometry:OI,SphereGeometry:Va,Spherical:iI,SphericalHarmonics3:ux,SplineCurve:Vd,SpotLight:sx,SpotLightHelper:oI,Sprite:Rv,SpriteMaterial:Nd,SrcAlphaFactor:md,SrcAlphaSaturateFactor:E0,SrcColorFactor:v0,StaticCopyUsage:uT,StaticDrawUsage:Ho,StaticReadUsage:oT,StereoCamera:DL,StreamCopyUsage:fT,StreamDrawUsage:aT,StreamReadUsage:cT,StringKeyframeTrack:Ns,SubtractEquation:p0,SubtractiveBlending:Pf,TOUCH:Dw,TangentSpaceNormalMap:Yr,TetrahedronBufferGeometry:FI,TetrahedronGeometry:dl,Texture:tn,TextureLoader:EL,TorusBufferGeometry:BI,TorusGeometry:pl,TorusKnotBufferGeometry:zI,TorusKnotGeometry:ml,Triangle:Hn,TriangleFanDrawMode:Ww,TriangleStripDrawMode:Vw,TrianglesDrawMode:kw,TubeBufferGeometry:HI,TubeGeometry:gl,TwoPassDoubleSide:Fw,UVMapping:du,Uint16BufferAttribute:Pd,Uint32BufferAttribute:Ld,Uint8BufferAttribute:$T,Uint8ClampedBufferAttribute:QT,Uniform:tp,UniformsGroup:jL,UniformsLib:Te,UniformsUtils:dv,UnsignedByteType:ur,UnsignedInt248Type:Nr,UnsignedIntType:lr,UnsignedShort4444Type:xd,UnsignedShort5551Type:yd,UnsignedShortType:pu,VSMShadowMap:Ii,Vector2:ue,Vector3:U,Vector4:Pt,VectorKeyframeTrack:Zo,VideoTexture:F2,WebGL1Renderer:wv,WebGL3DRenderTarget:BT,WebGLArrayRenderTarget:FT,WebGLCoordinateSystem:Ni,WebGLCubeRenderTarget:mv,WebGLMultipleRenderTargets:zT,WebGLRenderTarget:Ei,WebGLRenderer:Ev,WebGLUtils:Mv,WebGPUCoordinateSystem:Go,WireframeGeometry:Vv,WrapAroundEnding:zo,ZeroCurvatureEnding:vs,ZeroFactor:g0,ZeroSlopeEnding:xs,ZeroStencilOp:Xw,_SRGBAFormat:cu,sRGBEncoding:Fr},Symbol.toStringTag,{value:"Module"})),vx={duration:1500,easing:Iw},vl=ei(!1),VU=Aw(vl,(r,e)=>{r==!0?setTimeout(()=>e(r),1500):e(r)}),xx=ei(""),kI=ei(0),ws=ei(new il),VI=[0,10,70],yx=[0,0,0],np=ei([0,0,0]),Fa=c0(VI,vx),WI=ei(0),ip=c0(yx,vx),Ls=ei(!1),WU=(r,e)=>{Ls.set(!0);const t=new U(0,10,70).applyAxisAngle(new U(0,1,0),Math.atan2(r[0],r[2]));np.set([t.x,t.y,t.z]),Fa.set([Lr(ws).position.x,Lr(ws).position.y,Lr(ws).position.z],{duration:0}),Fa.set([r[0]*1.3,r[1]+1,r[2]*1.3]).then(()=>{Ls.set(!1)}),WI.set(r[1]+1),ip.set([r[0],r[1]+1,r[2]]),vl.set(!0),kI.set(r[1]-(e*2+1))},XU=()=>{Ls.set(!0);const r=Lr(ws),e=new U(0,10,70).applyAxisAngle(new U(0,1,0),Math.atan2(r.position.x,r.position.z)),t=new U(0,2,14).applyAxisAngle(new U(0,1,0),Math.atan2(r.position.x,r.position.z));np.set([e.x,e.y,e.z]),ip.set([0,1,0]),Fa.set([r.position.x,r.position.y,r.position.z],{duration:0}),Fa.set([t.x,t.y,t.z]).then(()=>{Ls.set(!1)}),vl.set(!0),xx.set("Sun")},XI=()=>{Ls.set(!0),Fa.set([Lr(ws).position.x,Lr(ws).position.y,Lr(ws).position.z],{duration:0}),Fa.set(Lr(np)).then(()=>{Ls.set(!1)}),ip.set(yx),vl.set(!1),xx.set("")},qU=r=>{const e=[];for(let t=0;t<r.n;t++)e[t]=[r.radius*Math.cos((t+1)*2*Math.PI/r.n),Math.floor(Math.random()*(r.yMax-r.yMin+1)+r.yMin),r.radius*Math.sin((t+1)*2*Math.PI/r.n)];return e},qI=r=>{const e=[];for(let t=0;t<r;t++)t%2===0?e.push([-3.2,-3.3-t*2,0]):e.push([-.7,-3.3-t*2,0]);return e},YU=qI(13),ZU=(r,e)=>{const t=r.slice(1).match(/.{2}/g);if(t==null)throw new Error("Invalid hex color code");let[n,i,s]=t.map(o=>parseInt(o,16));return n=Math.min(255,n+e),i=Math.min(255,i+e),s=Math.min(255,s+e),`#${n.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}`},JU=r=>{const e=r.naturalWidth,t=r.naturalHeight,n=e/t;return new Is(n,1)};function K_(r){let e,t='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" class="w-4 h-4"><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"></path></svg>',n,i;return{c(){e=wf("button"),e.innerHTML=t,this.h()},l(s){e=Tf(s,"BUTTON",{class:!0,["data-svelte-h"]:!0}),n0(e)!=="svelte-4hp8hf"&&(e.innerHTML=t),this.h()},h(){sn(e,"class","fixed top-7 left-10 rounded-full p-2 ring ring-white z-30")},m(s,o){Kn(s,e,o),n||(i=i0(e,"click",XI),n=!0)},p:Oi,d(s){s&&mn(e),n=!1,i()}}}function YI(r){let e,t=r[0]&&!r[1]&&K_();return{c(){t&&t.c(),e=La()},l(n){t&&t.l(n),e=La()},m(n,i){t&&t.m(n,i),Kn(n,e,i)},p(n,[i]){n[0]&&!n[1]?t?t.p(n,i):(t=K_(),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},i:Oi,o:Oi,d(n){n&&mn(e),t&&t.d(n)}}}function ZI(r,e,t){let n,i;return Ia(r,vl,s=>t(0,n=s)),Ia(r,Ls,s=>t(1,i=s)),[n,i]}class JI extends Xr{constructor(e){super(),qr(this,e,ZI,YI,Wr,{})}}function KI(r){let e,t;return{c(){e=iu("svg"),t=iu("path"),this.h()},l(n){e=ru(n,"svg",{xmlns:!0,fill:!0,viewBox:!0,"stroke-width":!0,stroke:!0,class:!0});var i=Io(e);t=ru(i,"path",{"stroke-linecap":!0,"stroke-linejoin":!0,d:!0}),Io(t).forEach(mn),i.forEach(mn),this.h()},h(){sn(t,"stroke-linecap","round"),sn(t,"stroke-linejoin","round"),sn(t,"d","M19.114 5.636a9 9 0 010 12.728M16.463 8.288a5.25 5.25 0 010 7.424M6.75 8.25l4.72-4.72a.75.75 0 011.28.53v15.88a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.507-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.396C2.806 8.756 3.63 8.25 4.51 8.25H6.75z"),sn(e,"xmlns","http://www.w3.org/2000/svg"),sn(e,"fill","none"),sn(e,"viewBox","0 0 24 24"),sn(e,"stroke-width","1.5"),sn(e,"stroke","currentColor"),sn(e,"class","w-5 h-5")},m(n,i){Kn(n,e,i),r0(e,t)},p:Oi,i:Oi,o:Oi,d(n){n&&mn(e)}}}class $I extends Xr{constructor(e){super(),qr(this,e,null,KI,Wr,{})}}function QI(r){let e,t;return{c(){e=iu("svg"),t=iu("path"),this.h()},l(n){e=ru(n,"svg",{xmlns:!0,fill:!0,viewBox:!0,"stroke-width":!0,stroke:!0,class:!0});var i=Io(e);t=ru(i,"path",{"stroke-linecap":!0,"stroke-linejoin":!0,d:!0}),Io(t).forEach(mn),i.forEach(mn),this.h()},h(){sn(t,"stroke-linecap","round"),sn(t,"stroke-linejoin","round"),sn(t,"d","M17.25 9.75L19.5 12m0 0l2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6l4.72-4.72a.75.75 0 011.28.531V19.94a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.506-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.395C2.806 8.757 3.63 8.25 4.51 8.25H6.75z"),sn(e,"xmlns","http://www.w3.org/2000/svg"),sn(e,"fill","none"),sn(e,"viewBox","0 0 24 24"),sn(e,"stroke-width","1.5"),sn(e,"stroke","currentColor"),sn(e,"class","w-5 h-5")},m(n,i){Kn(n,e,i),r0(e,t)},p:Oi,i:Oi,o:Oi,d(n){n&&mn(e)}}}class jI extends Xr{constructor(e){super(),qr(this,e,null,QI,Wr,{})}}const eU=()=>zr("threlte-internal-context");function tU(r){let e;const t=r[9].default,n=$o(t,r,r[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&256)&&Qo(n,t,i,i[8],e?el(t,i[8],s,null):jo(i[8]),null)},i(i){e||(jt(n,i),e=!0)},o(i){an(n,i),e=!1},d(i){n&&n.d(i)}}}const $_="threlte-disposable-object-context";function nU(r,e,t){let n,i,{$$slots:s={},$$scope:o}=e;const{collectDisposableObjects:c,addDisposableObjects:u,removeDisposableObjects:h}=eU();let{object:d=void 0}=e,m=d,{dispose:p=void 0}=e;const g=zr($_);Ia(r,g,x=>t(7,i=x));const v=ei(p??i??!0);Ia(r,v,x=>t(6,n=x)),To($_,v);let M=n?c(d):[];return u(M),Fi(()=>{h(M)}),r.$$set=x=>{"object"in x&&t(2,d=x.object),"dispose"in x&&t(3,p=x.dispose),"$$scope"in x&&t(8,o=x.$$scope)},r.$$.update=()=>{r.$$.dirty&136&&v.set(p??i??!0),r.$$.dirty&116&&d!==m&&(h(M),t(5,M=n?c(d):[]),u(M),t(4,m=d))},[g,v,d,p,m,M,n,i,o,s]}class iU extends Xr{constructor(e){super(),qr(this,e,nU,tU,Wr,{object:2,dispose:3})}}function rU(r,e){const t=ei(r);let n=r;const i=t.subscribe(c=>n=c);return Fi(i),{...t,set:c=>{if(c?.uuid===n?.uuid)return;const u=n;t.set(c),e?.(c,u)},update:c=>{const u=c(n);if(u?.uuid===n?.uuid)return;const h=n;t.set(u),e?.(u,h)}}}const Pu=()=>zr("threlte"),sU=()=>zr("threlte-hierarchical-parent-context");function aU(r){let e;const t=r[8].default,n=$o(t,r,r[7],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&128)&&Qo(n,t,i,i[7],e?el(t,i[7],s,null):jo(i[7]),null)},i(i){e||(jt(n,i),e=!0)},o(i){an(n,i),e=!1},d(i){n&&n.d(i)}}}const oU=()=>({onChildMount:zr("threlte-hierarchical-object-on-mount"),onChildDestroy:zr("threlte-hierarchical-object-on-destroy")});function lU(r,e,t){let n,{$$slots:i={},$$scope:s}=e,{object:o=void 0}=e,{children:c=[]}=e,{onChildMount:u=void 0}=e;const h=_=>{c.push(_),t(1,c),u?.(_)};let{onChildDestroy:d=void 0}=e;const m=_=>{const b=c.findIndex(S=>S.uuid===_.uuid);b!==-1&&c.splice(b,1),t(1,c),d?.(_)},{invalidate:p}=Pu(),g=sU();Ia(r,g,_=>t(6,n=_));let{parent:v=n}=e;const M=oU();o&&(M.onChildMount?.(o),p("HierarchicalObject: object added"));const x=rU(o,(_,b)=>{b&&(M.onChildDestroy?.(b),p("HierarchicalObject: object added")),_&&(M.onChildMount?.(_),p("HierarchicalObject: object removed"))});return Fi(()=>{o&&(M.onChildDestroy?.(o),p("HierarchicalObject: object removed"))}),To("threlte-hierarchical-object-on-mount",h),To("threlte-hierarchical-object-on-destroy",m),To("threlte-hierarchical-parent-context",x),r.$$set=_=>{"object"in _&&t(3,o=_.object),"children"in _&&t(1,c=_.children),"onChildMount"in _&&t(4,u=_.onChildMount),"onChildDestroy"in _&&t(5,d=_.onChildDestroy),"parent"in _&&t(2,v=_.parent),"$$scope"in _&&t(7,s=_.$$scope)},r.$$.update=()=>{r.$$.dirty&64&&t(2,v=n),r.$$.dirty&8&&x.set(o)},[g,c,v,o,u,d,n,s,i]}class cU extends Xr{constructor(e){super(),qr(this,e,lU,aU,Wr,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function uU(r){let e;const t=r[1].default,n=$o(t,r,r[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&16)&&Qo(n,t,i,i[4],e?el(t,i[4],s,null):jo(i[4]),null)},i(i){e||(jt(n,i),e=!0)},o(i){an(n,i),e=!1},d(i){n&&n.d(i)}}}function hU(r){let e,t;return e=new cU({props:{object:r[0],onChildMount:r[2],onChildDestroy:r[3],$$slots:{default:[uU]},$$scope:{ctx:r}}}),{c(){Ir(e.$$.fragment)},l(n){Ts(e.$$.fragment,n)},m(n,i){Ur(e,n,i),t=!0},p(n,[i]){const s={};i&1&&(s.object=n[0]),i&1&&(s.onChildMount=n[2]),i&1&&(s.onChildDestroy=n[3]),i&16&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(jt(e.$$.fragment,n),t=!0)},o(n){an(e.$$.fragment,n),t=!1},d(n){Dr(e,n)}}}function fU(r,e,t){let{$$slots:n={},$$scope:i}=e,{object:s}=e;const o=u=>s.add(u),c=u=>s.remove(u);return r.$$set=u=>{"object"in u&&t(0,s=u.object),"$$scope"in u&&t(4,i=u.$$scope)},[s,n,o,c,i]}class dU extends Xr{constructor(e){super(),qr(this,e,fU,hU,Wr,{object:0})}}const Mx=(r,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)r=r[t[i]];return{target:r,key:n}}else return{target:r,key:e}},Ef=Symbol("initialValueBeforeAttach"),pU=()=>{const{invalidate:r}=Pu();let e=!1,t=Ef,n,i,s;const o=(u,h,d)=>{if(c(),!d){const m=u;(m?.isMaterial||!1)&&(d="material"),(m?.isBufferGeometry||m?.isGeometry||!1)&&(d="geometry")}if(d){if(typeof d=="function")n=d(h,u);else{const{target:m,key:p}=Mx(h,d);t=m[p],m[p]=u,i=m,s=p}e=!0,r()}},c=()=>{e&&(n?(n(),n=void 0):i&&s&&t!==Ef&&(i[s]=t,t=Ef,i=void 0,s=void 0),e=!1,r())};return Fi(()=>{c()}),{update:o}},mU=r=>r&&r.isCamera,Sx=r=>r&&r.isOrthographicCamera,bx=r=>r&&r.isPerspectiveCamera,gU=r=>bx(r)||Sx(r),_U=()=>{const{invalidate:r,size:e,camera:t}=Pu();let n,i;Fi(()=>{i?.()});const s=u=>{n&&(Sx(n)?(n.left=u.width/-2,n.right=u.width/2,n.top=u.height/2,n.bottom=u.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),r()):bx(n)&&(n.aspect=u.width/u.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),r()))};return{update:(u,h)=>{if(i?.(),h||!gU(u)){n=void 0;return}n=u,i=e.subscribe(s)},makeDefaultCamera:(u,h)=>{!mU(u)||!h||(t.set(u),r())}}},Ex=()=>{const r=s0(),e=(n,i)=>{const s=r.$$.callbacks[n];s&&s.forEach(o=>{o(i)})};return Object.defineProperty(e,"hasEventListener",{value:n=>!!r.$$.callbacks[n],enumerable:!0}),e},vU=()=>{const r=Ex(),e=[];let t,n=!1;const i=()=>{e.forEach(c=>c()),e.length=0,r("create",{ref:t,cleanup:c=>{e.push(c)}})},s=o=>{t=o,n&&i()};return dd(()=>{i(),n=!0}),Fi(()=>{e.forEach(o=>o())}),{updateRef:s}},Q_=r=>!!r?.addEventListener,xU=()=>{const r=Ex(),e=s0(),t=p=>{p?.type&&r(p.type,p)},n=(p,g)=>{Q_(p)&&g.forEach(v=>{p.removeEventListener(v,t)})},i=(p,g)=>{Q_(p)&&g.forEach(v=>{p.addEventListener(v,t)})};let s=[],o;const c=ei([]),u=c.subscribe(p=>{n(o,s),i(o,p),s=p});Fi(u);const h=ei(),d=h.subscribe(p=>{n(o,s),i(p,s),o=p});return Fi(d),Fi(()=>{n(o,s)}),dd(()=>{c.set(Object.keys(e.$$.callbacks))}),{updateRef:p=>{h.set(p)}}},yU=r=>{const t=zr("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(h=>h(r)).filter(Boolean),i=n.flatMap(h=>h.pluginProps??[]);let s=[];return Fi(()=>{s.forEach(h=>h())}),{updateRef:h=>{s.forEach(d=>d()),s=[],n.forEach(d=>{const m=d.onRefChange?.(h);m&&s.push(m)})},updateProps:h=>{n.forEach(d=>{d.onPropsChange?.(h)})},updateRestProps:h=>{n.forEach(d=>{d.onRestPropsChange?.(h)})},pluginsProps:i}},MU=new Set(["$$scope","$$slots","type","args","attach","instance"]),SU=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),bU=r=>typeof r=="string"||typeof r=="number"||typeof r=="boolean"||typeof r>"u"||r===null,EU=()=>{const{invalidate:r}=Pu(),e=new Map,t=(i,s,o,c)=>{if(bU(o)){const d=e.get(s);if(d&&d.instance===i&&d.value===o)return;e.set(s,{instance:i,value:o})}const{key:u,target:h}=Mx(i,s);if(!Array.isArray(o)&&typeof o=="number"&&typeof h[u]?.setScalar=="function")h[u].setScalar(o);else if(typeof h[u]?.set=="function")Array.isArray(o)?h[u].set(...o):h[u].set(o);else{if(h[u]=o,c.manualCamera)return;SU.has(u)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()}};return{updateProps:(i,s,o)=>{for(const c in s)!MU.has(c)&&!o.pluginsProps?.includes(c)&&t(i,c,s[c],o),r()}}},wU=r=>({ref:r&2}),j_=r=>({ref:r[1]}),TU=r=>({ref:r&2}),e0=r=>({ref:r[1]});function t0(r){let e,t;return e=new iU({props:{object:r[1],dispose:r[0]}}),{c(){Ir(e.$$.fragment)},l(n){Ts(e.$$.fragment,n)},m(n,i){Ur(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.object=n[1]),i&1&&(s.dispose=n[0]),e.$set(s)},i(n){t||(jt(e.$$.fragment,n),t=!0)},o(n){an(e.$$.fragment,n),t=!1},d(n){Dr(e,n)}}}function AU(r){let e;const t=r[12].default,n=$o(t,r,r[13],j_);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8194)&&Qo(n,t,i,i[13],e?el(t,i[13],s,wU):jo(i[13]),j_)},i(i){e||(jt(n,i),e=!0)},o(i){an(n,i),e=!1},d(i){n&&n.d(i)}}}function RU(r){let e,t;return e=new dU({props:{object:r[1],$$slots:{default:[CU]},$$scope:{ctx:r}}}),{c(){Ir(e.$$.fragment)},l(n){Ts(e.$$.fragment,n)},m(n,i){Ur(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.object=n[1]),i&8194&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(jt(e.$$.fragment,n),t=!0)},o(n){an(e.$$.fragment,n),t=!1},d(n){Dr(e,n)}}}function CU(r){let e;const t=r[12].default,n=$o(t,r,r[13],e0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8194)&&Qo(n,t,i,i[13],e?el(t,i[13],s,TU):jo(i[13]),e0)},i(i){e||(jt(n,i),e=!0)},o(i){an(n,i),e=!1},d(i){n&&n.d(i)}}}function PU(r){let e=r[4](r[1]),t,n,i,s,o,c,u=e&&t0(r);const h=[RU,AU],d=[];function m(p,g){return g&2&&(n=null),n==null&&(n=!!p[3](p[1])),n?0:1}return i=m(r,-1),s=d[i]=h[i](r),{c(){u&&u.c(),t=So(),s.c(),o=La()},l(p){u&&u.l(p),t=bo(p),s.l(p),o=La()},m(p,g){u&&u.m(p,g),Kn(p,t,g),d[i].m(p,g),Kn(p,o,g),c=!0},p(p,[g]){g&2&&(e=p[4](p[1])),e?u?(u.p(p,g),g&2&&jt(u,1)):(u=t0(p),u.c(),jt(u,1),u.m(t.parentNode,t)):u&&(au(),an(u,1,1,()=>{u=null}),su());let v=i;i=m(p,g),i===v?d[i].p(p,g):(au(),an(d[v],1,1,()=>{d[v]=null}),su(),s=d[i],s?s.p(p,g):(s=d[i]=h[i](p),s.c()),jt(s,1),s.m(o.parentNode,o))},i(p){c||(jt(u),jt(s),c=!0)},o(p){an(u),an(s),c=!1},d(p){p&&(mn(t),mn(o)),u&&u.d(p),d[i].d(p)}}}function LU(r,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=yg(e,n),s,{$$slots:o={},$$scope:c}=e,{is:u}=e,{args:h=void 0}=e,{attach:d=void 0}=e,{manual:m=void 0}=e,{makeDefault:p=void 0}=e,{dispose:g=void 0}=e;const v=zr("threlte-hierarchical-parent-context");Ia(r,v,W=>t(11,s=W));const M=W=>typeof W=="function"&&/^\s*class\s+/.test(W.toString()),x=W=>Array.isArray(W),_=vU();let b=M(u)&&x(h)?new u(...h):M(u)?new u:u;_.updateRef(b);let S=!1;const w=()=>{if(!S){S=!0;return}t(1,b=M(u)&&x(h)?new u(...h):M(u)?new u:u),_.updateRef(b)};let{ref:P=b}=e;const R=ei(b);To("threlte-hierarchical-parent-context",R);const N=yU({ref:b,props:e}),B=N?.pluginsProps??[],T=EU(),D=_U(),J=pU(),ce=xU(),q=W=>!!W.isObject3D,Z=W=>W.dispose!==void 0;return r.$$set=W=>{t(27,e=nu(nu({},e),Mg(W))),t(26,i=yg(e,n)),"is"in W&&t(6,u=W.is),"args"in W&&t(7,h=W.args),"attach"in W&&t(8,d=W.attach),"manual"in W&&t(9,m=W.manual),"makeDefault"in W&&t(10,p=W.makeDefault),"dispose"in W&&t(0,g=W.dispose),"ref"in W&&t(5,P=W.ref),"$$scope"in W&&t(13,c=W.$$scope)},r.$$.update=()=>{r.$$.dirty&192&&w(),r.$$.dirty&2&&t(5,P=b),r.$$.dirty&2&&R.set(b),T.updateProps(b,i,{manualCamera:m,pluginsProps:B}),r.$$.dirty&514&&D.update(b,m),r.$$.dirty&1026&&D.makeDefaultCamera(b,p),r.$$.dirty&2306&&J.update(b,s,d),r.$$.dirty&2&&ce.updateRef(b),r.$$.dirty&2&&N?.updateRef(b),N?.updateProps(e),N?.updateRestProps(i)},e=Mg(e),[g,b,v,q,Z,P,u,h,d,m,p,s,o,c]}let wx=class extends Xr{constructor(e){super(),qr(this,e,LU,PU,Wr,{is:6,args:7,attach:8,manual:9,makeDefault:10,dispose:0,ref:5})}};const IU={},UU=(r,e)=>{const t=IU[e]||GI[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...r,props:{...r.props,is:t}}},DU=r=>new Proxy(class{},{construct(e,[t]){const n=t;return new wx(UU(n,r))}}),$U=new Proxy(class{},{construct(r,[e]){const t=e;return new wx(t)},get(r,e){return DU(e)}});new U;new U;new U;var Mo=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function QU(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var hu={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */hu.exports;(function(r,e){(function(){var t,n="4.17.21",i=200,s="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",o="Expected a function",c="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",h=500,d="__lodash_placeholder__",m=1,p=2,g=4,v=1,M=2,x=1,_=2,b=4,S=8,w=16,P=32,R=64,N=128,B=256,T=512,D=30,J="...",ce=800,q=16,Z=1,W=2,he=3,ee=1/0,ae=9007199254740991,fe=17976931348623157e292,me=0/0,Ee=4294967295,Q=Ee-1,ge=Ee>>>1,_e=[["ary",N],["bind",x],["bindKey",_],["curry",S],["curryRight",w],["flip",T],["partial",P],["partialRight",R],["rearg",B]],Pe="[object Arguments]",Le="[object Array]",He="[object AsyncFunction]",tt="[object Boolean]",Ye="[object Date]",At="[object DOMException]",Qe="[object Error]",z="[object Function]",Me="[object GeneratorFunction]",ie="[object Map]",ye="[object Number]",de="[object Null]",Ne="[object Object]",Ie="[object Promise]",Oe="[object Proxy]",je="[object RegExp]",nt="[object Set]",Lt="[object String]",O="[object Symbol]",L="[object Undefined]",j="[object WeakMap]",xe="[object WeakSet]",ve="[object ArrayBuffer]",Se="[object DataView]",ke="[object Float32Array]",we="[object Float64Array]",re="[object Int8Array]",We="[object Int16Array]",Xe="[object Int32Array]",qe="[object Uint8Array]",Be="[object Uint8ClampedArray]",ze="[object Uint16Array]",ut="[object Uint32Array]",It=/\b__p \+= '';/g,G=/\b(__p \+=) '' \+/g,Ae=/(__e\(.*?\)|\b__t\)) \+\n'';/g,$=/&(?:amp|lt|gt|quot|#39);/g,be=/[&<>"']/g,Ce=RegExp($.source),bt=RegExp(be.source),Bt=/<%-([\s\S]+?)%>/g,Xt=/<%([\s\S]+?)%>/g,Ri=/<%=([\s\S]+?)%>/g,zt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ni=/^\w*$/,_n=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Os=/[\\^$.*+?()[\]{}|]/g,xl=RegExp(Os.source),Xa=/^\s+/,Fs=/\s/,yl=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Bs=/\{\n\/\* \[wrapped with (.+)\] \*/,Ml=/,? & /,Lu=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Iu=/[()=,{}\[\]\/\s]/,Uu=/\\(\\)?/g,I=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Y=/\w*$/,te=/^[-+]0x[0-9a-f]+$/i,X=/^0b[01]+$/i,se=/^\[object .+?Constructor\]$/,Fe=/^0o[0-7]+$/i,Ze=/^(?:0|[1-9]\d*)$/,it=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,et=/($^)/,gt=/['\n\r\u2028\u2029\\]/g,rt="\\ud800-\\udfff",lt="\\u0300-\\u036f",Ut="\\ufe20-\\ufe2f",Gt="\\u20d0-\\u20ff",Dn=lt+Ut+Gt,ii="\\u2700-\\u27bf",kt="a-z\\xdf-\\xf6\\xf8-\\xff",yt="\\xac\\xb1\\xd7\\xf7",qa="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",nn="\\u2000-\\u206f",Vi=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Ya="A-Z\\xc0-\\xd6\\xd8-\\xde",mr="\\ufe0e\\ufe0f",zs=yt+qa+nn+Vi,on="['’]",Wi="["+rt+"]",Hs="["+zs+"]",fn="["+Dn+"]",Gs="\\d+",Du="["+ii+"]",Za="["+kt+"]",rp="[^"+rt+zs+Gs+ii+kt+Ya+"]",Nu="\\ud83c[\\udffb-\\udfff]",Tx="(?:"+fn+"|"+Nu+")",sp="[^"+rt+"]",Ou="(?:\\ud83c[\\udde6-\\uddff]){2}",Fu="[\\ud800-\\udbff][\\udc00-\\udfff]",ks="["+Ya+"]",ap="\\u200d",op="(?:"+Za+"|"+rp+")",Ax="(?:"+ks+"|"+rp+")",lp="(?:"+on+"(?:d|ll|m|re|s|t|ve))?",cp="(?:"+on+"(?:D|LL|M|RE|S|T|VE))?",up=Tx+"?",hp="["+mr+"]?",Rx="(?:"+ap+"(?:"+[sp,Ou,Fu].join("|")+")"+hp+up+")*",Cx="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Px="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",fp=hp+up+Rx,Lx="(?:"+[Du,Ou,Fu].join("|")+")"+fp,Ix="(?:"+[sp+fn+"?",fn,Ou,Fu,Wi].join("|")+")",Ux=RegExp(on,"g"),Dx=RegExp(fn,"g"),Bu=RegExp(Nu+"(?="+Nu+")|"+Ix+fp,"g"),Nx=RegExp([ks+"?"+Za+"+"+lp+"(?="+[Hs,ks,"$"].join("|")+")",Ax+"+"+cp+"(?="+[Hs,ks+op,"$"].join("|")+")",ks+"?"+op+"+"+lp,ks+"+"+cp,Px,Cx,Gs,Lx].join("|"),"g"),Ox=RegExp("["+ap+rt+Dn+mr+"]"),Fx=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Bx=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],zx=-1,Ft={};Ft[ke]=Ft[we]=Ft[re]=Ft[We]=Ft[Xe]=Ft[qe]=Ft[Be]=Ft[ze]=Ft[ut]=!0,Ft[Pe]=Ft[Le]=Ft[ve]=Ft[tt]=Ft[Se]=Ft[Ye]=Ft[Qe]=Ft[z]=Ft[ie]=Ft[ye]=Ft[Ne]=Ft[je]=Ft[nt]=Ft[Lt]=Ft[j]=!1;var Ot={};Ot[Pe]=Ot[Le]=Ot[ve]=Ot[Se]=Ot[tt]=Ot[Ye]=Ot[ke]=Ot[we]=Ot[re]=Ot[We]=Ot[Xe]=Ot[ie]=Ot[ye]=Ot[Ne]=Ot[je]=Ot[nt]=Ot[Lt]=Ot[O]=Ot[qe]=Ot[Be]=Ot[ze]=Ot[ut]=!0,Ot[Qe]=Ot[z]=Ot[j]=!1;var Hx={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"},Gx={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},kx={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Vx={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Wx=parseFloat,Xx=parseInt,dp=typeof Mo=="object"&&Mo&&Mo.Object===Object&&Mo,qx=typeof self=="object"&&self&&self.Object===Object&&self,vn=dp||qx||Function("return this")(),zu=e&&!e.nodeType&&e,$r=zu&&!0&&r&&!r.nodeType&&r,pp=$r&&$r.exports===zu,Hu=pp&&dp.process,ri=function(){try{var k=$r&&$r.require&&$r.require("util").types;return k||Hu&&Hu.binding&&Hu.binding("util")}catch{}}(),mp=ri&&ri.isArrayBuffer,gp=ri&&ri.isDate,_p=ri&&ri.isMap,vp=ri&&ri.isRegExp,xp=ri&&ri.isSet,yp=ri&&ri.isTypedArray;function kn(k,ne,K){switch(K.length){case 0:return k.call(ne);case 1:return k.call(ne,K[0]);case 2:return k.call(ne,K[0],K[1]);case 3:return k.call(ne,K[0],K[1],K[2])}return k.apply(ne,K)}function Yx(k,ne,K,De){for(var at=-1,Tt=k==null?0:k.length;++at<Tt;){var ln=k[at];ne(De,ln,K(ln),k)}return De}function si(k,ne){for(var K=-1,De=k==null?0:k.length;++K<De&&ne(k[K],K,k)!==!1;);return k}function Zx(k,ne){for(var K=k==null?0:k.length;K--&&ne(k[K],K,k)!==!1;);return k}function Mp(k,ne){for(var K=-1,De=k==null?0:k.length;++K<De;)if(!ne(k[K],K,k))return!1;return!0}function gr(k,ne){for(var K=-1,De=k==null?0:k.length,at=0,Tt=[];++K<De;){var ln=k[K];ne(ln,K,k)&&(Tt[at++]=ln)}return Tt}function Sl(k,ne){var K=k==null?0:k.length;return!!K&&Vs(k,ne,0)>-1}function Gu(k,ne,K){for(var De=-1,at=k==null?0:k.length;++De<at;)if(K(ne,k[De]))return!0;return!1}function Ht(k,ne){for(var K=-1,De=k==null?0:k.length,at=Array(De);++K<De;)at[K]=ne(k[K],K,k);return at}function _r(k,ne){for(var K=-1,De=ne.length,at=k.length;++K<De;)k[at+K]=ne[K];return k}function ku(k,ne,K,De){var at=-1,Tt=k==null?0:k.length;for(De&&Tt&&(K=k[++at]);++at<Tt;)K=ne(K,k[at],at,k);return K}function Jx(k,ne,K,De){var at=k==null?0:k.length;for(De&&at&&(K=k[--at]);at--;)K=ne(K,k[at],at,k);return K}function Vu(k,ne){for(var K=-1,De=k==null?0:k.length;++K<De;)if(ne(k[K],K,k))return!0;return!1}var Kx=Wu("length");function $x(k){return k.split("")}function Qx(k){return k.match(Lu)||[]}function Sp(k,ne,K){var De;return K(k,function(at,Tt,ln){if(ne(at,Tt,ln))return De=Tt,!1}),De}function bl(k,ne,K,De){for(var at=k.length,Tt=K+(De?1:-1);De?Tt--:++Tt<at;)if(ne(k[Tt],Tt,k))return Tt;return-1}function Vs(k,ne,K){return ne===ne?uy(k,ne,K):bl(k,bp,K)}function jx(k,ne,K,De){for(var at=K-1,Tt=k.length;++at<Tt;)if(De(k[at],ne))return at;return-1}function bp(k){return k!==k}function Ep(k,ne){var K=k==null?0:k.length;return K?qu(k,ne)/K:me}function Wu(k){return function(ne){return ne==null?t:ne[k]}}function Xu(k){return function(ne){return k==null?t:k[ne]}}function wp(k,ne,K,De,at){return at(k,function(Tt,ln,Dt){K=De?(De=!1,Tt):ne(K,Tt,ln,Dt)}),K}function ey(k,ne){var K=k.length;for(k.sort(ne);K--;)k[K]=k[K].value;return k}function qu(k,ne){for(var K,De=-1,at=k.length;++De<at;){var Tt=ne(k[De]);Tt!==t&&(K=K===t?Tt:K+Tt)}return K}function Yu(k,ne){for(var K=-1,De=Array(k);++K<k;)De[K]=ne(K);return De}function ty(k,ne){return Ht(ne,function(K){return[K,k[K]]})}function Tp(k){return k&&k.slice(0,Pp(k)+1).replace(Xa,"")}function Vn(k){return function(ne){return k(ne)}}function Zu(k,ne){return Ht(ne,function(K){return k[K]})}function Ja(k,ne){return k.has(ne)}function Ap(k,ne){for(var K=-1,De=k.length;++K<De&&Vs(ne,k[K],0)>-1;);return K}function Rp(k,ne){for(var K=k.length;K--&&Vs(ne,k[K],0)>-1;);return K}function ny(k,ne){for(var K=k.length,De=0;K--;)k[K]===ne&&++De;return De}var iy=Xu(Hx),ry=Xu(Gx);function sy(k){return"\\"+Vx[k]}function ay(k,ne){return k==null?t:k[ne]}function Ws(k){return Ox.test(k)}function oy(k){return Fx.test(k)}function ly(k){for(var ne,K=[];!(ne=k.next()).done;)K.push(ne.value);return K}function Ju(k){var ne=-1,K=Array(k.size);return k.forEach(function(De,at){K[++ne]=[at,De]}),K}function Cp(k,ne){return function(K){return k(ne(K))}}function vr(k,ne){for(var K=-1,De=k.length,at=0,Tt=[];++K<De;){var ln=k[K];(ln===ne||ln===d)&&(k[K]=d,Tt[at++]=K)}return Tt}function El(k){var ne=-1,K=Array(k.size);return k.forEach(function(De){K[++ne]=De}),K}function cy(k){var ne=-1,K=Array(k.size);return k.forEach(function(De){K[++ne]=[De,De]}),K}function uy(k,ne,K){for(var De=K-1,at=k.length;++De<at;)if(k[De]===ne)return De;return-1}function hy(k,ne,K){for(var De=K+1;De--;)if(k[De]===ne)return De;return De}function Xs(k){return Ws(k)?dy(k):Kx(k)}function mi(k){return Ws(k)?py(k):$x(k)}function Pp(k){for(var ne=k.length;ne--&&Fs.test(k.charAt(ne)););return ne}var fy=Xu(kx);function dy(k){for(var ne=Bu.lastIndex=0;Bu.test(k);)++ne;return ne}function py(k){return k.match(Bu)||[]}function my(k){return k.match(Nx)||[]}var gy=function k(ne){ne=ne==null?vn:qs.defaults(vn.Object(),ne,qs.pick(vn,Bx));var K=ne.Array,De=ne.Date,at=ne.Error,Tt=ne.Function,ln=ne.Math,Dt=ne.Object,Ku=ne.RegExp,_y=ne.String,ai=ne.TypeError,wl=K.prototype,vy=Tt.prototype,Ys=Dt.prototype,Tl=ne["__core-js_shared__"],Al=vy.toString,Ct=Ys.hasOwnProperty,xy=0,Lp=function(){var a=/[^.]+$/.exec(Tl&&Tl.keys&&Tl.keys.IE_PROTO||"");return a?"Symbol(src)_1."+a:""}(),Rl=Ys.toString,yy=Al.call(Dt),My=vn._,Sy=Ku("^"+Al.call(Ct).replace(Os,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Cl=pp?ne.Buffer:t,xr=ne.Symbol,Pl=ne.Uint8Array,Ip=Cl?Cl.allocUnsafe:t,Ll=Cp(Dt.getPrototypeOf,Dt),Up=Dt.create,Dp=Ys.propertyIsEnumerable,Il=wl.splice,Np=xr?xr.isConcatSpreadable:t,Ka=xr?xr.iterator:t,Qr=xr?xr.toStringTag:t,Ul=function(){try{var a=is(Dt,"defineProperty");return a({},"",{}),a}catch{}}(),by=ne.clearTimeout!==vn.clearTimeout&&ne.clearTimeout,Ey=De&&De.now!==vn.Date.now&&De.now,wy=ne.setTimeout!==vn.setTimeout&&ne.setTimeout,Dl=ln.ceil,Nl=ln.floor,$u=Dt.getOwnPropertySymbols,Ty=Cl?Cl.isBuffer:t,Op=ne.isFinite,Ay=wl.join,Ry=Cp(Dt.keys,Dt),cn=ln.max,Mn=ln.min,Cy=De.now,Py=ne.parseInt,Fp=ln.random,Ly=wl.reverse,Qu=is(ne,"DataView"),$a=is(ne,"Map"),ju=is(ne,"Promise"),Zs=is(ne,"Set"),Qa=is(ne,"WeakMap"),ja=is(Dt,"create"),Ol=Qa&&new Qa,Js={},Iy=rs(Qu),Uy=rs($a),Dy=rs(ju),Ny=rs(Zs),Oy=rs(Qa),Fl=xr?xr.prototype:t,eo=Fl?Fl.valueOf:t,Bp=Fl?Fl.toString:t;function A(a){if(qt(a)&&!ot(a)&&!(a instanceof Mt)){if(a instanceof oi)return a;if(Ct.call(a,"__wrapped__"))return zm(a)}return new oi(a)}var Ks=function(){function a(){}return function(l){if(!Vt(l))return{};if(Up)return Up(l);a.prototype=l;var f=new a;return a.prototype=t,f}}();function Bl(){}function oi(a,l){this.__wrapped__=a,this.__actions__=[],this.__chain__=!!l,this.__index__=0,this.__values__=t}A.templateSettings={escape:Bt,evaluate:Xt,interpolate:Ri,variable:"",imports:{_:A}},A.prototype=Bl.prototype,A.prototype.constructor=A,oi.prototype=Ks(Bl.prototype),oi.prototype.constructor=oi;function Mt(a){this.__wrapped__=a,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Ee,this.__views__=[]}function Fy(){var a=new Mt(this.__wrapped__);return a.__actions__=Nn(this.__actions__),a.__dir__=this.__dir__,a.__filtered__=this.__filtered__,a.__iteratees__=Nn(this.__iteratees__),a.__takeCount__=this.__takeCount__,a.__views__=Nn(this.__views__),a}function By(){if(this.__filtered__){var a=new Mt(this);a.__dir__=-1,a.__filtered__=!0}else a=this.clone(),a.__dir__*=-1;return a}function zy(){var a=this.__wrapped__.value(),l=this.__dir__,f=ot(a),y=l<0,E=f?a.length:0,C=$M(0,E,this.__views__),F=C.start,H=C.end,V=H-F,oe=y?H:F-1,le=this.__iteratees__,pe=le.length,Re=0,Ve=Mn(V,this.__takeCount__);if(!f||!y&&E==V&&Ve==V)return lm(a,this.__actions__);var Ke=[];e:for(;V--&&Re<Ve;){oe+=l;for(var ft=-1,$e=a[oe];++ft<pe;){var xt=le[ft],St=xt.iteratee,qn=xt.type,Cn=St($e);if(qn==W)$e=Cn;else if(!Cn){if(qn==Z)continue e;break e}}Ke[Re++]=$e}return Ke}Mt.prototype=Ks(Bl.prototype),Mt.prototype.constructor=Mt;function jr(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var y=a[l];this.set(y[0],y[1])}}function Hy(){this.__data__=ja?ja(null):{},this.size=0}function Gy(a){var l=this.has(a)&&delete this.__data__[a];return this.size-=l?1:0,l}function ky(a){var l=this.__data__;if(ja){var f=l[a];return f===u?t:f}return Ct.call(l,a)?l[a]:t}function Vy(a){var l=this.__data__;return ja?l[a]!==t:Ct.call(l,a)}function Wy(a,l){var f=this.__data__;return this.size+=this.has(a)?0:1,f[a]=ja&&l===t?u:l,this}jr.prototype.clear=Hy,jr.prototype.delete=Gy,jr.prototype.get=ky,jr.prototype.has=Vy,jr.prototype.set=Wy;function Xi(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var y=a[l];this.set(y[0],y[1])}}function Xy(){this.__data__=[],this.size=0}function qy(a){var l=this.__data__,f=zl(l,a);if(f<0)return!1;var y=l.length-1;return f==y?l.pop():Il.call(l,f,1),--this.size,!0}function Yy(a){var l=this.__data__,f=zl(l,a);return f<0?t:l[f][1]}function Zy(a){return zl(this.__data__,a)>-1}function Jy(a,l){var f=this.__data__,y=zl(f,a);return y<0?(++this.size,f.push([a,l])):f[y][1]=l,this}Xi.prototype.clear=Xy,Xi.prototype.delete=qy,Xi.prototype.get=Yy,Xi.prototype.has=Zy,Xi.prototype.set=Jy;function qi(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var y=a[l];this.set(y[0],y[1])}}function Ky(){this.size=0,this.__data__={hash:new jr,map:new($a||Xi),string:new jr}}function $y(a){var l=$l(this,a).delete(a);return this.size-=l?1:0,l}function Qy(a){return $l(this,a).get(a)}function jy(a){return $l(this,a).has(a)}function eM(a,l){var f=$l(this,a),y=f.size;return f.set(a,l),this.size+=f.size==y?0:1,this}qi.prototype.clear=Ky,qi.prototype.delete=$y,qi.prototype.get=Qy,qi.prototype.has=jy,qi.prototype.set=eM;function es(a){var l=-1,f=a==null?0:a.length;for(this.__data__=new qi;++l<f;)this.add(a[l])}function tM(a){return this.__data__.set(a,u),this}function nM(a){return this.__data__.has(a)}es.prototype.add=es.prototype.push=tM,es.prototype.has=nM;function gi(a){var l=this.__data__=new Xi(a);this.size=l.size}function iM(){this.__data__=new Xi,this.size=0}function rM(a){var l=this.__data__,f=l.delete(a);return this.size=l.size,f}function sM(a){return this.__data__.get(a)}function aM(a){return this.__data__.has(a)}function oM(a,l){var f=this.__data__;if(f instanceof Xi){var y=f.__data__;if(!$a||y.length<i-1)return y.push([a,l]),this.size=++f.size,this;f=this.__data__=new qi(y)}return f.set(a,l),this.size=f.size,this}gi.prototype.clear=iM,gi.prototype.delete=rM,gi.prototype.get=sM,gi.prototype.has=aM,gi.prototype.set=oM;function zp(a,l){var f=ot(a),y=!f&&ss(a),E=!f&&!y&&Er(a),C=!f&&!y&&!E&&ea(a),F=f||y||E||C,H=F?Yu(a.length,_y):[],V=H.length;for(var oe in a)(l||Ct.call(a,oe))&&!(F&&(oe=="length"||E&&(oe=="offset"||oe=="parent")||C&&(oe=="buffer"||oe=="byteLength"||oe=="byteOffset")||Ki(oe,V)))&&H.push(oe);return H}function Hp(a){var l=a.length;return l?a[uh(0,l-1)]:t}function lM(a,l){return Ql(Nn(a),ts(l,0,a.length))}function cM(a){return Ql(Nn(a))}function eh(a,l,f){(f!==t&&!_i(a[l],f)||f===t&&!(l in a))&&Yi(a,l,f)}function to(a,l,f){var y=a[l];(!(Ct.call(a,l)&&_i(y,f))||f===t&&!(l in a))&&Yi(a,l,f)}function zl(a,l){for(var f=a.length;f--;)if(_i(a[f][0],l))return f;return-1}function uM(a,l,f,y){return yr(a,function(E,C,F){l(y,E,f(E),F)}),y}function Gp(a,l){return a&&Pi(l,dn(l),a)}function hM(a,l){return a&&Pi(l,Fn(l),a)}function Yi(a,l,f){l=="__proto__"&&Ul?Ul(a,l,{configurable:!0,enumerable:!0,value:f,writable:!0}):a[l]=f}function th(a,l){for(var f=-1,y=l.length,E=K(y),C=a==null;++f<y;)E[f]=C?t:Nh(a,l[f]);return E}function ts(a,l,f){return a===a&&(f!==t&&(a=a<=f?a:f),l!==t&&(a=a>=l?a:l)),a}function li(a,l,f,y,E,C){var F,H=l&m,V=l&p,oe=l&g;if(f&&(F=E?f(a,y,E,C):f(a)),F!==t)return F;if(!Vt(a))return a;var le=ot(a);if(le){if(F=jM(a),!H)return Nn(a,F)}else{var pe=Sn(a),Re=pe==z||pe==Me;if(Er(a))return hm(a,H);if(pe==Ne||pe==Pe||Re&&!E){if(F=V||Re?{}:Pm(a),!H)return V?kM(a,hM(F,a)):GM(a,Gp(F,a))}else{if(!Ot[pe])return E?a:{};F=eS(a,pe,H)}}C||(C=new gi);var Ve=C.get(a);if(Ve)return Ve;C.set(a,F),sg(a)?a.forEach(function($e){F.add(li($e,l,f,$e,a,C))}):ig(a)&&a.forEach(function($e,xt){F.set(xt,li($e,l,f,xt,a,C))});var Ke=oe?V?Mh:yh:V?Fn:dn,ft=le?t:Ke(a);return si(ft||a,function($e,xt){ft&&(xt=$e,$e=a[xt]),to(F,xt,li($e,l,f,xt,a,C))}),F}function fM(a){var l=dn(a);return function(f){return kp(f,a,l)}}function kp(a,l,f){var y=f.length;if(a==null)return!y;for(a=Dt(a);y--;){var E=f[y],C=l[E],F=a[E];if(F===t&&!(E in a)||!C(F))return!1}return!0}function Vp(a,l,f){if(typeof a!="function")throw new ai(o);return lo(function(){a.apply(t,f)},l)}function no(a,l,f,y){var E=-1,C=Sl,F=!0,H=a.length,V=[],oe=l.length;if(!H)return V;f&&(l=Ht(l,Vn(f))),y?(C=Gu,F=!1):l.length>=i&&(C=Ja,F=!1,l=new es(l));e:for(;++E<H;){var le=a[E],pe=f==null?le:f(le);if(le=y||le!==0?le:0,F&&pe===pe){for(var Re=oe;Re--;)if(l[Re]===pe)continue e;V.push(le)}else C(l,pe,y)||V.push(le)}return V}var yr=gm(Ci),Wp=gm(ih,!0);function dM(a,l){var f=!0;return yr(a,function(y,E,C){return f=!!l(y,E,C),f}),f}function Hl(a,l,f){for(var y=-1,E=a.length;++y<E;){var C=a[y],F=l(C);if(F!=null&&(H===t?F===F&&!Xn(F):f(F,H)))var H=F,V=C}return V}function pM(a,l,f,y){var E=a.length;for(f=ht(f),f<0&&(f=-f>E?0:E+f),y=y===t||y>E?E:ht(y),y<0&&(y+=E),y=f>y?0:og(y);f<y;)a[f++]=l;return a}function Xp(a,l){var f=[];return yr(a,function(y,E,C){l(y,E,C)&&f.push(y)}),f}function xn(a,l,f,y,E){var C=-1,F=a.length;for(f||(f=nS),E||(E=[]);++C<F;){var H=a[C];l>0&&f(H)?l>1?xn(H,l-1,f,y,E):_r(E,H):y||(E[E.length]=H)}return E}var nh=_m(),qp=_m(!0);function Ci(a,l){return a&&nh(a,l,dn)}function ih(a,l){return a&&qp(a,l,dn)}function Gl(a,l){return gr(l,function(f){return $i(a[f])})}function ns(a,l){l=Sr(l,a);for(var f=0,y=l.length;a!=null&&f<y;)a=a[Li(l[f++])];return f&&f==y?a:t}function Yp(a,l,f){var y=l(a);return ot(a)?y:_r(y,f(a))}function An(a){return a==null?a===t?L:de:Qr&&Qr in Dt(a)?KM(a):cS(a)}function rh(a,l){return a>l}function mM(a,l){return a!=null&&Ct.call(a,l)}function gM(a,l){return a!=null&&l in Dt(a)}function _M(a,l,f){return a>=Mn(l,f)&&a<cn(l,f)}function sh(a,l,f){for(var y=f?Gu:Sl,E=a[0].length,C=a.length,F=C,H=K(C),V=1/0,oe=[];F--;){var le=a[F];F&&l&&(le=Ht(le,Vn(l))),V=Mn(le.length,V),H[F]=!f&&(l||E>=120&&le.length>=120)?new es(F&&le):t}le=a[0];var pe=-1,Re=H[0];e:for(;++pe<E&&oe.length<V;){var Ve=le[pe],Ke=l?l(Ve):Ve;if(Ve=f||Ve!==0?Ve:0,!(Re?Ja(Re,Ke):y(oe,Ke,f))){for(F=C;--F;){var ft=H[F];if(!(ft?Ja(ft,Ke):y(a[F],Ke,f)))continue e}Re&&Re.push(Ke),oe.push(Ve)}}return oe}function vM(a,l,f,y){return Ci(a,function(E,C,F){l(y,f(E),C,F)}),y}function io(a,l,f){l=Sr(l,a),a=Dm(a,l);var y=a==null?a:a[Li(ui(l))];return y==null?t:kn(y,a,f)}function Zp(a){return qt(a)&&An(a)==Pe}function xM(a){return qt(a)&&An(a)==ve}function yM(a){return qt(a)&&An(a)==Ye}function ro(a,l,f,y,E){return a===l?!0:a==null||l==null||!qt(a)&&!qt(l)?a!==a&&l!==l:MM(a,l,f,y,ro,E)}function MM(a,l,f,y,E,C){var F=ot(a),H=ot(l),V=F?Le:Sn(a),oe=H?Le:Sn(l);V=V==Pe?Ne:V,oe=oe==Pe?Ne:oe;var le=V==Ne,pe=oe==Ne,Re=V==oe;if(Re&&Er(a)){if(!Er(l))return!1;F=!0,le=!1}if(Re&&!le)return C||(C=new gi),F||ea(a)?Am(a,l,f,y,E,C):ZM(a,l,V,f,y,E,C);if(!(f&v)){var Ve=le&&Ct.call(a,"__wrapped__"),Ke=pe&&Ct.call(l,"__wrapped__");if(Ve||Ke){var ft=Ve?a.value():a,$e=Ke?l.value():l;return C||(C=new gi),E(ft,$e,f,y,C)}}return Re?(C||(C=new gi),JM(a,l,f,y,E,C)):!1}function SM(a){return qt(a)&&Sn(a)==ie}function ah(a,l,f,y){var E=f.length,C=E,F=!y;if(a==null)return!C;for(a=Dt(a);E--;){var H=f[E];if(F&&H[2]?H[1]!==a[H[0]]:!(H[0]in a))return!1}for(;++E<C;){H=f[E];var V=H[0],oe=a[V],le=H[1];if(F&&H[2]){if(oe===t&&!(V in a))return!1}else{var pe=new gi;if(y)var Re=y(oe,le,V,a,l,pe);if(!(Re===t?ro(le,oe,v|M,y,pe):Re))return!1}}return!0}function Jp(a){if(!Vt(a)||rS(a))return!1;var l=$i(a)?Sy:se;return l.test(rs(a))}function bM(a){return qt(a)&&An(a)==je}function EM(a){return qt(a)&&Sn(a)==nt}function wM(a){return qt(a)&&rc(a.length)&&!!Ft[An(a)]}function Kp(a){return typeof a=="function"?a:a==null?Bn:typeof a=="object"?ot(a)?jp(a[0],a[1]):Qp(a):vg(a)}function oh(a){if(!oo(a))return Ry(a);var l=[];for(var f in Dt(a))Ct.call(a,f)&&f!="constructor"&&l.push(f);return l}function TM(a){if(!Vt(a))return lS(a);var l=oo(a),f=[];for(var y in a)y=="constructor"&&(l||!Ct.call(a,y))||f.push(y);return f}function lh(a,l){return a<l}function $p(a,l){var f=-1,y=On(a)?K(a.length):[];return yr(a,function(E,C,F){y[++f]=l(E,C,F)}),y}function Qp(a){var l=bh(a);return l.length==1&&l[0][2]?Im(l[0][0],l[0][1]):function(f){return f===a||ah(f,a,l)}}function jp(a,l){return wh(a)&&Lm(l)?Im(Li(a),l):function(f){var y=Nh(f,a);return y===t&&y===l?Oh(f,a):ro(l,y,v|M)}}function kl(a,l,f,y,E){a!==l&&nh(l,function(C,F){if(E||(E=new gi),Vt(C))AM(a,l,F,f,kl,y,E);else{var H=y?y(Ah(a,F),C,F+"",a,l,E):t;H===t&&(H=C),eh(a,F,H)}},Fn)}function AM(a,l,f,y,E,C,F){var H=Ah(a,f),V=Ah(l,f),oe=F.get(V);if(oe){eh(a,f,oe);return}var le=C?C(H,V,f+"",a,l,F):t,pe=le===t;if(pe){var Re=ot(V),Ve=!Re&&Er(V),Ke=!Re&&!Ve&&ea(V);le=V,Re||Ve||Ke?ot(H)?le=H:Jt(H)?le=Nn(H):Ve?(pe=!1,le=hm(V,!0)):Ke?(pe=!1,le=fm(V,!0)):le=[]:co(V)||ss(V)?(le=H,ss(H)?le=lg(H):(!Vt(H)||$i(H))&&(le=Pm(V))):pe=!1}pe&&(F.set(V,le),E(le,V,y,C,F),F.delete(V)),eh(a,f,le)}function em(a,l){var f=a.length;if(f)return l+=l<0?f:0,Ki(l,f)?a[l]:t}function tm(a,l,f){l.length?l=Ht(l,function(C){return ot(C)?function(F){return ns(F,C.length===1?C[0]:C)}:C}):l=[Bn];var y=-1;l=Ht(l,Vn(Je()));var E=$p(a,function(C,F,H){var V=Ht(l,function(oe){return oe(C)});return{criteria:V,index:++y,value:C}});return ey(E,function(C,F){return HM(C,F,f)})}function RM(a,l){return nm(a,l,function(f,y){return Oh(a,y)})}function nm(a,l,f){for(var y=-1,E=l.length,C={};++y<E;){var F=l[y],H=ns(a,F);f(H,F)&&so(C,Sr(F,a),H)}return C}function CM(a){return function(l){return ns(l,a)}}function ch(a,l,f,y){var E=y?jx:Vs,C=-1,F=l.length,H=a;for(a===l&&(l=Nn(l)),f&&(H=Ht(a,Vn(f)));++C<F;)for(var V=0,oe=l[C],le=f?f(oe):oe;(V=E(H,le,V,y))>-1;)H!==a&&Il.call(H,V,1),Il.call(a,V,1);return a}function im(a,l){for(var f=a?l.length:0,y=f-1;f--;){var E=l[f];if(f==y||E!==C){var C=E;Ki(E)?Il.call(a,E,1):dh(a,E)}}return a}function uh(a,l){return a+Nl(Fp()*(l-a+1))}function PM(a,l,f,y){for(var E=-1,C=cn(Dl((l-a)/(f||1)),0),F=K(C);C--;)F[y?C:++E]=a,a+=f;return F}function hh(a,l){var f="";if(!a||l<1||l>ae)return f;do l%2&&(f+=a),l=Nl(l/2),l&&(a+=a);while(l);return f}function _t(a,l){return Rh(Um(a,l,Bn),a+"")}function LM(a){return Hp(ta(a))}function IM(a,l){var f=ta(a);return Ql(f,ts(l,0,f.length))}function so(a,l,f,y){if(!Vt(a))return a;l=Sr(l,a);for(var E=-1,C=l.length,F=C-1,H=a;H!=null&&++E<C;){var V=Li(l[E]),oe=f;if(V==="__proto__"||V==="constructor"||V==="prototype")return a;if(E!=F){var le=H[V];oe=y?y(le,V,H):t,oe===t&&(oe=Vt(le)?le:Ki(l[E+1])?[]:{})}to(H,V,oe),H=H[V]}return a}var rm=Ol?function(a,l){return Ol.set(a,l),a}:Bn,UM=Ul?function(a,l){return Ul(a,"toString",{configurable:!0,enumerable:!1,value:Bh(l),writable:!0})}:Bn;function DM(a){return Ql(ta(a))}function ci(a,l,f){var y=-1,E=a.length;l<0&&(l=-l>E?0:E+l),f=f>E?E:f,f<0&&(f+=E),E=l>f?0:f-l>>>0,l>>>=0;for(var C=K(E);++y<E;)C[y]=a[y+l];return C}function NM(a,l){var f;return yr(a,function(y,E,C){return f=l(y,E,C),!f}),!!f}function Vl(a,l,f){var y=0,E=a==null?y:a.length;if(typeof l=="number"&&l===l&&E<=ge){for(;y<E;){var C=y+E>>>1,F=a[C];F!==null&&!Xn(F)&&(f?F<=l:F<l)?y=C+1:E=C}return E}return fh(a,l,Bn,f)}function fh(a,l,f,y){var E=0,C=a==null?0:a.length;if(C===0)return 0;l=f(l);for(var F=l!==l,H=l===null,V=Xn(l),oe=l===t;E<C;){var le=Nl((E+C)/2),pe=f(a[le]),Re=pe!==t,Ve=pe===null,Ke=pe===pe,ft=Xn(pe);if(F)var $e=y||Ke;else oe?$e=Ke&&(y||Re):H?$e=Ke&&Re&&(y||!Ve):V?$e=Ke&&Re&&!Ve&&(y||!ft):Ve||ft?$e=!1:$e=y?pe<=l:pe<l;$e?E=le+1:C=le}return Mn(C,Q)}function sm(a,l){for(var f=-1,y=a.length,E=0,C=[];++f<y;){var F=a[f],H=l?l(F):F;if(!f||!_i(H,V)){var V=H;C[E++]=F===0?0:F}}return C}function am(a){return typeof a=="number"?a:Xn(a)?me:+a}function Wn(a){if(typeof a=="string")return a;if(ot(a))return Ht(a,Wn)+"";if(Xn(a))return Bp?Bp.call(a):"";var l=a+"";return l=="0"&&1/a==-ee?"-0":l}function Mr(a,l,f){var y=-1,E=Sl,C=a.length,F=!0,H=[],V=H;if(f)F=!1,E=Gu;else if(C>=i){var oe=l?null:qM(a);if(oe)return El(oe);F=!1,E=Ja,V=new es}else V=l?[]:H;e:for(;++y<C;){var le=a[y],pe=l?l(le):le;if(le=f||le!==0?le:0,F&&pe===pe){for(var Re=V.length;Re--;)if(V[Re]===pe)continue e;l&&V.push(pe),H.push(le)}else E(V,pe,f)||(V!==H&&V.push(pe),H.push(le))}return H}function dh(a,l){return l=Sr(l,a),a=Dm(a,l),a==null||delete a[Li(ui(l))]}function om(a,l,f,y){return so(a,l,f(ns(a,l)),y)}function Wl(a,l,f,y){for(var E=a.length,C=y?E:-1;(y?C--:++C<E)&&l(a[C],C,a););return f?ci(a,y?0:C,y?C+1:E):ci(a,y?C+1:0,y?E:C)}function lm(a,l){var f=a;return f instanceof Mt&&(f=f.value()),ku(l,function(y,E){return E.func.apply(E.thisArg,_r([y],E.args))},f)}function ph(a,l,f){var y=a.length;if(y<2)return y?Mr(a[0]):[];for(var E=-1,C=K(y);++E<y;)for(var F=a[E],H=-1;++H<y;)H!=E&&(C[E]=no(C[E]||F,a[H],l,f));return Mr(xn(C,1),l,f)}function cm(a,l,f){for(var y=-1,E=a.length,C=l.length,F={};++y<E;){var H=y<C?l[y]:t;f(F,a[y],H)}return F}function mh(a){return Jt(a)?a:[]}function gh(a){return typeof a=="function"?a:Bn}function Sr(a,l){return ot(a)?a:wh(a,l)?[a]:Bm(Rt(a))}var OM=_t;function br(a,l,f){var y=a.length;return f=f===t?y:f,!l&&f>=y?a:ci(a,l,f)}var um=by||function(a){return vn.clearTimeout(a)};function hm(a,l){if(l)return a.slice();var f=a.length,y=Ip?Ip(f):new a.constructor(f);return a.copy(y),y}function _h(a){var l=new a.constructor(a.byteLength);return new Pl(l).set(new Pl(a)),l}function FM(a,l){var f=l?_h(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.byteLength)}function BM(a){var l=new a.constructor(a.source,Y.exec(a));return l.lastIndex=a.lastIndex,l}function zM(a){return eo?Dt(eo.call(a)):{}}function fm(a,l){var f=l?_h(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.length)}function dm(a,l){if(a!==l){var f=a!==t,y=a===null,E=a===a,C=Xn(a),F=l!==t,H=l===null,V=l===l,oe=Xn(l);if(!H&&!oe&&!C&&a>l||C&&F&&V&&!H&&!oe||y&&F&&V||!f&&V||!E)return 1;if(!y&&!C&&!oe&&a<l||oe&&f&&E&&!y&&!C||H&&f&&E||!F&&E||!V)return-1}return 0}function HM(a,l,f){for(var y=-1,E=a.criteria,C=l.criteria,F=E.length,H=f.length;++y<F;){var V=dm(E[y],C[y]);if(V){if(y>=H)return V;var oe=f[y];return V*(oe=="desc"?-1:1)}}return a.index-l.index}function pm(a,l,f,y){for(var E=-1,C=a.length,F=f.length,H=-1,V=l.length,oe=cn(C-F,0),le=K(V+oe),pe=!y;++H<V;)le[H]=l[H];for(;++E<F;)(pe||E<C)&&(le[f[E]]=a[E]);for(;oe--;)le[H++]=a[E++];return le}function mm(a,l,f,y){for(var E=-1,C=a.length,F=-1,H=f.length,V=-1,oe=l.length,le=cn(C-H,0),pe=K(le+oe),Re=!y;++E<le;)pe[E]=a[E];for(var Ve=E;++V<oe;)pe[Ve+V]=l[V];for(;++F<H;)(Re||E<C)&&(pe[Ve+f[F]]=a[E++]);return pe}function Nn(a,l){var f=-1,y=a.length;for(l||(l=K(y));++f<y;)l[f]=a[f];return l}function Pi(a,l,f,y){var E=!f;f||(f={});for(var C=-1,F=l.length;++C<F;){var H=l[C],V=y?y(f[H],a[H],H,f,a):t;V===t&&(V=a[H]),E?Yi(f,H,V):to(f,H,V)}return f}function GM(a,l){return Pi(a,Eh(a),l)}function kM(a,l){return Pi(a,Rm(a),l)}function Xl(a,l){return function(f,y){var E=ot(f)?Yx:uM,C=l?l():{};return E(f,a,Je(y,2),C)}}function $s(a){return _t(function(l,f){var y=-1,E=f.length,C=E>1?f[E-1]:t,F=E>2?f[2]:t;for(C=a.length>3&&typeof C=="function"?(E--,C):t,F&&Rn(f[0],f[1],F)&&(C=E<3?t:C,E=1),l=Dt(l);++y<E;){var H=f[y];H&&a(l,H,y,C)}return l})}function gm(a,l){return function(f,y){if(f==null)return f;if(!On(f))return a(f,y);for(var E=f.length,C=l?E:-1,F=Dt(f);(l?C--:++C<E)&&y(F[C],C,F)!==!1;);return f}}function _m(a){return function(l,f,y){for(var E=-1,C=Dt(l),F=y(l),H=F.length;H--;){var V=F[a?H:++E];if(f(C[V],V,C)===!1)break}return l}}function VM(a,l,f){var y=l&x,E=ao(a);function C(){var F=this&&this!==vn&&this instanceof C?E:a;return F.apply(y?f:this,arguments)}return C}function vm(a){return function(l){l=Rt(l);var f=Ws(l)?mi(l):t,y=f?f[0]:l.charAt(0),E=f?br(f,1).join(""):l.slice(1);return y[a]()+E}}function Qs(a){return function(l){return ku(gg(mg(l).replace(Ux,"")),a,"")}}function ao(a){return function(){var l=arguments;switch(l.length){case 0:return new a;case 1:return new a(l[0]);case 2:return new a(l[0],l[1]);case 3:return new a(l[0],l[1],l[2]);case 4:return new a(l[0],l[1],l[2],l[3]);case 5:return new a(l[0],l[1],l[2],l[3],l[4]);case 6:return new a(l[0],l[1],l[2],l[3],l[4],l[5]);case 7:return new a(l[0],l[1],l[2],l[3],l[4],l[5],l[6])}var f=Ks(a.prototype),y=a.apply(f,l);return Vt(y)?y:f}}function WM(a,l,f){var y=ao(a);function E(){for(var C=arguments.length,F=K(C),H=C,V=js(E);H--;)F[H]=arguments[H];var oe=C<3&&F[0]!==V&&F[C-1]!==V?[]:vr(F,V);if(C-=oe.length,C<f)return bm(a,l,ql,E.placeholder,t,F,oe,t,t,f-C);var le=this&&this!==vn&&this instanceof E?y:a;return kn(le,this,F)}return E}function xm(a){return function(l,f,y){var E=Dt(l);if(!On(l)){var C=Je(f,3);l=dn(l),f=function(H){return C(E[H],H,E)}}var F=a(l,f,y);return F>-1?E[C?l[F]:F]:t}}function ym(a){return Ji(function(l){var f=l.length,y=f,E=oi.prototype.thru;for(a&&l.reverse();y--;){var C=l[y];if(typeof C!="function")throw new ai(o);if(E&&!F&&Kl(C)=="wrapper")var F=new oi([],!0)}for(y=F?y:f;++y<f;){C=l[y];var H=Kl(C),V=H=="wrapper"?Sh(C):t;V&&Th(V[0])&&V[1]==(N|S|P|B)&&!V[4].length&&V[9]==1?F=F[Kl(V[0])].apply(F,V[3]):F=C.length==1&&Th(C)?F[H]():F.thru(C)}return function(){var oe=arguments,le=oe[0];if(F&&oe.length==1&&ot(le))return F.plant(le).value();for(var pe=0,Re=f?l[pe].apply(this,oe):le;++pe<f;)Re=l[pe].call(this,Re);return Re}})}function ql(a,l,f,y,E,C,F,H,V,oe){var le=l&N,pe=l&x,Re=l&_,Ve=l&(S|w),Ke=l&T,ft=Re?t:ao(a);function $e(){for(var xt=arguments.length,St=K(xt),qn=xt;qn--;)St[qn]=arguments[qn];if(Ve)var Cn=js($e),Yn=ny(St,Cn);if(y&&(St=pm(St,y,E,Ve)),C&&(St=mm(St,C,F,Ve)),xt-=Yn,Ve&&xt<oe){var Kt=vr(St,Cn);return bm(a,l,ql,$e.placeholder,f,St,Kt,H,V,oe-xt)}var vi=pe?f:this,ji=Re?vi[a]:a;return xt=St.length,H?St=uS(St,H):Ke&&xt>1&&St.reverse(),le&&V<xt&&(St.length=V),this&&this!==vn&&this instanceof $e&&(ji=ft||ao(ji)),ji.apply(vi,St)}return $e}function Mm(a,l){return function(f,y){return vM(f,a,l(y),{})}}function Yl(a,l){return function(f,y){var E;if(f===t&&y===t)return l;if(f!==t&&(E=f),y!==t){if(E===t)return y;typeof f=="string"||typeof y=="string"?(f=Wn(f),y=Wn(y)):(f=am(f),y=am(y)),E=a(f,y)}return E}}function vh(a){return Ji(function(l){return l=Ht(l,Vn(Je())),_t(function(f){var y=this;return a(l,function(E){return kn(E,y,f)})})})}function Zl(a,l){l=l===t?" ":Wn(l);var f=l.length;if(f<2)return f?hh(l,a):l;var y=hh(l,Dl(a/Xs(l)));return Ws(l)?br(mi(y),0,a).join(""):y.slice(0,a)}function XM(a,l,f,y){var E=l&x,C=ao(a);function F(){for(var H=-1,V=arguments.length,oe=-1,le=y.length,pe=K(le+V),Re=this&&this!==vn&&this instanceof F?C:a;++oe<le;)pe[oe]=y[oe];for(;V--;)pe[oe++]=arguments[++H];return kn(Re,E?f:this,pe)}return F}function Sm(a){return function(l,f,y){return y&&typeof y!="number"&&Rn(l,f,y)&&(f=y=t),l=Qi(l),f===t?(f=l,l=0):f=Qi(f),y=y===t?l<f?1:-1:Qi(y),PM(l,f,y,a)}}function Jl(a){return function(l,f){return typeof l=="string"&&typeof f=="string"||(l=hi(l),f=hi(f)),a(l,f)}}function bm(a,l,f,y,E,C,F,H,V,oe){var le=l&S,pe=le?F:t,Re=le?t:F,Ve=le?C:t,Ke=le?t:C;l|=le?P:R,l&=~(le?R:P),l&b||(l&=~(x|_));var ft=[a,l,E,Ve,pe,Ke,Re,H,V,oe],$e=f.apply(t,ft);return Th(a)&&Nm($e,ft),$e.placeholder=y,Om($e,a,l)}function xh(a){var l=ln[a];return function(f,y){if(f=hi(f),y=y==null?0:Mn(ht(y),292),y&&Op(f)){var E=(Rt(f)+"e").split("e"),C=l(E[0]+"e"+(+E[1]+y));return E=(Rt(C)+"e").split("e"),+(E[0]+"e"+(+E[1]-y))}return l(f)}}var qM=Zs&&1/El(new Zs([,-0]))[1]==ee?function(a){return new Zs(a)}:Gh;function Em(a){return function(l){var f=Sn(l);return f==ie?Ju(l):f==nt?cy(l):ty(l,a(l))}}function Zi(a,l,f,y,E,C,F,H){var V=l&_;if(!V&&typeof a!="function")throw new ai(o);var oe=y?y.length:0;if(oe||(l&=~(P|R),y=E=t),F=F===t?F:cn(ht(F),0),H=H===t?H:ht(H),oe-=E?E.length:0,l&R){var le=y,pe=E;y=E=t}var Re=V?t:Sh(a),Ve=[a,l,f,y,E,le,pe,C,F,H];if(Re&&oS(Ve,Re),a=Ve[0],l=Ve[1],f=Ve[2],y=Ve[3],E=Ve[4],H=Ve[9]=Ve[9]===t?V?0:a.length:cn(Ve[9]-oe,0),!H&&l&(S|w)&&(l&=~(S|w)),!l||l==x)var Ke=VM(a,l,f);else l==S||l==w?Ke=WM(a,l,H):(l==P||l==(x|P))&&!E.length?Ke=XM(a,l,f,y):Ke=ql.apply(t,Ve);var ft=Re?rm:Nm;return Om(ft(Ke,Ve),a,l)}function wm(a,l,f,y){return a===t||_i(a,Ys[f])&&!Ct.call(y,f)?l:a}function Tm(a,l,f,y,E,C){return Vt(a)&&Vt(l)&&(C.set(l,a),kl(a,l,t,Tm,C),C.delete(l)),a}function YM(a){return co(a)?t:a}function Am(a,l,f,y,E,C){var F=f&v,H=a.length,V=l.length;if(H!=V&&!(F&&V>H))return!1;var oe=C.get(a),le=C.get(l);if(oe&&le)return oe==l&&le==a;var pe=-1,Re=!0,Ve=f&M?new es:t;for(C.set(a,l),C.set(l,a);++pe<H;){var Ke=a[pe],ft=l[pe];if(y)var $e=F?y(ft,Ke,pe,l,a,C):y(Ke,ft,pe,a,l,C);if($e!==t){if($e)continue;Re=!1;break}if(Ve){if(!Vu(l,function(xt,St){if(!Ja(Ve,St)&&(Ke===xt||E(Ke,xt,f,y,C)))return Ve.push(St)})){Re=!1;break}}else if(!(Ke===ft||E(Ke,ft,f,y,C))){Re=!1;break}}return C.delete(a),C.delete(l),Re}function ZM(a,l,f,y,E,C,F){switch(f){case Se:if(a.byteLength!=l.byteLength||a.byteOffset!=l.byteOffset)return!1;a=a.buffer,l=l.buffer;case ve:return!(a.byteLength!=l.byteLength||!C(new Pl(a),new Pl(l)));case tt:case Ye:case ye:return _i(+a,+l);case Qe:return a.name==l.name&&a.message==l.message;case je:case Lt:return a==l+"";case ie:var H=Ju;case nt:var V=y&v;if(H||(H=El),a.size!=l.size&&!V)return!1;var oe=F.get(a);if(oe)return oe==l;y|=M,F.set(a,l);var le=Am(H(a),H(l),y,E,C,F);return F.delete(a),le;case O:if(eo)return eo.call(a)==eo.call(l)}return!1}function JM(a,l,f,y,E,C){var F=f&v,H=yh(a),V=H.length,oe=yh(l),le=oe.length;if(V!=le&&!F)return!1;for(var pe=V;pe--;){var Re=H[pe];if(!(F?Re in l:Ct.call(l,Re)))return!1}var Ve=C.get(a),Ke=C.get(l);if(Ve&&Ke)return Ve==l&&Ke==a;var ft=!0;C.set(a,l),C.set(l,a);for(var $e=F;++pe<V;){Re=H[pe];var xt=a[Re],St=l[Re];if(y)var qn=F?y(St,xt,Re,l,a,C):y(xt,St,Re,a,l,C);if(!(qn===t?xt===St||E(xt,St,f,y,C):qn)){ft=!1;break}$e||($e=Re=="constructor")}if(ft&&!$e){var Cn=a.constructor,Yn=l.constructor;Cn!=Yn&&"constructor"in a&&"constructor"in l&&!(typeof Cn=="function"&&Cn instanceof Cn&&typeof Yn=="function"&&Yn instanceof Yn)&&(ft=!1)}return C.delete(a),C.delete(l),ft}function Ji(a){return Rh(Um(a,t,km),a+"")}function yh(a){return Yp(a,dn,Eh)}function Mh(a){return Yp(a,Fn,Rm)}var Sh=Ol?function(a){return Ol.get(a)}:Gh;function Kl(a){for(var l=a.name+"",f=Js[l],y=Ct.call(Js,l)?f.length:0;y--;){var E=f[y],C=E.func;if(C==null||C==a)return E.name}return l}function js(a){var l=Ct.call(A,"placeholder")?A:a;return l.placeholder}function Je(){var a=A.iteratee||zh;return a=a===zh?Kp:a,arguments.length?a(arguments[0],arguments[1]):a}function $l(a,l){var f=a.__data__;return iS(l)?f[typeof l=="string"?"string":"hash"]:f.map}function bh(a){for(var l=dn(a),f=l.length;f--;){var y=l[f],E=a[y];l[f]=[y,E,Lm(E)]}return l}function is(a,l){var f=ay(a,l);return Jp(f)?f:t}function KM(a){var l=Ct.call(a,Qr),f=a[Qr];try{a[Qr]=t;var y=!0}catch{}var E=Rl.call(a);return y&&(l?a[Qr]=f:delete a[Qr]),E}var Eh=$u?function(a){return a==null?[]:(a=Dt(a),gr($u(a),function(l){return Dp.call(a,l)}))}:kh,Rm=$u?function(a){for(var l=[];a;)_r(l,Eh(a)),a=Ll(a);return l}:kh,Sn=An;(Qu&&Sn(new Qu(new ArrayBuffer(1)))!=Se||$a&&Sn(new $a)!=ie||ju&&Sn(ju.resolve())!=Ie||Zs&&Sn(new Zs)!=nt||Qa&&Sn(new Qa)!=j)&&(Sn=function(a){var l=An(a),f=l==Ne?a.constructor:t,y=f?rs(f):"";if(y)switch(y){case Iy:return Se;case Uy:return ie;case Dy:return Ie;case Ny:return nt;case Oy:return j}return l});function $M(a,l,f){for(var y=-1,E=f.length;++y<E;){var C=f[y],F=C.size;switch(C.type){case"drop":a+=F;break;case"dropRight":l-=F;break;case"take":l=Mn(l,a+F);break;case"takeRight":a=cn(a,l-F);break}}return{start:a,end:l}}function QM(a){var l=a.match(Bs);return l?l[1].split(Ml):[]}function Cm(a,l,f){l=Sr(l,a);for(var y=-1,E=l.length,C=!1;++y<E;){var F=Li(l[y]);if(!(C=a!=null&&f(a,F)))break;a=a[F]}return C||++y!=E?C:(E=a==null?0:a.length,!!E&&rc(E)&&Ki(F,E)&&(ot(a)||ss(a)))}function jM(a){var l=a.length,f=new a.constructor(l);return l&&typeof a[0]=="string"&&Ct.call(a,"index")&&(f.index=a.index,f.input=a.input),f}function Pm(a){return typeof a.constructor=="function"&&!oo(a)?Ks(Ll(a)):{}}function eS(a,l,f){var y=a.constructor;switch(l){case ve:return _h(a);case tt:case Ye:return new y(+a);case Se:return FM(a,f);case ke:case we:case re:case We:case Xe:case qe:case Be:case ze:case ut:return fm(a,f);case ie:return new y;case ye:case Lt:return new y(a);case je:return BM(a);case nt:return new y;case O:return zM(a)}}function tS(a,l){var f=l.length;if(!f)return a;var y=f-1;return l[y]=(f>1?"& ":"")+l[y],l=l.join(f>2?", ":" "),a.replace(yl,`{
/* [wrapped with `+l+`] */
`)}function nS(a){return ot(a)||ss(a)||!!(Np&&a&&a[Np])}function Ki(a,l){var f=typeof a;return l=l??ae,!!l&&(f=="number"||f!="symbol"&&Ze.test(a))&&a>-1&&a%1==0&&a<l}function Rn(a,l,f){if(!Vt(f))return!1;var y=typeof l;return(y=="number"?On(f)&&Ki(l,f.length):y=="string"&&l in f)?_i(f[l],a):!1}function wh(a,l){if(ot(a))return!1;var f=typeof a;return f=="number"||f=="symbol"||f=="boolean"||a==null||Xn(a)?!0:ni.test(a)||!zt.test(a)||l!=null&&a in Dt(l)}function iS(a){var l=typeof a;return l=="string"||l=="number"||l=="symbol"||l=="boolean"?a!=="__proto__":a===null}function Th(a){var l=Kl(a),f=A[l];if(typeof f!="function"||!(l in Mt.prototype))return!1;if(a===f)return!0;var y=Sh(f);return!!y&&a===y[0]}function rS(a){return!!Lp&&Lp in a}var sS=Tl?$i:Vh;function oo(a){var l=a&&a.constructor,f=typeof l=="function"&&l.prototype||Ys;return a===f}function Lm(a){return a===a&&!Vt(a)}function Im(a,l){return function(f){return f==null?!1:f[a]===l&&(l!==t||a in Dt(f))}}function aS(a){var l=nc(a,function(y){return f.size===h&&f.clear(),y}),f=l.cache;return l}function oS(a,l){var f=a[1],y=l[1],E=f|y,C=E<(x|_|N),F=y==N&&f==S||y==N&&f==B&&a[7].length<=l[8]||y==(N|B)&&l[7].length<=l[8]&&f==S;if(!(C||F))return a;y&x&&(a[2]=l[2],E|=f&x?0:b);var H=l[3];if(H){var V=a[3];a[3]=V?pm(V,H,l[4]):H,a[4]=V?vr(a[3],d):l[4]}return H=l[5],H&&(V=a[5],a[5]=V?mm(V,H,l[6]):H,a[6]=V?vr(a[5],d):l[6]),H=l[7],H&&(a[7]=H),y&N&&(a[8]=a[8]==null?l[8]:Mn(a[8],l[8])),a[9]==null&&(a[9]=l[9]),a[0]=l[0],a[1]=E,a}function lS(a){var l=[];if(a!=null)for(var f in Dt(a))l.push(f);return l}function cS(a){return Rl.call(a)}function Um(a,l,f){return l=cn(l===t?a.length-1:l,0),function(){for(var y=arguments,E=-1,C=cn(y.length-l,0),F=K(C);++E<C;)F[E]=y[l+E];E=-1;for(var H=K(l+1);++E<l;)H[E]=y[E];return H[l]=f(F),kn(a,this,H)}}function Dm(a,l){return l.length<2?a:ns(a,ci(l,0,-1))}function uS(a,l){for(var f=a.length,y=Mn(l.length,f),E=Nn(a);y--;){var C=l[y];a[y]=Ki(C,f)?E[C]:t}return a}function Ah(a,l){if(!(l==="constructor"&&typeof a[l]=="function")&&l!="__proto__")return a[l]}var Nm=Fm(rm),lo=wy||function(a,l){return vn.setTimeout(a,l)},Rh=Fm(UM);function Om(a,l,f){var y=l+"";return Rh(a,tS(y,hS(QM(y),f)))}function Fm(a){var l=0,f=0;return function(){var y=Cy(),E=q-(y-f);if(f=y,E>0){if(++l>=ce)return arguments[0]}else l=0;return a.apply(t,arguments)}}function Ql(a,l){var f=-1,y=a.length,E=y-1;for(l=l===t?y:l;++f<l;){var C=uh(f,E),F=a[C];a[C]=a[f],a[f]=F}return a.length=l,a}var Bm=aS(function(a){var l=[];return a.charCodeAt(0)===46&&l.push(""),a.replace(_n,function(f,y,E,C){l.push(E?C.replace(Uu,"$1"):y||f)}),l});function Li(a){if(typeof a=="string"||Xn(a))return a;var l=a+"";return l=="0"&&1/a==-ee?"-0":l}function rs(a){if(a!=null){try{return Al.call(a)}catch{}try{return a+""}catch{}}return""}function hS(a,l){return si(_e,function(f){var y="_."+f[0];l&f[1]&&!Sl(a,y)&&a.push(y)}),a.sort()}function zm(a){if(a instanceof Mt)return a.clone();var l=new oi(a.__wrapped__,a.__chain__);return l.__actions__=Nn(a.__actions__),l.__index__=a.__index__,l.__values__=a.__values__,l}function fS(a,l,f){(f?Rn(a,l,f):l===t)?l=1:l=cn(ht(l),0);var y=a==null?0:a.length;if(!y||l<1)return[];for(var E=0,C=0,F=K(Dl(y/l));E<y;)F[C++]=ci(a,E,E+=l);return F}function dS(a){for(var l=-1,f=a==null?0:a.length,y=0,E=[];++l<f;){var C=a[l];C&&(E[y++]=C)}return E}function pS(){var a=arguments.length;if(!a)return[];for(var l=K(a-1),f=arguments[0],y=a;y--;)l[y-1]=arguments[y];return _r(ot(f)?Nn(f):[f],xn(l,1))}var mS=_t(function(a,l){return Jt(a)?no(a,xn(l,1,Jt,!0)):[]}),gS=_t(function(a,l){var f=ui(l);return Jt(f)&&(f=t),Jt(a)?no(a,xn(l,1,Jt,!0),Je(f,2)):[]}),_S=_t(function(a,l){var f=ui(l);return Jt(f)&&(f=t),Jt(a)?no(a,xn(l,1,Jt,!0),t,f):[]});function vS(a,l,f){var y=a==null?0:a.length;return y?(l=f||l===t?1:ht(l),ci(a,l<0?0:l,y)):[]}function xS(a,l,f){var y=a==null?0:a.length;return y?(l=f||l===t?1:ht(l),l=y-l,ci(a,0,l<0?0:l)):[]}function yS(a,l){return a&&a.length?Wl(a,Je(l,3),!0,!0):[]}function MS(a,l){return a&&a.length?Wl(a,Je(l,3),!0):[]}function SS(a,l,f,y){var E=a==null?0:a.length;return E?(f&&typeof f!="number"&&Rn(a,l,f)&&(f=0,y=E),pM(a,l,f,y)):[]}function Hm(a,l,f){var y=a==null?0:a.length;if(!y)return-1;var E=f==null?0:ht(f);return E<0&&(E=cn(y+E,0)),bl(a,Je(l,3),E)}function Gm(a,l,f){var y=a==null?0:a.length;if(!y)return-1;var E=y-1;return f!==t&&(E=ht(f),E=f<0?cn(y+E,0):Mn(E,y-1)),bl(a,Je(l,3),E,!0)}function km(a){var l=a==null?0:a.length;return l?xn(a,1):[]}function bS(a){var l=a==null?0:a.length;return l?xn(a,ee):[]}function ES(a,l){var f=a==null?0:a.length;return f?(l=l===t?1:ht(l),xn(a,l)):[]}function wS(a){for(var l=-1,f=a==null?0:a.length,y={};++l<f;){var E=a[l];y[E[0]]=E[1]}return y}function Vm(a){return a&&a.length?a[0]:t}function TS(a,l,f){var y=a==null?0:a.length;if(!y)return-1;var E=f==null?0:ht(f);return E<0&&(E=cn(y+E,0)),Vs(a,l,E)}function AS(a){var l=a==null?0:a.length;return l?ci(a,0,-1):[]}var RS=_t(function(a){var l=Ht(a,mh);return l.length&&l[0]===a[0]?sh(l):[]}),CS=_t(function(a){var l=ui(a),f=Ht(a,mh);return l===ui(f)?l=t:f.pop(),f.length&&f[0]===a[0]?sh(f,Je(l,2)):[]}),PS=_t(function(a){var l=ui(a),f=Ht(a,mh);return l=typeof l=="function"?l:t,l&&f.pop(),f.length&&f[0]===a[0]?sh(f,t,l):[]});function LS(a,l){return a==null?"":Ay.call(a,l)}function ui(a){var l=a==null?0:a.length;return l?a[l-1]:t}function IS(a,l,f){var y=a==null?0:a.length;if(!y)return-1;var E=y;return f!==t&&(E=ht(f),E=E<0?cn(y+E,0):Mn(E,y-1)),l===l?hy(a,l,E):bl(a,bp,E,!0)}function US(a,l){return a&&a.length?em(a,ht(l)):t}var DS=_t(Wm);function Wm(a,l){return a&&a.length&&l&&l.length?ch(a,l):a}function NS(a,l,f){return a&&a.length&&l&&l.length?ch(a,l,Je(f,2)):a}function OS(a,l,f){return a&&a.length&&l&&l.length?ch(a,l,t,f):a}var FS=Ji(function(a,l){var f=a==null?0:a.length,y=th(a,l);return im(a,Ht(l,function(E){return Ki(E,f)?+E:E}).sort(dm)),y});function BS(a,l){var f=[];if(!(a&&a.length))return f;var y=-1,E=[],C=a.length;for(l=Je(l,3);++y<C;){var F=a[y];l(F,y,a)&&(f.push(F),E.push(y))}return im(a,E),f}function Ch(a){return a==null?a:Ly.call(a)}function zS(a,l,f){var y=a==null?0:a.length;return y?(f&&typeof f!="number"&&Rn(a,l,f)?(l=0,f=y):(l=l==null?0:ht(l),f=f===t?y:ht(f)),ci(a,l,f)):[]}function HS(a,l){return Vl(a,l)}function GS(a,l,f){return fh(a,l,Je(f,2))}function kS(a,l){var f=a==null?0:a.length;if(f){var y=Vl(a,l);if(y<f&&_i(a[y],l))return y}return-1}function VS(a,l){return Vl(a,l,!0)}function WS(a,l,f){return fh(a,l,Je(f,2),!0)}function XS(a,l){var f=a==null?0:a.length;if(f){var y=Vl(a,l,!0)-1;if(_i(a[y],l))return y}return-1}function qS(a){return a&&a.length?sm(a):[]}function YS(a,l){return a&&a.length?sm(a,Je(l,2)):[]}function ZS(a){var l=a==null?0:a.length;return l?ci(a,1,l):[]}function JS(a,l,f){return a&&a.length?(l=f||l===t?1:ht(l),ci(a,0,l<0?0:l)):[]}function KS(a,l,f){var y=a==null?0:a.length;return y?(l=f||l===t?1:ht(l),l=y-l,ci(a,l<0?0:l,y)):[]}function $S(a,l){return a&&a.length?Wl(a,Je(l,3),!1,!0):[]}function QS(a,l){return a&&a.length?Wl(a,Je(l,3)):[]}var jS=_t(function(a){return Mr(xn(a,1,Jt,!0))}),eb=_t(function(a){var l=ui(a);return Jt(l)&&(l=t),Mr(xn(a,1,Jt,!0),Je(l,2))}),tb=_t(function(a){var l=ui(a);return l=typeof l=="function"?l:t,Mr(xn(a,1,Jt,!0),t,l)});function nb(a){return a&&a.length?Mr(a):[]}function ib(a,l){return a&&a.length?Mr(a,Je(l,2)):[]}function rb(a,l){return l=typeof l=="function"?l:t,a&&a.length?Mr(a,t,l):[]}function Ph(a){if(!(a&&a.length))return[];var l=0;return a=gr(a,function(f){if(Jt(f))return l=cn(f.length,l),!0}),Yu(l,function(f){return Ht(a,Wu(f))})}function Xm(a,l){if(!(a&&a.length))return[];var f=Ph(a);return l==null?f:Ht(f,function(y){return kn(l,t,y)})}var sb=_t(function(a,l){return Jt(a)?no(a,l):[]}),ab=_t(function(a){return ph(gr(a,Jt))}),ob=_t(function(a){var l=ui(a);return Jt(l)&&(l=t),ph(gr(a,Jt),Je(l,2))}),lb=_t(function(a){var l=ui(a);return l=typeof l=="function"?l:t,ph(gr(a,Jt),t,l)}),cb=_t(Ph);function ub(a,l){return cm(a||[],l||[],to)}function hb(a,l){return cm(a||[],l||[],so)}var fb=_t(function(a){var l=a.length,f=l>1?a[l-1]:t;return f=typeof f=="function"?(a.pop(),f):t,Xm(a,f)});function qm(a){var l=A(a);return l.__chain__=!0,l}function db(a,l){return l(a),a}function jl(a,l){return l(a)}var pb=Ji(function(a){var l=a.length,f=l?a[0]:0,y=this.__wrapped__,E=function(C){return th(C,a)};return l>1||this.__actions__.length||!(y instanceof Mt)||!Ki(f)?this.thru(E):(y=y.slice(f,+f+(l?1:0)),y.__actions__.push({func:jl,args:[E],thisArg:t}),new oi(y,this.__chain__).thru(function(C){return l&&!C.length&&C.push(t),C}))});function mb(){return qm(this)}function gb(){return new oi(this.value(),this.__chain__)}function _b(){this.__values__===t&&(this.__values__=ag(this.value()));var a=this.__index__>=this.__values__.length,l=a?t:this.__values__[this.__index__++];return{done:a,value:l}}function vb(){return this}function xb(a){for(var l,f=this;f instanceof Bl;){var y=zm(f);y.__index__=0,y.__values__=t,l?E.__wrapped__=y:l=y;var E=y;f=f.__wrapped__}return E.__wrapped__=a,l}function yb(){var a=this.__wrapped__;if(a instanceof Mt){var l=a;return this.__actions__.length&&(l=new Mt(this)),l=l.reverse(),l.__actions__.push({func:jl,args:[Ch],thisArg:t}),new oi(l,this.__chain__)}return this.thru(Ch)}function Mb(){return lm(this.__wrapped__,this.__actions__)}var Sb=Xl(function(a,l,f){Ct.call(a,f)?++a[f]:Yi(a,f,1)});function bb(a,l,f){var y=ot(a)?Mp:dM;return f&&Rn(a,l,f)&&(l=t),y(a,Je(l,3))}function Eb(a,l){var f=ot(a)?gr:Xp;return f(a,Je(l,3))}var wb=xm(Hm),Tb=xm(Gm);function Ab(a,l){return xn(ec(a,l),1)}function Rb(a,l){return xn(ec(a,l),ee)}function Cb(a,l,f){return f=f===t?1:ht(f),xn(ec(a,l),f)}function Ym(a,l){var f=ot(a)?si:yr;return f(a,Je(l,3))}function Zm(a,l){var f=ot(a)?Zx:Wp;return f(a,Je(l,3))}var Pb=Xl(function(a,l,f){Ct.call(a,f)?a[f].push(l):Yi(a,f,[l])});function Lb(a,l,f,y){a=On(a)?a:ta(a),f=f&&!y?ht(f):0;var E=a.length;return f<0&&(f=cn(E+f,0)),sc(a)?f<=E&&a.indexOf(l,f)>-1:!!E&&Vs(a,l,f)>-1}var Ib=_t(function(a,l,f){var y=-1,E=typeof l=="function",C=On(a)?K(a.length):[];return yr(a,function(F){C[++y]=E?kn(l,F,f):io(F,l,f)}),C}),Ub=Xl(function(a,l,f){Yi(a,f,l)});function ec(a,l){var f=ot(a)?Ht:$p;return f(a,Je(l,3))}function Db(a,l,f,y){return a==null?[]:(ot(l)||(l=l==null?[]:[l]),f=y?t:f,ot(f)||(f=f==null?[]:[f]),tm(a,l,f))}var Nb=Xl(function(a,l,f){a[f?0:1].push(l)},function(){return[[],[]]});function Ob(a,l,f){var y=ot(a)?ku:wp,E=arguments.length<3;return y(a,Je(l,4),f,E,yr)}function Fb(a,l,f){var y=ot(a)?Jx:wp,E=arguments.length<3;return y(a,Je(l,4),f,E,Wp)}function Bb(a,l){var f=ot(a)?gr:Xp;return f(a,ic(Je(l,3)))}function zb(a){var l=ot(a)?Hp:LM;return l(a)}function Hb(a,l,f){(f?Rn(a,l,f):l===t)?l=1:l=ht(l);var y=ot(a)?lM:IM;return y(a,l)}function Gb(a){var l=ot(a)?cM:DM;return l(a)}function kb(a){if(a==null)return 0;if(On(a))return sc(a)?Xs(a):a.length;var l=Sn(a);return l==ie||l==nt?a.size:oh(a).length}function Vb(a,l,f){var y=ot(a)?Vu:NM;return f&&Rn(a,l,f)&&(l=t),y(a,Je(l,3))}var Wb=_t(function(a,l){if(a==null)return[];var f=l.length;return f>1&&Rn(a,l[0],l[1])?l=[]:f>2&&Rn(l[0],l[1],l[2])&&(l=[l[0]]),tm(a,xn(l,1),[])}),tc=Ey||function(){return vn.Date.now()};function Xb(a,l){if(typeof l!="function")throw new ai(o);return a=ht(a),function(){if(--a<1)return l.apply(this,arguments)}}function Jm(a,l,f){return l=f?t:l,l=a&&l==null?a.length:l,Zi(a,N,t,t,t,t,l)}function Km(a,l){var f;if(typeof l!="function")throw new ai(o);return a=ht(a),function(){return--a>0&&(f=l.apply(this,arguments)),a<=1&&(l=t),f}}var Lh=_t(function(a,l,f){var y=x;if(f.length){var E=vr(f,js(Lh));y|=P}return Zi(a,y,l,f,E)}),$m=_t(function(a,l,f){var y=x|_;if(f.length){var E=vr(f,js($m));y|=P}return Zi(l,y,a,f,E)});function Qm(a,l,f){l=f?t:l;var y=Zi(a,S,t,t,t,t,t,l);return y.placeholder=Qm.placeholder,y}function jm(a,l,f){l=f?t:l;var y=Zi(a,w,t,t,t,t,t,l);return y.placeholder=jm.placeholder,y}function eg(a,l,f){var y,E,C,F,H,V,oe=0,le=!1,pe=!1,Re=!0;if(typeof a!="function")throw new ai(o);l=hi(l)||0,Vt(f)&&(le=!!f.leading,pe="maxWait"in f,C=pe?cn(hi(f.maxWait)||0,l):C,Re="trailing"in f?!!f.trailing:Re);function Ve(Kt){var vi=y,ji=E;return y=E=t,oe=Kt,F=a.apply(ji,vi),F}function Ke(Kt){return oe=Kt,H=lo(xt,l),le?Ve(Kt):F}function ft(Kt){var vi=Kt-V,ji=Kt-oe,xg=l-vi;return pe?Mn(xg,C-ji):xg}function $e(Kt){var vi=Kt-V,ji=Kt-oe;return V===t||vi>=l||vi<0||pe&&ji>=C}function xt(){var Kt=tc();if($e(Kt))return St(Kt);H=lo(xt,ft(Kt))}function St(Kt){return H=t,Re&&y?Ve(Kt):(y=E=t,F)}function qn(){H!==t&&um(H),oe=0,y=V=E=H=t}function Cn(){return H===t?F:St(tc())}function Yn(){var Kt=tc(),vi=$e(Kt);if(y=arguments,E=this,V=Kt,vi){if(H===t)return Ke(V);if(pe)return um(H),H=lo(xt,l),Ve(V)}return H===t&&(H=lo(xt,l)),F}return Yn.cancel=qn,Yn.flush=Cn,Yn}var qb=_t(function(a,l){return Vp(a,1,l)}),Yb=_t(function(a,l,f){return Vp(a,hi(l)||0,f)});function Zb(a){return Zi(a,T)}function nc(a,l){if(typeof a!="function"||l!=null&&typeof l!="function")throw new ai(o);var f=function(){var y=arguments,E=l?l.apply(this,y):y[0],C=f.cache;if(C.has(E))return C.get(E);var F=a.apply(this,y);return f.cache=C.set(E,F)||C,F};return f.cache=new(nc.Cache||qi),f}nc.Cache=qi;function ic(a){if(typeof a!="function")throw new ai(o);return function(){var l=arguments;switch(l.length){case 0:return!a.call(this);case 1:return!a.call(this,l[0]);case 2:return!a.call(this,l[0],l[1]);case 3:return!a.call(this,l[0],l[1],l[2])}return!a.apply(this,l)}}function Jb(a){return Km(2,a)}var Kb=OM(function(a,l){l=l.length==1&&ot(l[0])?Ht(l[0],Vn(Je())):Ht(xn(l,1),Vn(Je()));var f=l.length;return _t(function(y){for(var E=-1,C=Mn(y.length,f);++E<C;)y[E]=l[E].call(this,y[E]);return kn(a,this,y)})}),Ih=_t(function(a,l){var f=vr(l,js(Ih));return Zi(a,P,t,l,f)}),tg=_t(function(a,l){var f=vr(l,js(tg));return Zi(a,R,t,l,f)}),$b=Ji(function(a,l){return Zi(a,B,t,t,t,l)});function Qb(a,l){if(typeof a!="function")throw new ai(o);return l=l===t?l:ht(l),_t(a,l)}function jb(a,l){if(typeof a!="function")throw new ai(o);return l=l==null?0:cn(ht(l),0),_t(function(f){var y=f[l],E=br(f,0,l);return y&&_r(E,y),kn(a,this,E)})}function eE(a,l,f){var y=!0,E=!0;if(typeof a!="function")throw new ai(o);return Vt(f)&&(y="leading"in f?!!f.leading:y,E="trailing"in f?!!f.trailing:E),eg(a,l,{leading:y,maxWait:l,trailing:E})}function tE(a){return Jm(a,1)}function nE(a,l){return Ih(gh(l),a)}function iE(){if(!arguments.length)return[];var a=arguments[0];return ot(a)?a:[a]}function rE(a){return li(a,g)}function sE(a,l){return l=typeof l=="function"?l:t,li(a,g,l)}function aE(a){return li(a,m|g)}function oE(a,l){return l=typeof l=="function"?l:t,li(a,m|g,l)}function lE(a,l){return l==null||kp(a,l,dn(l))}function _i(a,l){return a===l||a!==a&&l!==l}var cE=Jl(rh),uE=Jl(function(a,l){return a>=l}),ss=Zp(function(){return arguments}())?Zp:function(a){return qt(a)&&Ct.call(a,"callee")&&!Dp.call(a,"callee")},ot=K.isArray,hE=mp?Vn(mp):xM;function On(a){return a!=null&&rc(a.length)&&!$i(a)}function Jt(a){return qt(a)&&On(a)}function fE(a){return a===!0||a===!1||qt(a)&&An(a)==tt}var Er=Ty||Vh,dE=gp?Vn(gp):yM;function pE(a){return qt(a)&&a.nodeType===1&&!co(a)}function mE(a){if(a==null)return!0;if(On(a)&&(ot(a)||typeof a=="string"||typeof a.splice=="function"||Er(a)||ea(a)||ss(a)))return!a.length;var l=Sn(a);if(l==ie||l==nt)return!a.size;if(oo(a))return!oh(a).length;for(var f in a)if(Ct.call(a,f))return!1;return!0}function gE(a,l){return ro(a,l)}function _E(a,l,f){f=typeof f=="function"?f:t;var y=f?f(a,l):t;return y===t?ro(a,l,t,f):!!y}function Uh(a){if(!qt(a))return!1;var l=An(a);return l==Qe||l==At||typeof a.message=="string"&&typeof a.name=="string"&&!co(a)}function vE(a){return typeof a=="number"&&Op(a)}function $i(a){if(!Vt(a))return!1;var l=An(a);return l==z||l==Me||l==He||l==Oe}function ng(a){return typeof a=="number"&&a==ht(a)}function rc(a){return typeof a=="number"&&a>-1&&a%1==0&&a<=ae}function Vt(a){var l=typeof a;return a!=null&&(l=="object"||l=="function")}function qt(a){return a!=null&&typeof a=="object"}var ig=_p?Vn(_p):SM;function xE(a,l){return a===l||ah(a,l,bh(l))}function yE(a,l,f){return f=typeof f=="function"?f:t,ah(a,l,bh(l),f)}function ME(a){return rg(a)&&a!=+a}function SE(a){if(sS(a))throw new at(s);return Jp(a)}function bE(a){return a===null}function EE(a){return a==null}function rg(a){return typeof a=="number"||qt(a)&&An(a)==ye}function co(a){if(!qt(a)||An(a)!=Ne)return!1;var l=Ll(a);if(l===null)return!0;var f=Ct.call(l,"constructor")&&l.constructor;return typeof f=="function"&&f instanceof f&&Al.call(f)==yy}var Dh=vp?Vn(vp):bM;function wE(a){return ng(a)&&a>=-ae&&a<=ae}var sg=xp?Vn(xp):EM;function sc(a){return typeof a=="string"||!ot(a)&&qt(a)&&An(a)==Lt}function Xn(a){return typeof a=="symbol"||qt(a)&&An(a)==O}var ea=yp?Vn(yp):wM;function TE(a){return a===t}function AE(a){return qt(a)&&Sn(a)==j}function RE(a){return qt(a)&&An(a)==xe}var CE=Jl(lh),PE=Jl(function(a,l){return a<=l});function ag(a){if(!a)return[];if(On(a))return sc(a)?mi(a):Nn(a);if(Ka&&a[Ka])return ly(a[Ka]());var l=Sn(a),f=l==ie?Ju:l==nt?El:ta;return f(a)}function Qi(a){if(!a)return a===0?a:0;if(a=hi(a),a===ee||a===-ee){var l=a<0?-1:1;return l*fe}return a===a?a:0}function ht(a){var l=Qi(a),f=l%1;return l===l?f?l-f:l:0}function og(a){return a?ts(ht(a),0,Ee):0}function hi(a){if(typeof a=="number")return a;if(Xn(a))return me;if(Vt(a)){var l=typeof a.valueOf=="function"?a.valueOf():a;a=Vt(l)?l+"":l}if(typeof a!="string")return a===0?a:+a;a=Tp(a);var f=X.test(a);return f||Fe.test(a)?Xx(a.slice(2),f?2:8):te.test(a)?me:+a}function lg(a){return Pi(a,Fn(a))}function LE(a){return a?ts(ht(a),-ae,ae):a===0?a:0}function Rt(a){return a==null?"":Wn(a)}var IE=$s(function(a,l){if(oo(l)||On(l)){Pi(l,dn(l),a);return}for(var f in l)Ct.call(l,f)&&to(a,f,l[f])}),cg=$s(function(a,l){Pi(l,Fn(l),a)}),ac=$s(function(a,l,f,y){Pi(l,Fn(l),a,y)}),UE=$s(function(a,l,f,y){Pi(l,dn(l),a,y)}),DE=Ji(th);function NE(a,l){var f=Ks(a);return l==null?f:Gp(f,l)}var OE=_t(function(a,l){a=Dt(a);var f=-1,y=l.length,E=y>2?l[2]:t;for(E&&Rn(l[0],l[1],E)&&(y=1);++f<y;)for(var C=l[f],F=Fn(C),H=-1,V=F.length;++H<V;){var oe=F[H],le=a[oe];(le===t||_i(le,Ys[oe])&&!Ct.call(a,oe))&&(a[oe]=C[oe])}return a}),FE=_t(function(a){return a.push(t,Tm),kn(ug,t,a)});function BE(a,l){return Sp(a,Je(l,3),Ci)}function zE(a,l){return Sp(a,Je(l,3),ih)}function HE(a,l){return a==null?a:nh(a,Je(l,3),Fn)}function GE(a,l){return a==null?a:qp(a,Je(l,3),Fn)}function kE(a,l){return a&&Ci(a,Je(l,3))}function VE(a,l){return a&&ih(a,Je(l,3))}function WE(a){return a==null?[]:Gl(a,dn(a))}function XE(a){return a==null?[]:Gl(a,Fn(a))}function Nh(a,l,f){var y=a==null?t:ns(a,l);return y===t?f:y}function qE(a,l){return a!=null&&Cm(a,l,mM)}function Oh(a,l){return a!=null&&Cm(a,l,gM)}var YE=Mm(function(a,l,f){l!=null&&typeof l.toString!="function"&&(l=Rl.call(l)),a[l]=f},Bh(Bn)),ZE=Mm(function(a,l,f){l!=null&&typeof l.toString!="function"&&(l=Rl.call(l)),Ct.call(a,l)?a[l].push(f):a[l]=[f]},Je),JE=_t(io);function dn(a){return On(a)?zp(a):oh(a)}function Fn(a){return On(a)?zp(a,!0):TM(a)}function KE(a,l){var f={};return l=Je(l,3),Ci(a,function(y,E,C){Yi(f,l(y,E,C),y)}),f}function $E(a,l){var f={};return l=Je(l,3),Ci(a,function(y,E,C){Yi(f,E,l(y,E,C))}),f}var QE=$s(function(a,l,f){kl(a,l,f)}),ug=$s(function(a,l,f,y){kl(a,l,f,y)}),jE=Ji(function(a,l){var f={};if(a==null)return f;var y=!1;l=Ht(l,function(C){return C=Sr(C,a),y||(y=C.length>1),C}),Pi(a,Mh(a),f),y&&(f=li(f,m|p|g,YM));for(var E=l.length;E--;)dh(f,l[E]);return f});function e1(a,l){return hg(a,ic(Je(l)))}var t1=Ji(function(a,l){return a==null?{}:RM(a,l)});function hg(a,l){if(a==null)return{};var f=Ht(Mh(a),function(y){return[y]});return l=Je(l),nm(a,f,function(y,E){return l(y,E[0])})}function n1(a,l,f){l=Sr(l,a);var y=-1,E=l.length;for(E||(E=1,a=t);++y<E;){var C=a==null?t:a[Li(l[y])];C===t&&(y=E,C=f),a=$i(C)?C.call(a):C}return a}function i1(a,l,f){return a==null?a:so(a,l,f)}function r1(a,l,f,y){return y=typeof y=="function"?y:t,a==null?a:so(a,l,f,y)}var fg=Em(dn),dg=Em(Fn);function s1(a,l,f){var y=ot(a),E=y||Er(a)||ea(a);if(l=Je(l,4),f==null){var C=a&&a.constructor;E?f=y?new C:[]:Vt(a)?f=$i(C)?Ks(Ll(a)):{}:f={}}return(E?si:Ci)(a,function(F,H,V){return l(f,F,H,V)}),f}function a1(a,l){return a==null?!0:dh(a,l)}function o1(a,l,f){return a==null?a:om(a,l,gh(f))}function l1(a,l,f,y){return y=typeof y=="function"?y:t,a==null?a:om(a,l,gh(f),y)}function ta(a){return a==null?[]:Zu(a,dn(a))}function c1(a){return a==null?[]:Zu(a,Fn(a))}function u1(a,l,f){return f===t&&(f=l,l=t),f!==t&&(f=hi(f),f=f===f?f:0),l!==t&&(l=hi(l),l=l===l?l:0),ts(hi(a),l,f)}function h1(a,l,f){return l=Qi(l),f===t?(f=l,l=0):f=Qi(f),a=hi(a),_M(a,l,f)}function f1(a,l,f){if(f&&typeof f!="boolean"&&Rn(a,l,f)&&(l=f=t),f===t&&(typeof l=="boolean"?(f=l,l=t):typeof a=="boolean"&&(f=a,a=t)),a===t&&l===t?(a=0,l=1):(a=Qi(a),l===t?(l=a,a=0):l=Qi(l)),a>l){var y=a;a=l,l=y}if(f||a%1||l%1){var E=Fp();return Mn(a+E*(l-a+Wx("1e-"+((E+"").length-1))),l)}return uh(a,l)}var d1=Qs(function(a,l,f){return l=l.toLowerCase(),a+(f?pg(l):l)});function pg(a){return Fh(Rt(a).toLowerCase())}function mg(a){return a=Rt(a),a&&a.replace(it,iy).replace(Dx,"")}function p1(a,l,f){a=Rt(a),l=Wn(l);var y=a.length;f=f===t?y:ts(ht(f),0,y);var E=f;return f-=l.length,f>=0&&a.slice(f,E)==l}function m1(a){return a=Rt(a),a&&bt.test(a)?a.replace(be,ry):a}function g1(a){return a=Rt(a),a&&xl.test(a)?a.replace(Os,"\\$&"):a}var _1=Qs(function(a,l,f){return a+(f?"-":"")+l.toLowerCase()}),v1=Qs(function(a,l,f){return a+(f?" ":"")+l.toLowerCase()}),x1=vm("toLowerCase");function y1(a,l,f){a=Rt(a),l=ht(l);var y=l?Xs(a):0;if(!l||y>=l)return a;var E=(l-y)/2;return Zl(Nl(E),f)+a+Zl(Dl(E),f)}function M1(a,l,f){a=Rt(a),l=ht(l);var y=l?Xs(a):0;return l&&y<l?a+Zl(l-y,f):a}function S1(a,l,f){a=Rt(a),l=ht(l);var y=l?Xs(a):0;return l&&y<l?Zl(l-y,f)+a:a}function b1(a,l,f){return f||l==null?l=0:l&&(l=+l),Py(Rt(a).replace(Xa,""),l||0)}function E1(a,l,f){return(f?Rn(a,l,f):l===t)?l=1:l=ht(l),hh(Rt(a),l)}function w1(){var a=arguments,l=Rt(a[0]);return a.length<3?l:l.replace(a[1],a[2])}var T1=Qs(function(a,l,f){return a+(f?"_":"")+l.toLowerCase()});function A1(a,l,f){return f&&typeof f!="number"&&Rn(a,l,f)&&(l=f=t),f=f===t?Ee:f>>>0,f?(a=Rt(a),a&&(typeof l=="string"||l!=null&&!Dh(l))&&(l=Wn(l),!l&&Ws(a))?br(mi(a),0,f):a.split(l,f)):[]}var R1=Qs(function(a,l,f){return a+(f?" ":"")+Fh(l)});function C1(a,l,f){return a=Rt(a),f=f==null?0:ts(ht(f),0,a.length),l=Wn(l),a.slice(f,f+l.length)==l}function P1(a,l,f){var y=A.templateSettings;f&&Rn(a,l,f)&&(l=t),a=Rt(a),l=ac({},l,y,wm);var E=ac({},l.imports,y.imports,wm),C=dn(E),F=Zu(E,C),H,V,oe=0,le=l.interpolate||et,pe="__p += '",Re=Ku((l.escape||et).source+"|"+le.source+"|"+(le===Ri?I:et).source+"|"+(l.evaluate||et).source+"|$","g"),Ve="//# sourceURL="+(Ct.call(l,"sourceURL")?(l.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++zx+"]")+`
`;a.replace(Re,function($e,xt,St,qn,Cn,Yn){return St||(St=qn),pe+=a.slice(oe,Yn).replace(gt,sy),xt&&(H=!0,pe+=`' +
__e(`+xt+`) +
'`),Cn&&(V=!0,pe+=`';
`+Cn+`;
__p += '`),St&&(pe+=`' +
((__t = (`+St+`)) == null ? '' : __t) +
'`),oe=Yn+$e.length,$e}),pe+=`';
`;var Ke=Ct.call(l,"variable")&&l.variable;if(!Ke)pe=`with (obj) {
`+pe+`
}
`;else if(Iu.test(Ke))throw new at(c);pe=(V?pe.replace(It,""):pe).replace(G,"$1").replace(Ae,"$1;"),pe="function("+(Ke||"obj")+`) {
`+(Ke?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(H?", __e = _.escape":"")+(V?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+pe+`return __p
}`;var ft=_g(function(){return Tt(C,Ve+"return "+pe).apply(t,F)});if(ft.source=pe,Uh(ft))throw ft;return ft}function L1(a){return Rt(a).toLowerCase()}function I1(a){return Rt(a).toUpperCase()}function U1(a,l,f){if(a=Rt(a),a&&(f||l===t))return Tp(a);if(!a||!(l=Wn(l)))return a;var y=mi(a),E=mi(l),C=Ap(y,E),F=Rp(y,E)+1;return br(y,C,F).join("")}function D1(a,l,f){if(a=Rt(a),a&&(f||l===t))return a.slice(0,Pp(a)+1);if(!a||!(l=Wn(l)))return a;var y=mi(a),E=Rp(y,mi(l))+1;return br(y,0,E).join("")}function N1(a,l,f){if(a=Rt(a),a&&(f||l===t))return a.replace(Xa,"");if(!a||!(l=Wn(l)))return a;var y=mi(a),E=Ap(y,mi(l));return br(y,E).join("")}function O1(a,l){var f=D,y=J;if(Vt(l)){var E="separator"in l?l.separator:E;f="length"in l?ht(l.length):f,y="omission"in l?Wn(l.omission):y}a=Rt(a);var C=a.length;if(Ws(a)){var F=mi(a);C=F.length}if(f>=C)return a;var H=f-Xs(y);if(H<1)return y;var V=F?br(F,0,H).join(""):a.slice(0,H);if(E===t)return V+y;if(F&&(H+=V.length-H),Dh(E)){if(a.slice(H).search(E)){var oe,le=V;for(E.global||(E=Ku(E.source,Rt(Y.exec(E))+"g")),E.lastIndex=0;oe=E.exec(le);)var pe=oe.index;V=V.slice(0,pe===t?H:pe)}}else if(a.indexOf(Wn(E),H)!=H){var Re=V.lastIndexOf(E);Re>-1&&(V=V.slice(0,Re))}return V+y}function F1(a){return a=Rt(a),a&&Ce.test(a)?a.replace($,fy):a}var B1=Qs(function(a,l,f){return a+(f?" ":"")+l.toUpperCase()}),Fh=vm("toUpperCase");function gg(a,l,f){return a=Rt(a),l=f?t:l,l===t?oy(a)?my(a):Qx(a):a.match(l)||[]}var _g=_t(function(a,l){try{return kn(a,t,l)}catch(f){return Uh(f)?f:new at(f)}}),z1=Ji(function(a,l){return si(l,function(f){f=Li(f),Yi(a,f,Lh(a[f],a))}),a});function H1(a){var l=a==null?0:a.length,f=Je();return a=l?Ht(a,function(y){if(typeof y[1]!="function")throw new ai(o);return[f(y[0]),y[1]]}):[],_t(function(y){for(var E=-1;++E<l;){var C=a[E];if(kn(C[0],this,y))return kn(C[1],this,y)}})}function G1(a){return fM(li(a,m))}function Bh(a){return function(){return a}}function k1(a,l){return a==null||a!==a?l:a}var V1=ym(),W1=ym(!0);function Bn(a){return a}function zh(a){return Kp(typeof a=="function"?a:li(a,m))}function X1(a){return Qp(li(a,m))}function q1(a,l){return jp(a,li(l,m))}var Y1=_t(function(a,l){return function(f){return io(f,a,l)}}),Z1=_t(function(a,l){return function(f){return io(a,f,l)}});function Hh(a,l,f){var y=dn(l),E=Gl(l,y);f==null&&!(Vt(l)&&(E.length||!y.length))&&(f=l,l=a,a=this,E=Gl(l,dn(l)));var C=!(Vt(f)&&"chain"in f)||!!f.chain,F=$i(a);return si(E,function(H){var V=l[H];a[H]=V,F&&(a.prototype[H]=function(){var oe=this.__chain__;if(C||oe){var le=a(this.__wrapped__),pe=le.__actions__=Nn(this.__actions__);return pe.push({func:V,args:arguments,thisArg:a}),le.__chain__=oe,le}return V.apply(a,_r([this.value()],arguments))})}),a}function J1(){return vn._===this&&(vn._=My),this}function Gh(){}function K1(a){return a=ht(a),_t(function(l){return em(l,a)})}var $1=vh(Ht),Q1=vh(Mp),j1=vh(Vu);function vg(a){return wh(a)?Wu(Li(a)):CM(a)}function ew(a){return function(l){return a==null?t:ns(a,l)}}var tw=Sm(),nw=Sm(!0);function kh(){return[]}function Vh(){return!1}function iw(){return{}}function rw(){return""}function sw(){return!0}function aw(a,l){if(a=ht(a),a<1||a>ae)return[];var f=Ee,y=Mn(a,Ee);l=Je(l),a-=Ee;for(var E=Yu(y,l);++f<a;)l(f);return E}function ow(a){return ot(a)?Ht(a,Li):Xn(a)?[a]:Nn(Bm(Rt(a)))}function lw(a){var l=++xy;return Rt(a)+l}var cw=Yl(function(a,l){return a+l},0),uw=xh("ceil"),hw=Yl(function(a,l){return a/l},1),fw=xh("floor");function dw(a){return a&&a.length?Hl(a,Bn,rh):t}function pw(a,l){return a&&a.length?Hl(a,Je(l,2),rh):t}function mw(a){return Ep(a,Bn)}function gw(a,l){return Ep(a,Je(l,2))}function _w(a){return a&&a.length?Hl(a,Bn,lh):t}function vw(a,l){return a&&a.length?Hl(a,Je(l,2),lh):t}var xw=Yl(function(a,l){return a*l},1),yw=xh("round"),Mw=Yl(function(a,l){return a-l},0);function Sw(a){return a&&a.length?qu(a,Bn):0}function bw(a,l){return a&&a.length?qu(a,Je(l,2)):0}return A.after=Xb,A.ary=Jm,A.assign=IE,A.assignIn=cg,A.assignInWith=ac,A.assignWith=UE,A.at=DE,A.before=Km,A.bind=Lh,A.bindAll=z1,A.bindKey=$m,A.castArray=iE,A.chain=qm,A.chunk=fS,A.compact=dS,A.concat=pS,A.cond=H1,A.conforms=G1,A.constant=Bh,A.countBy=Sb,A.create=NE,A.curry=Qm,A.curryRight=jm,A.debounce=eg,A.defaults=OE,A.defaultsDeep=FE,A.defer=qb,A.delay=Yb,A.difference=mS,A.differenceBy=gS,A.differenceWith=_S,A.drop=vS,A.dropRight=xS,A.dropRightWhile=yS,A.dropWhile=MS,A.fill=SS,A.filter=Eb,A.flatMap=Ab,A.flatMapDeep=Rb,A.flatMapDepth=Cb,A.flatten=km,A.flattenDeep=bS,A.flattenDepth=ES,A.flip=Zb,A.flow=V1,A.flowRight=W1,A.fromPairs=wS,A.functions=WE,A.functionsIn=XE,A.groupBy=Pb,A.initial=AS,A.intersection=RS,A.intersectionBy=CS,A.intersectionWith=PS,A.invert=YE,A.invertBy=ZE,A.invokeMap=Ib,A.iteratee=zh,A.keyBy=Ub,A.keys=dn,A.keysIn=Fn,A.map=ec,A.mapKeys=KE,A.mapValues=$E,A.matches=X1,A.matchesProperty=q1,A.memoize=nc,A.merge=QE,A.mergeWith=ug,A.method=Y1,A.methodOf=Z1,A.mixin=Hh,A.negate=ic,A.nthArg=K1,A.omit=jE,A.omitBy=e1,A.once=Jb,A.orderBy=Db,A.over=$1,A.overArgs=Kb,A.overEvery=Q1,A.overSome=j1,A.partial=Ih,A.partialRight=tg,A.partition=Nb,A.pick=t1,A.pickBy=hg,A.property=vg,A.propertyOf=ew,A.pull=DS,A.pullAll=Wm,A.pullAllBy=NS,A.pullAllWith=OS,A.pullAt=FS,A.range=tw,A.rangeRight=nw,A.rearg=$b,A.reject=Bb,A.remove=BS,A.rest=Qb,A.reverse=Ch,A.sampleSize=Hb,A.set=i1,A.setWith=r1,A.shuffle=Gb,A.slice=zS,A.sortBy=Wb,A.sortedUniq=qS,A.sortedUniqBy=YS,A.split=A1,A.spread=jb,A.tail=ZS,A.take=JS,A.takeRight=KS,A.takeRightWhile=$S,A.takeWhile=QS,A.tap=db,A.throttle=eE,A.thru=jl,A.toArray=ag,A.toPairs=fg,A.toPairsIn=dg,A.toPath=ow,A.toPlainObject=lg,A.transform=s1,A.unary=tE,A.union=jS,A.unionBy=eb,A.unionWith=tb,A.uniq=nb,A.uniqBy=ib,A.uniqWith=rb,A.unset=a1,A.unzip=Ph,A.unzipWith=Xm,A.update=o1,A.updateWith=l1,A.values=ta,A.valuesIn=c1,A.without=sb,A.words=gg,A.wrap=nE,A.xor=ab,A.xorBy=ob,A.xorWith=lb,A.zip=cb,A.zipObject=ub,A.zipObjectDeep=hb,A.zipWith=fb,A.entries=fg,A.entriesIn=dg,A.extend=cg,A.extendWith=ac,Hh(A,A),A.add=cw,A.attempt=_g,A.camelCase=d1,A.capitalize=pg,A.ceil=uw,A.clamp=u1,A.clone=rE,A.cloneDeep=aE,A.cloneDeepWith=oE,A.cloneWith=sE,A.conformsTo=lE,A.deburr=mg,A.defaultTo=k1,A.divide=hw,A.endsWith=p1,A.eq=_i,A.escape=m1,A.escapeRegExp=g1,A.every=bb,A.find=wb,A.findIndex=Hm,A.findKey=BE,A.findLast=Tb,A.findLastIndex=Gm,A.findLastKey=zE,A.floor=fw,A.forEach=Ym,A.forEachRight=Zm,A.forIn=HE,A.forInRight=GE,A.forOwn=kE,A.forOwnRight=VE,A.get=Nh,A.gt=cE,A.gte=uE,A.has=qE,A.hasIn=Oh,A.head=Vm,A.identity=Bn,A.includes=Lb,A.indexOf=TS,A.inRange=h1,A.invoke=JE,A.isArguments=ss,A.isArray=ot,A.isArrayBuffer=hE,A.isArrayLike=On,A.isArrayLikeObject=Jt,A.isBoolean=fE,A.isBuffer=Er,A.isDate=dE,A.isElement=pE,A.isEmpty=mE,A.isEqual=gE,A.isEqualWith=_E,A.isError=Uh,A.isFinite=vE,A.isFunction=$i,A.isInteger=ng,A.isLength=rc,A.isMap=ig,A.isMatch=xE,A.isMatchWith=yE,A.isNaN=ME,A.isNative=SE,A.isNil=EE,A.isNull=bE,A.isNumber=rg,A.isObject=Vt,A.isObjectLike=qt,A.isPlainObject=co,A.isRegExp=Dh,A.isSafeInteger=wE,A.isSet=sg,A.isString=sc,A.isSymbol=Xn,A.isTypedArray=ea,A.isUndefined=TE,A.isWeakMap=AE,A.isWeakSet=RE,A.join=LS,A.kebabCase=_1,A.last=ui,A.lastIndexOf=IS,A.lowerCase=v1,A.lowerFirst=x1,A.lt=CE,A.lte=PE,A.max=dw,A.maxBy=pw,A.mean=mw,A.meanBy=gw,A.min=_w,A.minBy=vw,A.stubArray=kh,A.stubFalse=Vh,A.stubObject=iw,A.stubString=rw,A.stubTrue=sw,A.multiply=xw,A.nth=US,A.noConflict=J1,A.noop=Gh,A.now=tc,A.pad=y1,A.padEnd=M1,A.padStart=S1,A.parseInt=b1,A.random=f1,A.reduce=Ob,A.reduceRight=Fb,A.repeat=E1,A.replace=w1,A.result=n1,A.round=yw,A.runInContext=k,A.sample=zb,A.size=kb,A.snakeCase=T1,A.some=Vb,A.sortedIndex=HS,A.sortedIndexBy=GS,A.sortedIndexOf=kS,A.sortedLastIndex=VS,A.sortedLastIndexBy=WS,A.sortedLastIndexOf=XS,A.startCase=R1,A.startsWith=C1,A.subtract=Mw,A.sum=Sw,A.sumBy=bw,A.template=P1,A.times=aw,A.toFinite=Qi,A.toInteger=ht,A.toLength=og,A.toLower=L1,A.toNumber=hi,A.toSafeInteger=LE,A.toString=Rt,A.toUpper=I1,A.trim=U1,A.trimEnd=D1,A.trimStart=N1,A.truncate=O1,A.unescape=F1,A.uniqueId=lw,A.upperCase=B1,A.upperFirst=Fh,A.each=Ym,A.eachRight=Zm,A.first=Vm,Hh(A,function(){var a={};return Ci(A,function(l,f){Ct.call(A.prototype,f)||(a[f]=l)}),a}(),{chain:!1}),A.VERSION=n,si(["bind","bindKey","curry","curryRight","partial","partialRight"],function(a){A[a].placeholder=A}),si(["drop","take"],function(a,l){Mt.prototype[a]=function(f){f=f===t?1:cn(ht(f),0);var y=this.__filtered__&&!l?new Mt(this):this.clone();return y.__filtered__?y.__takeCount__=Mn(f,y.__takeCount__):y.__views__.push({size:Mn(f,Ee),type:a+(y.__dir__<0?"Right":"")}),y},Mt.prototype[a+"Right"]=function(f){return this.reverse()[a](f).reverse()}}),si(["filter","map","takeWhile"],function(a,l){var f=l+1,y=f==Z||f==he;Mt.prototype[a]=function(E){var C=this.clone();return C.__iteratees__.push({iteratee:Je(E,3),type:f}),C.__filtered__=C.__filtered__||y,C}}),si(["head","last"],function(a,l){var f="take"+(l?"Right":"");Mt.prototype[a]=function(){return this[f](1).value()[0]}}),si(["initial","tail"],function(a,l){var f="drop"+(l?"":"Right");Mt.prototype[a]=function(){return this.__filtered__?new Mt(this):this[f](1)}}),Mt.prototype.compact=function(){return this.filter(Bn)},Mt.prototype.find=function(a){return this.filter(a).head()},Mt.prototype.findLast=function(a){return this.reverse().find(a)},Mt.prototype.invokeMap=_t(function(a,l){return typeof a=="function"?new Mt(this):this.map(function(f){return io(f,a,l)})}),Mt.prototype.reject=function(a){return this.filter(ic(Je(a)))},Mt.prototype.slice=function(a,l){a=ht(a);var f=this;return f.__filtered__&&(a>0||l<0)?new Mt(f):(a<0?f=f.takeRight(-a):a&&(f=f.drop(a)),l!==t&&(l=ht(l),f=l<0?f.dropRight(-l):f.take(l-a)),f)},Mt.prototype.takeRightWhile=function(a){return this.reverse().takeWhile(a).reverse()},Mt.prototype.toArray=function(){return this.take(Ee)},Ci(Mt.prototype,function(a,l){var f=/^(?:filter|find|map|reject)|While$/.test(l),y=/^(?:head|last)$/.test(l),E=A[y?"take"+(l=="last"?"Right":""):l],C=y||/^find/.test(l);E&&(A.prototype[l]=function(){var F=this.__wrapped__,H=y?[1]:arguments,V=F instanceof Mt,oe=H[0],le=V||ot(F),pe=function(xt){var St=E.apply(A,_r([xt],H));return y&&Re?St[0]:St};le&&f&&typeof oe=="function"&&oe.length!=1&&(V=le=!1);var Re=this.__chain__,Ve=!!this.__actions__.length,Ke=C&&!Re,ft=V&&!Ve;if(!C&&le){F=ft?F:new Mt(this);var $e=a.apply(F,H);return $e.__actions__.push({func:jl,args:[pe],thisArg:t}),new oi($e,Re)}return Ke&&ft?a.apply(this,H):($e=this.thru(pe),Ke?y?$e.value()[0]:$e.value():$e)})}),si(["pop","push","shift","sort","splice","unshift"],function(a){var l=wl[a],f=/^(?:push|sort|unshift)$/.test(a)?"tap":"thru",y=/^(?:pop|shift)$/.test(a);A.prototype[a]=function(){var E=arguments;if(y&&!this.__chain__){var C=this.value();return l.apply(ot(C)?C:[],E)}return this[f](function(F){return l.apply(ot(F)?F:[],E)})}}),Ci(Mt.prototype,function(a,l){var f=A[l];if(f){var y=f.name+"";Ct.call(Js,y)||(Js[y]=[]),Js[y].push({name:l,func:f})}}),Js[ql(t,_).name]=[{name:"wrapper",func:t}],Mt.prototype.clone=Fy,Mt.prototype.reverse=By,Mt.prototype.value=zy,A.prototype.at=pb,A.prototype.chain=mb,A.prototype.commit=gb,A.prototype.next=_b,A.prototype.plant=xb,A.prototype.reverse=yb,A.prototype.toJSON=A.prototype.valueOf=A.prototype.value=Mb,A.prototype.first=A.prototype.head,Ka&&(A.prototype[Ka]=vb),A},qs=gy();$r?(($r.exports=qs)._=qs,zu._=qs):vn._=qs}).call(Mo)})(hu,hu.exports);hu.exports;new st;new st;new gn;function NU(r){let e,t;return e=new jI({}),{c(){Ir(e.$$.fragment)},l(n){Ts(e.$$.fragment,n)},m(n,i){Ur(e,n,i),t=!0},i(n){t||(jt(e.$$.fragment,n),t=!0)},o(n){an(e.$$.fragment,n),t=!1},d(n){Dr(e,n)}}}function OU(r){let e,t;return e=new $I({}),{c(){Ir(e.$$.fragment)},l(n){Ts(e.$$.fragment,n)},m(n,i){Ur(e,n,i),t=!0},i(n){t||(jt(e.$$.fragment,n),t=!0)},o(n){an(e.$$.fragment,n),t=!1},d(n){Dr(e,n)}}}function FU(r){let e,t,n='<source src="/ambience.mp3" type="audio/mpeg"/>',i,s,o,c,u,h,d,m,p,g,v,M,x=Lw;const _=[OU,NU],b=[];function S(R,N){return R[3]?0:1}o=S(r),c=b[o]=_[o](r),h=new JI({});var w=r[2];function P(R){return{props:{system:R[0]}}}return w&&(m=Sg(w,P(r))),{c(){e=So(),t=wf("audio"),t.innerHTML=n,i=So(),s=wf("button"),c.c(),u=So(),Ir(h.$$.fragment),d=So(),m&&Ir(m.$$.fragment),p=La(),this.h()},l(R){e=bo(R),t=Tf(R,"AUDIO",{["data-svelte-h"]:!0}),n0(t)!=="svelte-1h6huv7"&&(t.innerHTML=n),i=bo(R),s=Tf(R,"BUTTON",{class:!0});var N=Io(s);c.l(N),N.forEach(mn),u=bo(R),Ts(h.$$.fragment,R),d=bo(R),m&&Ts(m.$$.fragment,R),p=La(),this.h()},h(){t.loop=!0,sn(s,"class","fixed w-8 h-8 top-6 right-6 text-white z-30 pl-[6px] rounded-full ring-2 ring-white cursor-pointer")},m(R,N){Kn(R,e,N),Kn(R,t,N),r[4](t),Kn(R,i,N),Kn(R,s,N),b[o].m(s,null),Kn(R,u,N),Ur(h,R,N),Kn(R,d,N),m&&Ur(m,R,N),Kn(R,p,N),g=!0,v||(M=i0(s,"click",r[5]),v=!0)},p(R,[N]){let B=o;o=S(R),o!==B&&(au(),an(b[B],1,1,()=>{b[B]=null}),su(),c=b[o],c||(c=b[o]=_[o](R),c.c()),jt(c,1),c.m(s,null));const T={};if(N&1&&(T.system=R[0]),N&4&&w!==(w=R[2])){if(m){au();const D=m;an(D.$$.fragment,1,0,()=>{Dr(D,1)}),su()}w?(m=Sg(w,P(R)),Ir(m.$$.fragment),jt(m.$$.fragment,1),Ur(m,p.parentNode,p)):m=null}else w&&m.$set(T)},i(R){g||(jt(x),jt(c),jt(h.$$.fragment,R),m&&jt(m.$$.fragment,R),g=!0)},o(R){an(x),an(c),an(h.$$.fragment,R),m&&an(m.$$.fragment,R),g=!1},d(R){R&&(mn(e),mn(t),mn(i),mn(s),mn(u),mn(d),mn(p)),r[4](null),b[o].d(),Dr(h,R),m&&Dr(m,R),v=!1,M()}}}function BU(r,e,t){let{data:n}=e,i,s,o=!1;dd(async()=>{t(2,s=(await Ew(()=>import("./ThrelteRoot.9ede4b8d.js"),["./ThrelteRoot.9ede4b8d.js","./scheduler.bea104e2.js","./index.520d9713.js","./index.b6975e4a.js","./each.3d878967.js","./singletons.a723794f.js"],import.meta.url)).default)});function c(h){Tw[h?"unshift":"push"](()=>{i=h,t(1,i)})}const u=()=>{t(3,o=!o),o?i?.play():i?.pause()};return r.$$set=h=>{"data"in h&&t(0,n=h.data)},[n,i,s,o,c,u]}class jU extends Xr{constructor(e){super(),qr(this,e,BU,FU,Wr,{data:0})}}export{AT as $,F0 as A,vt as B,dx as C,ox as D,Tn as E,fr as F,Un as G,Xd as H,Lv as I,Ui as J,Et as K,wd as L,Zr as M,Pv as N,wt as O,yn as P,gn as Q,No as R,Tv as S,wx as T,ki as U,ue as V,Ev as W,Vr as X,Iv as Y,Uv as Z,Ta as _,f0 as a,nI as a$,xu as a0,Eu as a1,Bo as a2,Jo as a3,Od as a4,Gn as a5,Qt as a6,lu as a7,_d as a8,Ao as a9,Di as aA,Ua as aB,Pa as aC,Cd as aD,X0 as aE,W0 as aF,Pu as aG,$U as aH,dr as aI,Uw as aJ,Dw as aK,iI as aL,sU as aM,il as aN,dv as aO,Ud as aP,Q0 as aQ,Dd as aR,dt as aS,Pt as aT,pt as aU,II as aV,hx as aW,In as aX,Oa as aY,Ge as aZ,Ex as a_,wn as aa,Oo as ab,Fo as ac,hr as ad,Rs as ae,tn as af,Zo as ag,Wa as ah,Yo as ai,Gi as aj,wi as ak,_l as al,Bd as am,ur as an,z2 as ao,Br as ap,$n as aq,Hf as ar,Qc as as,zf as at,Of as au,$c as av,q0 as aw,Bf as ax,Df as ay,Zc as az,di as b,QU as b0,Yv as b1,Zv as b2,Kv as b3,Cf as b4,xx as b5,vl as b6,c0 as b7,F2 as b8,XU as b9,JU as ba,YU as bb,ZU as bc,qU as bd,WU as be,kI as bf,WI as bg,ip as bh,Fa as bi,VU as bj,Ls as bk,ws as bl,jU as bm,ti as c,ct as d,bi as e,Nt as f,Ue as g,kw as h,bg as i,Ww as j,Vw as k,Pw as l,hd as m,Cw as n,sx as o,ax as p,qv as q,st as r,Fr as s,U as t,EL as u,PL as v,bu as w,en as x,kr as y,Fd as z};
